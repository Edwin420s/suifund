{
  "version": 3,
  "sources": ["../../base-x/src/index.js", "../../bs58/index.js", "browser-external:crypto", "../../tweetnacl/nacl-fast.js", "../../superstruct/src/error.ts", "../../superstruct/src/utils.ts", "../../superstruct/src/struct.ts", "../../superstruct/src/structs/utilities.ts", "../../superstruct/src/structs/types.ts", "../../superstruct/src/structs/coercions.ts", "../../superstruct/src/structs/refinements.ts", "../../@noble/hashes/src/crypto.ts", "../../@noble/hashes/src/utils.ts", "../../@noble/hashes/src/_blake.ts", "../../@noble/hashes/src/_md.ts", "../../@noble/hashes/src/_u64.ts", "../../@noble/hashes/src/blake2.ts", "../../@noble/hashes/src/blake2b.ts", "../../@noble/hashes/src/hmac.ts", "../../@noble/hashes/src/pbkdf2.ts", "../../@noble/hashes/src/sha2.ts", "../../@scure/base/index.ts", "../../@scure/bip39/esm/index.js", "../../@noble/hashes/src/sha512.ts"],
  "sourcesContent": ["'use strict'\r\n// base-x encoding / decoding\r\n// Copyright (c) 2018 base-x contributors\r\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\r\n// Distributed under the MIT software license, see the accompanying\r\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\r\nfunction base (ALPHABET) {\r\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\r\n  var BASE_MAP = new Uint8Array(256)\r\n  for (var j = 0; j < BASE_MAP.length; j++) {\r\n    BASE_MAP[j] = 255\r\n  }\r\n  for (var i = 0; i < ALPHABET.length; i++) {\r\n    var x = ALPHABET.charAt(i)\r\n    var xc = x.charCodeAt(0)\r\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\r\n    BASE_MAP[xc] = i\r\n  }\r\n  var BASE = ALPHABET.length\r\n  var LEADER = ALPHABET.charAt(0)\r\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\r\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\r\n  function encode (source) {\r\n    if (source instanceof Uint8Array) {\r\n    } else if (ArrayBuffer.isView(source)) {\r\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\r\n    } else if (Array.isArray(source)) {\r\n      source = Uint8Array.from(source)\r\n    }\r\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\r\n    if (source.length === 0) { return '' }\r\n        // Skip & count leading zeroes.\r\n    var zeroes = 0\r\n    var length = 0\r\n    var pbegin = 0\r\n    var pend = source.length\r\n    while (pbegin !== pend && source[pbegin] === 0) {\r\n      pbegin++\r\n      zeroes++\r\n    }\r\n        // Allocate enough space in big-endian base58 representation.\r\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\r\n    var b58 = new Uint8Array(size)\r\n        // Process the bytes.\r\n    while (pbegin !== pend) {\r\n      var carry = source[pbegin]\r\n            // Apply \"b58 = b58 * 256 + ch\".\r\n      var i = 0\r\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\r\n        carry += (256 * b58[it1]) >>> 0\r\n        b58[it1] = (carry % BASE) >>> 0\r\n        carry = (carry / BASE) >>> 0\r\n      }\r\n      if (carry !== 0) { throw new Error('Non-zero carry') }\r\n      length = i\r\n      pbegin++\r\n    }\r\n        // Skip leading zeroes in base58 result.\r\n    var it2 = size - length\r\n    while (it2 !== size && b58[it2] === 0) {\r\n      it2++\r\n    }\r\n        // Translate the result into a string.\r\n    var str = LEADER.repeat(zeroes)\r\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\r\n    return str\r\n  }\r\n  function decodeUnsafe (source) {\r\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\r\n    if (source.length === 0) { return new Uint8Array() }\r\n    var psz = 0\r\n        // Skip and count leading '1's.\r\n    var zeroes = 0\r\n    var length = 0\r\n    while (source[psz] === LEADER) {\r\n      zeroes++\r\n      psz++\r\n    }\r\n        // Allocate enough space in big-endian base256 representation.\r\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\r\n    var b256 = new Uint8Array(size)\r\n        // Process the characters.\r\n    while (source[psz]) {\r\n            // Find code of next character\r\n      var charCode = source.charCodeAt(psz)\r\n            // Base map can not be indexed using char code\r\n      if (charCode > 255) { return }\r\n            // Decode character\r\n      var carry = BASE_MAP[charCode]\r\n            // Invalid character\r\n      if (carry === 255) { return }\r\n      var i = 0\r\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\r\n        carry += (BASE * b256[it3]) >>> 0\r\n        b256[it3] = (carry % 256) >>> 0\r\n        carry = (carry / 256) >>> 0\r\n      }\r\n      if (carry !== 0) { throw new Error('Non-zero carry') }\r\n      length = i\r\n      psz++\r\n    }\r\n        // Skip leading zeroes in b256.\r\n    var it4 = size - length\r\n    while (it4 !== size && b256[it4] === 0) {\r\n      it4++\r\n    }\r\n    var vch = new Uint8Array(zeroes + (size - it4))\r\n    var j = zeroes\r\n    while (it4 !== size) {\r\n      vch[j++] = b256[it4++]\r\n    }\r\n    return vch\r\n  }\r\n  function decode (string) {\r\n    var buffer = decodeUnsafe(string)\r\n    if (buffer) { return buffer }\r\n    throw new Error('Non-base' + BASE + ' character')\r\n  }\r\n  return {\r\n    encode: encode,\r\n    decodeUnsafe: decodeUnsafe,\r\n    decode: decode\r\n  }\r\n}\r\nmodule.exports = base\r\n", "const basex = require('base-x')\r\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\r\n\r\nmodule.exports = basex(ALPHABET)\r\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"crypto\" has been externalized for browser compatibility. Cannot access \"crypto.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "(function(nacl) {\r\n'use strict';\r\n\r\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\r\n// Public domain.\r\n//\r\n// Implementation derived from TweetNaCl version 20140427.\r\n// See for details: http://tweetnacl.cr.yp.to/\r\n\r\nvar gf = function(init) {\r\n  var i, r = new Float64Array(16);\r\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\r\n  return r;\r\n};\r\n\r\n//  Pluggable, initialized in high-level API below.\r\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\r\n\r\nvar _0 = new Uint8Array(16);\r\nvar _9 = new Uint8Array(32); _9[0] = 9;\r\n\r\nvar gf0 = gf(),\r\n    gf1 = gf([1]),\r\n    _121665 = gf([0xdb41, 1]),\r\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\r\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\r\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\r\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\r\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\r\n\r\nfunction ts64(x, i, h, l) {\r\n  x[i]   = (h >> 24) & 0xff;\r\n  x[i+1] = (h >> 16) & 0xff;\r\n  x[i+2] = (h >>  8) & 0xff;\r\n  x[i+3] = h & 0xff;\r\n  x[i+4] = (l >> 24)  & 0xff;\r\n  x[i+5] = (l >> 16)  & 0xff;\r\n  x[i+6] = (l >>  8)  & 0xff;\r\n  x[i+7] = l & 0xff;\r\n}\r\n\r\nfunction vn(x, xi, y, yi, n) {\r\n  var i,d = 0;\r\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\r\n  return (1 & ((d - 1) >>> 8)) - 1;\r\n}\r\n\r\nfunction crypto_verify_16(x, xi, y, yi) {\r\n  return vn(x,xi,y,yi,16);\r\n}\r\n\r\nfunction crypto_verify_32(x, xi, y, yi) {\r\n  return vn(x,xi,y,yi,32);\r\n}\r\n\r\nfunction core_salsa20(o, p, k, c) {\r\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\r\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\r\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\r\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\r\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\r\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\r\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\r\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\r\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\r\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\r\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\r\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\r\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\r\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\r\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\r\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\r\n\r\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\r\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\r\n      x15 = j15, u;\r\n\r\n  for (var i = 0; i < 20; i += 2) {\r\n    u = x0 + x12 | 0;\r\n    x4 ^= u<<7 | u>>>(32-7);\r\n    u = x4 + x0 | 0;\r\n    x8 ^= u<<9 | u>>>(32-9);\r\n    u = x8 + x4 | 0;\r\n    x12 ^= u<<13 | u>>>(32-13);\r\n    u = x12 + x8 | 0;\r\n    x0 ^= u<<18 | u>>>(32-18);\r\n\r\n    u = x5 + x1 | 0;\r\n    x9 ^= u<<7 | u>>>(32-7);\r\n    u = x9 + x5 | 0;\r\n    x13 ^= u<<9 | u>>>(32-9);\r\n    u = x13 + x9 | 0;\r\n    x1 ^= u<<13 | u>>>(32-13);\r\n    u = x1 + x13 | 0;\r\n    x5 ^= u<<18 | u>>>(32-18);\r\n\r\n    u = x10 + x6 | 0;\r\n    x14 ^= u<<7 | u>>>(32-7);\r\n    u = x14 + x10 | 0;\r\n    x2 ^= u<<9 | u>>>(32-9);\r\n    u = x2 + x14 | 0;\r\n    x6 ^= u<<13 | u>>>(32-13);\r\n    u = x6 + x2 | 0;\r\n    x10 ^= u<<18 | u>>>(32-18);\r\n\r\n    u = x15 + x11 | 0;\r\n    x3 ^= u<<7 | u>>>(32-7);\r\n    u = x3 + x15 | 0;\r\n    x7 ^= u<<9 | u>>>(32-9);\r\n    u = x7 + x3 | 0;\r\n    x11 ^= u<<13 | u>>>(32-13);\r\n    u = x11 + x7 | 0;\r\n    x15 ^= u<<18 | u>>>(32-18);\r\n\r\n    u = x0 + x3 | 0;\r\n    x1 ^= u<<7 | u>>>(32-7);\r\n    u = x1 + x0 | 0;\r\n    x2 ^= u<<9 | u>>>(32-9);\r\n    u = x2 + x1 | 0;\r\n    x3 ^= u<<13 | u>>>(32-13);\r\n    u = x3 + x2 | 0;\r\n    x0 ^= u<<18 | u>>>(32-18);\r\n\r\n    u = x5 + x4 | 0;\r\n    x6 ^= u<<7 | u>>>(32-7);\r\n    u = x6 + x5 | 0;\r\n    x7 ^= u<<9 | u>>>(32-9);\r\n    u = x7 + x6 | 0;\r\n    x4 ^= u<<13 | u>>>(32-13);\r\n    u = x4 + x7 | 0;\r\n    x5 ^= u<<18 | u>>>(32-18);\r\n\r\n    u = x10 + x9 | 0;\r\n    x11 ^= u<<7 | u>>>(32-7);\r\n    u = x11 + x10 | 0;\r\n    x8 ^= u<<9 | u>>>(32-9);\r\n    u = x8 + x11 | 0;\r\n    x9 ^= u<<13 | u>>>(32-13);\r\n    u = x9 + x8 | 0;\r\n    x10 ^= u<<18 | u>>>(32-18);\r\n\r\n    u = x15 + x14 | 0;\r\n    x12 ^= u<<7 | u>>>(32-7);\r\n    u = x12 + x15 | 0;\r\n    x13 ^= u<<9 | u>>>(32-9);\r\n    u = x13 + x12 | 0;\r\n    x14 ^= u<<13 | u>>>(32-13);\r\n    u = x14 + x13 | 0;\r\n    x15 ^= u<<18 | u>>>(32-18);\r\n  }\r\n   x0 =  x0 +  j0 | 0;\r\n   x1 =  x1 +  j1 | 0;\r\n   x2 =  x2 +  j2 | 0;\r\n   x3 =  x3 +  j3 | 0;\r\n   x4 =  x4 +  j4 | 0;\r\n   x5 =  x5 +  j5 | 0;\r\n   x6 =  x6 +  j6 | 0;\r\n   x7 =  x7 +  j7 | 0;\r\n   x8 =  x8 +  j8 | 0;\r\n   x9 =  x9 +  j9 | 0;\r\n  x10 = x10 + j10 | 0;\r\n  x11 = x11 + j11 | 0;\r\n  x12 = x12 + j12 | 0;\r\n  x13 = x13 + j13 | 0;\r\n  x14 = x14 + j14 | 0;\r\n  x15 = x15 + j15 | 0;\r\n\r\n  o[ 0] = x0 >>>  0 & 0xff;\r\n  o[ 1] = x0 >>>  8 & 0xff;\r\n  o[ 2] = x0 >>> 16 & 0xff;\r\n  o[ 3] = x0 >>> 24 & 0xff;\r\n\r\n  o[ 4] = x1 >>>  0 & 0xff;\r\n  o[ 5] = x1 >>>  8 & 0xff;\r\n  o[ 6] = x1 >>> 16 & 0xff;\r\n  o[ 7] = x1 >>> 24 & 0xff;\r\n\r\n  o[ 8] = x2 >>>  0 & 0xff;\r\n  o[ 9] = x2 >>>  8 & 0xff;\r\n  o[10] = x2 >>> 16 & 0xff;\r\n  o[11] = x2 >>> 24 & 0xff;\r\n\r\n  o[12] = x3 >>>  0 & 0xff;\r\n  o[13] = x3 >>>  8 & 0xff;\r\n  o[14] = x3 >>> 16 & 0xff;\r\n  o[15] = x3 >>> 24 & 0xff;\r\n\r\n  o[16] = x4 >>>  0 & 0xff;\r\n  o[17] = x4 >>>  8 & 0xff;\r\n  o[18] = x4 >>> 16 & 0xff;\r\n  o[19] = x4 >>> 24 & 0xff;\r\n\r\n  o[20] = x5 >>>  0 & 0xff;\r\n  o[21] = x5 >>>  8 & 0xff;\r\n  o[22] = x5 >>> 16 & 0xff;\r\n  o[23] = x5 >>> 24 & 0xff;\r\n\r\n  o[24] = x6 >>>  0 & 0xff;\r\n  o[25] = x6 >>>  8 & 0xff;\r\n  o[26] = x6 >>> 16 & 0xff;\r\n  o[27] = x6 >>> 24 & 0xff;\r\n\r\n  o[28] = x7 >>>  0 & 0xff;\r\n  o[29] = x7 >>>  8 & 0xff;\r\n  o[30] = x7 >>> 16 & 0xff;\r\n  o[31] = x7 >>> 24 & 0xff;\r\n\r\n  o[32] = x8 >>>  0 & 0xff;\r\n  o[33] = x8 >>>  8 & 0xff;\r\n  o[34] = x8 >>> 16 & 0xff;\r\n  o[35] = x8 >>> 24 & 0xff;\r\n\r\n  o[36] = x9 >>>  0 & 0xff;\r\n  o[37] = x9 >>>  8 & 0xff;\r\n  o[38] = x9 >>> 16 & 0xff;\r\n  o[39] = x9 >>> 24 & 0xff;\r\n\r\n  o[40] = x10 >>>  0 & 0xff;\r\n  o[41] = x10 >>>  8 & 0xff;\r\n  o[42] = x10 >>> 16 & 0xff;\r\n  o[43] = x10 >>> 24 & 0xff;\r\n\r\n  o[44] = x11 >>>  0 & 0xff;\r\n  o[45] = x11 >>>  8 & 0xff;\r\n  o[46] = x11 >>> 16 & 0xff;\r\n  o[47] = x11 >>> 24 & 0xff;\r\n\r\n  o[48] = x12 >>>  0 & 0xff;\r\n  o[49] = x12 >>>  8 & 0xff;\r\n  o[50] = x12 >>> 16 & 0xff;\r\n  o[51] = x12 >>> 24 & 0xff;\r\n\r\n  o[52] = x13 >>>  0 & 0xff;\r\n  o[53] = x13 >>>  8 & 0xff;\r\n  o[54] = x13 >>> 16 & 0xff;\r\n  o[55] = x13 >>> 24 & 0xff;\r\n\r\n  o[56] = x14 >>>  0 & 0xff;\r\n  o[57] = x14 >>>  8 & 0xff;\r\n  o[58] = x14 >>> 16 & 0xff;\r\n  o[59] = x14 >>> 24 & 0xff;\r\n\r\n  o[60] = x15 >>>  0 & 0xff;\r\n  o[61] = x15 >>>  8 & 0xff;\r\n  o[62] = x15 >>> 16 & 0xff;\r\n  o[63] = x15 >>> 24 & 0xff;\r\n}\r\n\r\nfunction core_hsalsa20(o,p,k,c) {\r\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\r\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\r\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\r\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\r\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\r\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\r\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\r\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\r\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\r\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\r\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\r\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\r\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\r\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\r\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\r\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\r\n\r\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\r\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\r\n      x15 = j15, u;\r\n\r\n  for (var i = 0; i < 20; i += 2) {\r\n    u = x0 + x12 | 0;\r\n    x4 ^= u<<7 | u>>>(32-7);\r\n    u = x4 + x0 | 0;\r\n    x8 ^= u<<9 | u>>>(32-9);\r\n    u = x8 + x4 | 0;\r\n    x12 ^= u<<13 | u>>>(32-13);\r\n    u = x12 + x8 | 0;\r\n    x0 ^= u<<18 | u>>>(32-18);\r\n\r\n    u = x5 + x1 | 0;\r\n    x9 ^= u<<7 | u>>>(32-7);\r\n    u = x9 + x5 | 0;\r\n    x13 ^= u<<9 | u>>>(32-9);\r\n    u = x13 + x9 | 0;\r\n    x1 ^= u<<13 | u>>>(32-13);\r\n    u = x1 + x13 | 0;\r\n    x5 ^= u<<18 | u>>>(32-18);\r\n\r\n    u = x10 + x6 | 0;\r\n    x14 ^= u<<7 | u>>>(32-7);\r\n    u = x14 + x10 | 0;\r\n    x2 ^= u<<9 | u>>>(32-9);\r\n    u = x2 + x14 | 0;\r\n    x6 ^= u<<13 | u>>>(32-13);\r\n    u = x6 + x2 | 0;\r\n    x10 ^= u<<18 | u>>>(32-18);\r\n\r\n    u = x15 + x11 | 0;\r\n    x3 ^= u<<7 | u>>>(32-7);\r\n    u = x3 + x15 | 0;\r\n    x7 ^= u<<9 | u>>>(32-9);\r\n    u = x7 + x3 | 0;\r\n    x11 ^= u<<13 | u>>>(32-13);\r\n    u = x11 + x7 | 0;\r\n    x15 ^= u<<18 | u>>>(32-18);\r\n\r\n    u = x0 + x3 | 0;\r\n    x1 ^= u<<7 | u>>>(32-7);\r\n    u = x1 + x0 | 0;\r\n    x2 ^= u<<9 | u>>>(32-9);\r\n    u = x2 + x1 | 0;\r\n    x3 ^= u<<13 | u>>>(32-13);\r\n    u = x3 + x2 | 0;\r\n    x0 ^= u<<18 | u>>>(32-18);\r\n\r\n    u = x5 + x4 | 0;\r\n    x6 ^= u<<7 | u>>>(32-7);\r\n    u = x6 + x5 | 0;\r\n    x7 ^= u<<9 | u>>>(32-9);\r\n    u = x7 + x6 | 0;\r\n    x4 ^= u<<13 | u>>>(32-13);\r\n    u = x4 + x7 | 0;\r\n    x5 ^= u<<18 | u>>>(32-18);\r\n\r\n    u = x10 + x9 | 0;\r\n    x11 ^= u<<7 | u>>>(32-7);\r\n    u = x11 + x10 | 0;\r\n    x8 ^= u<<9 | u>>>(32-9);\r\n    u = x8 + x11 | 0;\r\n    x9 ^= u<<13 | u>>>(32-13);\r\n    u = x9 + x8 | 0;\r\n    x10 ^= u<<18 | u>>>(32-18);\r\n\r\n    u = x15 + x14 | 0;\r\n    x12 ^= u<<7 | u>>>(32-7);\r\n    u = x12 + x15 | 0;\r\n    x13 ^= u<<9 | u>>>(32-9);\r\n    u = x13 + x12 | 0;\r\n    x14 ^= u<<13 | u>>>(32-13);\r\n    u = x14 + x13 | 0;\r\n    x15 ^= u<<18 | u>>>(32-18);\r\n  }\r\n\r\n  o[ 0] = x0 >>>  0 & 0xff;\r\n  o[ 1] = x0 >>>  8 & 0xff;\r\n  o[ 2] = x0 >>> 16 & 0xff;\r\n  o[ 3] = x0 >>> 24 & 0xff;\r\n\r\n  o[ 4] = x5 >>>  0 & 0xff;\r\n  o[ 5] = x5 >>>  8 & 0xff;\r\n  o[ 6] = x5 >>> 16 & 0xff;\r\n  o[ 7] = x5 >>> 24 & 0xff;\r\n\r\n  o[ 8] = x10 >>>  0 & 0xff;\r\n  o[ 9] = x10 >>>  8 & 0xff;\r\n  o[10] = x10 >>> 16 & 0xff;\r\n  o[11] = x10 >>> 24 & 0xff;\r\n\r\n  o[12] = x15 >>>  0 & 0xff;\r\n  o[13] = x15 >>>  8 & 0xff;\r\n  o[14] = x15 >>> 16 & 0xff;\r\n  o[15] = x15 >>> 24 & 0xff;\r\n\r\n  o[16] = x6 >>>  0 & 0xff;\r\n  o[17] = x6 >>>  8 & 0xff;\r\n  o[18] = x6 >>> 16 & 0xff;\r\n  o[19] = x6 >>> 24 & 0xff;\r\n\r\n  o[20] = x7 >>>  0 & 0xff;\r\n  o[21] = x7 >>>  8 & 0xff;\r\n  o[22] = x7 >>> 16 & 0xff;\r\n  o[23] = x7 >>> 24 & 0xff;\r\n\r\n  o[24] = x8 >>>  0 & 0xff;\r\n  o[25] = x8 >>>  8 & 0xff;\r\n  o[26] = x8 >>> 16 & 0xff;\r\n  o[27] = x8 >>> 24 & 0xff;\r\n\r\n  o[28] = x9 >>>  0 & 0xff;\r\n  o[29] = x9 >>>  8 & 0xff;\r\n  o[30] = x9 >>> 16 & 0xff;\r\n  o[31] = x9 >>> 24 & 0xff;\r\n}\r\n\r\nfunction crypto_core_salsa20(out,inp,k,c) {\r\n  core_salsa20(out,inp,k,c);\r\n}\r\n\r\nfunction crypto_core_hsalsa20(out,inp,k,c) {\r\n  core_hsalsa20(out,inp,k,c);\r\n}\r\n\r\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\r\n            // \"expand 32-byte k\"\r\n\r\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\r\n  var z = new Uint8Array(16), x = new Uint8Array(64);\r\n  var u, i;\r\n  for (i = 0; i < 16; i++) z[i] = 0;\r\n  for (i = 0; i < 8; i++) z[i] = n[i];\r\n  while (b >= 64) {\r\n    crypto_core_salsa20(x,z,k,sigma);\r\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\r\n    u = 1;\r\n    for (i = 8; i < 16; i++) {\r\n      u = u + (z[i] & 0xff) | 0;\r\n      z[i] = u & 0xff;\r\n      u >>>= 8;\r\n    }\r\n    b -= 64;\r\n    cpos += 64;\r\n    mpos += 64;\r\n  }\r\n  if (b > 0) {\r\n    crypto_core_salsa20(x,z,k,sigma);\r\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\r\n  var z = new Uint8Array(16), x = new Uint8Array(64);\r\n  var u, i;\r\n  for (i = 0; i < 16; i++) z[i] = 0;\r\n  for (i = 0; i < 8; i++) z[i] = n[i];\r\n  while (b >= 64) {\r\n    crypto_core_salsa20(x,z,k,sigma);\r\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\r\n    u = 1;\r\n    for (i = 8; i < 16; i++) {\r\n      u = u + (z[i] & 0xff) | 0;\r\n      z[i] = u & 0xff;\r\n      u >>>= 8;\r\n    }\r\n    b -= 64;\r\n    cpos += 64;\r\n  }\r\n  if (b > 0) {\r\n    crypto_core_salsa20(x,z,k,sigma);\r\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction crypto_stream(c,cpos,d,n,k) {\r\n  var s = new Uint8Array(32);\r\n  crypto_core_hsalsa20(s,n,k,sigma);\r\n  var sn = new Uint8Array(8);\r\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\r\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\r\n}\r\n\r\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\r\n  var s = new Uint8Array(32);\r\n  crypto_core_hsalsa20(s,n,k,sigma);\r\n  var sn = new Uint8Array(8);\r\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\r\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\r\n}\r\n\r\n/*\r\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\r\n* https://github.com/floodyberry/poly1305-donna\r\n*/\r\n\r\nvar poly1305 = function(key) {\r\n  this.buffer = new Uint8Array(16);\r\n  this.r = new Uint16Array(10);\r\n  this.h = new Uint16Array(10);\r\n  this.pad = new Uint16Array(8);\r\n  this.leftover = 0;\r\n  this.fin = 0;\r\n\r\n  var t0, t1, t2, t3, t4, t5, t6, t7;\r\n\r\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\r\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\r\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\r\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\r\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\r\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\r\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\r\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\r\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\r\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\r\n\r\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\r\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\r\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\r\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\r\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\r\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\r\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\r\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\r\n};\r\n\r\npoly1305.prototype.blocks = function(m, mpos, bytes) {\r\n  var hibit = this.fin ? 0 : (1 << 11);\r\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\r\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\r\n\r\n  var h0 = this.h[0],\r\n      h1 = this.h[1],\r\n      h2 = this.h[2],\r\n      h3 = this.h[3],\r\n      h4 = this.h[4],\r\n      h5 = this.h[5],\r\n      h6 = this.h[6],\r\n      h7 = this.h[7],\r\n      h8 = this.h[8],\r\n      h9 = this.h[9];\r\n\r\n  var r0 = this.r[0],\r\n      r1 = this.r[1],\r\n      r2 = this.r[2],\r\n      r3 = this.r[3],\r\n      r4 = this.r[4],\r\n      r5 = this.r[5],\r\n      r6 = this.r[6],\r\n      r7 = this.r[7],\r\n      r8 = this.r[8],\r\n      r9 = this.r[9];\r\n\r\n  while (bytes >= 16) {\r\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\r\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\r\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\r\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\r\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\r\n    h5 += ((t4 >>>  1)) & 0x1fff;\r\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\r\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\r\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\r\n    h9 += ((t7 >>> 5)) | hibit;\r\n\r\n    c = 0;\r\n\r\n    d0 = c;\r\n    d0 += h0 * r0;\r\n    d0 += h1 * (5 * r9);\r\n    d0 += h2 * (5 * r8);\r\n    d0 += h3 * (5 * r7);\r\n    d0 += h4 * (5 * r6);\r\n    c = (d0 >>> 13); d0 &= 0x1fff;\r\n    d0 += h5 * (5 * r5);\r\n    d0 += h6 * (5 * r4);\r\n    d0 += h7 * (5 * r3);\r\n    d0 += h8 * (5 * r2);\r\n    d0 += h9 * (5 * r1);\r\n    c += (d0 >>> 13); d0 &= 0x1fff;\r\n\r\n    d1 = c;\r\n    d1 += h0 * r1;\r\n    d1 += h1 * r0;\r\n    d1 += h2 * (5 * r9);\r\n    d1 += h3 * (5 * r8);\r\n    d1 += h4 * (5 * r7);\r\n    c = (d1 >>> 13); d1 &= 0x1fff;\r\n    d1 += h5 * (5 * r6);\r\n    d1 += h6 * (5 * r5);\r\n    d1 += h7 * (5 * r4);\r\n    d1 += h8 * (5 * r3);\r\n    d1 += h9 * (5 * r2);\r\n    c += (d1 >>> 13); d1 &= 0x1fff;\r\n\r\n    d2 = c;\r\n    d2 += h0 * r2;\r\n    d2 += h1 * r1;\r\n    d2 += h2 * r0;\r\n    d2 += h3 * (5 * r9);\r\n    d2 += h4 * (5 * r8);\r\n    c = (d2 >>> 13); d2 &= 0x1fff;\r\n    d2 += h5 * (5 * r7);\r\n    d2 += h6 * (5 * r6);\r\n    d2 += h7 * (5 * r5);\r\n    d2 += h8 * (5 * r4);\r\n    d2 += h9 * (5 * r3);\r\n    c += (d2 >>> 13); d2 &= 0x1fff;\r\n\r\n    d3 = c;\r\n    d3 += h0 * r3;\r\n    d3 += h1 * r2;\r\n    d3 += h2 * r1;\r\n    d3 += h3 * r0;\r\n    d3 += h4 * (5 * r9);\r\n    c = (d3 >>> 13); d3 &= 0x1fff;\r\n    d3 += h5 * (5 * r8);\r\n    d3 += h6 * (5 * r7);\r\n    d3 += h7 * (5 * r6);\r\n    d3 += h8 * (5 * r5);\r\n    d3 += h9 * (5 * r4);\r\n    c += (d3 >>> 13); d3 &= 0x1fff;\r\n\r\n    d4 = c;\r\n    d4 += h0 * r4;\r\n    d4 += h1 * r3;\r\n    d4 += h2 * r2;\r\n    d4 += h3 * r1;\r\n    d4 += h4 * r0;\r\n    c = (d4 >>> 13); d4 &= 0x1fff;\r\n    d4 += h5 * (5 * r9);\r\n    d4 += h6 * (5 * r8);\r\n    d4 += h7 * (5 * r7);\r\n    d4 += h8 * (5 * r6);\r\n    d4 += h9 * (5 * r5);\r\n    c += (d4 >>> 13); d4 &= 0x1fff;\r\n\r\n    d5 = c;\r\n    d5 += h0 * r5;\r\n    d5 += h1 * r4;\r\n    d5 += h2 * r3;\r\n    d5 += h3 * r2;\r\n    d5 += h4 * r1;\r\n    c = (d5 >>> 13); d5 &= 0x1fff;\r\n    d5 += h5 * r0;\r\n    d5 += h6 * (5 * r9);\r\n    d5 += h7 * (5 * r8);\r\n    d5 += h8 * (5 * r7);\r\n    d5 += h9 * (5 * r6);\r\n    c += (d5 >>> 13); d5 &= 0x1fff;\r\n\r\n    d6 = c;\r\n    d6 += h0 * r6;\r\n    d6 += h1 * r5;\r\n    d6 += h2 * r4;\r\n    d6 += h3 * r3;\r\n    d6 += h4 * r2;\r\n    c = (d6 >>> 13); d6 &= 0x1fff;\r\n    d6 += h5 * r1;\r\n    d6 += h6 * r0;\r\n    d6 += h7 * (5 * r9);\r\n    d6 += h8 * (5 * r8);\r\n    d6 += h9 * (5 * r7);\r\n    c += (d6 >>> 13); d6 &= 0x1fff;\r\n\r\n    d7 = c;\r\n    d7 += h0 * r7;\r\n    d7 += h1 * r6;\r\n    d7 += h2 * r5;\r\n    d7 += h3 * r4;\r\n    d7 += h4 * r3;\r\n    c = (d7 >>> 13); d7 &= 0x1fff;\r\n    d7 += h5 * r2;\r\n    d7 += h6 * r1;\r\n    d7 += h7 * r0;\r\n    d7 += h8 * (5 * r9);\r\n    d7 += h9 * (5 * r8);\r\n    c += (d7 >>> 13); d7 &= 0x1fff;\r\n\r\n    d8 = c;\r\n    d8 += h0 * r8;\r\n    d8 += h1 * r7;\r\n    d8 += h2 * r6;\r\n    d8 += h3 * r5;\r\n    d8 += h4 * r4;\r\n    c = (d8 >>> 13); d8 &= 0x1fff;\r\n    d8 += h5 * r3;\r\n    d8 += h6 * r2;\r\n    d8 += h7 * r1;\r\n    d8 += h8 * r0;\r\n    d8 += h9 * (5 * r9);\r\n    c += (d8 >>> 13); d8 &= 0x1fff;\r\n\r\n    d9 = c;\r\n    d9 += h0 * r9;\r\n    d9 += h1 * r8;\r\n    d9 += h2 * r7;\r\n    d9 += h3 * r6;\r\n    d9 += h4 * r5;\r\n    c = (d9 >>> 13); d9 &= 0x1fff;\r\n    d9 += h5 * r4;\r\n    d9 += h6 * r3;\r\n    d9 += h7 * r2;\r\n    d9 += h8 * r1;\r\n    d9 += h9 * r0;\r\n    c += (d9 >>> 13); d9 &= 0x1fff;\r\n\r\n    c = (((c << 2) + c)) | 0;\r\n    c = (c + d0) | 0;\r\n    d0 = c & 0x1fff;\r\n    c = (c >>> 13);\r\n    d1 += c;\r\n\r\n    h0 = d0;\r\n    h1 = d1;\r\n    h2 = d2;\r\n    h3 = d3;\r\n    h4 = d4;\r\n    h5 = d5;\r\n    h6 = d6;\r\n    h7 = d7;\r\n    h8 = d8;\r\n    h9 = d9;\r\n\r\n    mpos += 16;\r\n    bytes -= 16;\r\n  }\r\n  this.h[0] = h0;\r\n  this.h[1] = h1;\r\n  this.h[2] = h2;\r\n  this.h[3] = h3;\r\n  this.h[4] = h4;\r\n  this.h[5] = h5;\r\n  this.h[6] = h6;\r\n  this.h[7] = h7;\r\n  this.h[8] = h8;\r\n  this.h[9] = h9;\r\n};\r\n\r\npoly1305.prototype.finish = function(mac, macpos) {\r\n  var g = new Uint16Array(10);\r\n  var c, mask, f, i;\r\n\r\n  if (this.leftover) {\r\n    i = this.leftover;\r\n    this.buffer[i++] = 1;\r\n    for (; i < 16; i++) this.buffer[i] = 0;\r\n    this.fin = 1;\r\n    this.blocks(this.buffer, 0, 16);\r\n  }\r\n\r\n  c = this.h[1] >>> 13;\r\n  this.h[1] &= 0x1fff;\r\n  for (i = 2; i < 10; i++) {\r\n    this.h[i] += c;\r\n    c = this.h[i] >>> 13;\r\n    this.h[i] &= 0x1fff;\r\n  }\r\n  this.h[0] += (c * 5);\r\n  c = this.h[0] >>> 13;\r\n  this.h[0] &= 0x1fff;\r\n  this.h[1] += c;\r\n  c = this.h[1] >>> 13;\r\n  this.h[1] &= 0x1fff;\r\n  this.h[2] += c;\r\n\r\n  g[0] = this.h[0] + 5;\r\n  c = g[0] >>> 13;\r\n  g[0] &= 0x1fff;\r\n  for (i = 1; i < 10; i++) {\r\n    g[i] = this.h[i] + c;\r\n    c = g[i] >>> 13;\r\n    g[i] &= 0x1fff;\r\n  }\r\n  g[9] -= (1 << 13);\r\n\r\n  mask = (c ^ 1) - 1;\r\n  for (i = 0; i < 10; i++) g[i] &= mask;\r\n  mask = ~mask;\r\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\r\n\r\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\r\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\r\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\r\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\r\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\r\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\r\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\r\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\r\n\r\n  f = this.h[0] + this.pad[0];\r\n  this.h[0] = f & 0xffff;\r\n  for (i = 1; i < 8; i++) {\r\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\r\n    this.h[i] = f & 0xffff;\r\n  }\r\n\r\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\r\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\r\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\r\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\r\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\r\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\r\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\r\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\r\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\r\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\r\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\r\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\r\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\r\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\r\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\r\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\r\n};\r\n\r\npoly1305.prototype.update = function(m, mpos, bytes) {\r\n  var i, want;\r\n\r\n  if (this.leftover) {\r\n    want = (16 - this.leftover);\r\n    if (want > bytes)\r\n      want = bytes;\r\n    for (i = 0; i < want; i++)\r\n      this.buffer[this.leftover + i] = m[mpos+i];\r\n    bytes -= want;\r\n    mpos += want;\r\n    this.leftover += want;\r\n    if (this.leftover < 16)\r\n      return;\r\n    this.blocks(this.buffer, 0, 16);\r\n    this.leftover = 0;\r\n  }\r\n\r\n  if (bytes >= 16) {\r\n    want = bytes - (bytes % 16);\r\n    this.blocks(m, mpos, want);\r\n    mpos += want;\r\n    bytes -= want;\r\n  }\r\n\r\n  if (bytes) {\r\n    for (i = 0; i < bytes; i++)\r\n      this.buffer[this.leftover + i] = m[mpos+i];\r\n    this.leftover += bytes;\r\n  }\r\n};\r\n\r\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\r\n  var s = new poly1305(k);\r\n  s.update(m, mpos, n);\r\n  s.finish(out, outpos);\r\n  return 0;\r\n}\r\n\r\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\r\n  var x = new Uint8Array(16);\r\n  crypto_onetimeauth(x,0,m,mpos,n,k);\r\n  return crypto_verify_16(h,hpos,x,0);\r\n}\r\n\r\nfunction crypto_secretbox(c,m,d,n,k) {\r\n  var i;\r\n  if (d < 32) return -1;\r\n  crypto_stream_xor(c,0,m,0,d,n,k);\r\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\r\n  for (i = 0; i < 16; i++) c[i] = 0;\r\n  return 0;\r\n}\r\n\r\nfunction crypto_secretbox_open(m,c,d,n,k) {\r\n  var i;\r\n  var x = new Uint8Array(32);\r\n  if (d < 32) return -1;\r\n  crypto_stream(x,0,32,n,k);\r\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\r\n  crypto_stream_xor(m,0,c,0,d,n,k);\r\n  for (i = 0; i < 32; i++) m[i] = 0;\r\n  return 0;\r\n}\r\n\r\nfunction set25519(r, a) {\r\n  var i;\r\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\r\n}\r\n\r\nfunction car25519(o) {\r\n  var i, v, c = 1;\r\n  for (i = 0; i < 16; i++) {\r\n    v = o[i] + c + 65535;\r\n    c = Math.floor(v / 65536);\r\n    o[i] = v - c * 65536;\r\n  }\r\n  o[0] += c-1 + 37 * (c-1);\r\n}\r\n\r\nfunction sel25519(p, q, b) {\r\n  var t, c = ~(b-1);\r\n  for (var i = 0; i < 16; i++) {\r\n    t = c & (p[i] ^ q[i]);\r\n    p[i] ^= t;\r\n    q[i] ^= t;\r\n  }\r\n}\r\n\r\nfunction pack25519(o, n) {\r\n  var i, j, b;\r\n  var m = gf(), t = gf();\r\n  for (i = 0; i < 16; i++) t[i] = n[i];\r\n  car25519(t);\r\n  car25519(t);\r\n  car25519(t);\r\n  for (j = 0; j < 2; j++) {\r\n    m[0] = t[0] - 0xffed;\r\n    for (i = 1; i < 15; i++) {\r\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\r\n      m[i-1] &= 0xffff;\r\n    }\r\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\r\n    b = (m[15]>>16) & 1;\r\n    m[14] &= 0xffff;\r\n    sel25519(t, m, 1-b);\r\n  }\r\n  for (i = 0; i < 16; i++) {\r\n    o[2*i] = t[i] & 0xff;\r\n    o[2*i+1] = t[i]>>8;\r\n  }\r\n}\r\n\r\nfunction neq25519(a, b) {\r\n  var c = new Uint8Array(32), d = new Uint8Array(32);\r\n  pack25519(c, a);\r\n  pack25519(d, b);\r\n  return crypto_verify_32(c, 0, d, 0);\r\n}\r\n\r\nfunction par25519(a) {\r\n  var d = new Uint8Array(32);\r\n  pack25519(d, a);\r\n  return d[0] & 1;\r\n}\r\n\r\nfunction unpack25519(o, n) {\r\n  var i;\r\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\r\n  o[15] &= 0x7fff;\r\n}\r\n\r\nfunction A(o, a, b) {\r\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\r\n}\r\n\r\nfunction Z(o, a, b) {\r\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\r\n}\r\n\r\nfunction M(o, a, b) {\r\n  var v, c,\r\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\r\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\r\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\r\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\r\n    b0 = b[0],\r\n    b1 = b[1],\r\n    b2 = b[2],\r\n    b3 = b[3],\r\n    b4 = b[4],\r\n    b5 = b[5],\r\n    b6 = b[6],\r\n    b7 = b[7],\r\n    b8 = b[8],\r\n    b9 = b[9],\r\n    b10 = b[10],\r\n    b11 = b[11],\r\n    b12 = b[12],\r\n    b13 = b[13],\r\n    b14 = b[14],\r\n    b15 = b[15];\r\n\r\n  v = a[0];\r\n  t0 += v * b0;\r\n  t1 += v * b1;\r\n  t2 += v * b2;\r\n  t3 += v * b3;\r\n  t4 += v * b4;\r\n  t5 += v * b5;\r\n  t6 += v * b6;\r\n  t7 += v * b7;\r\n  t8 += v * b8;\r\n  t9 += v * b9;\r\n  t10 += v * b10;\r\n  t11 += v * b11;\r\n  t12 += v * b12;\r\n  t13 += v * b13;\r\n  t14 += v * b14;\r\n  t15 += v * b15;\r\n  v = a[1];\r\n  t1 += v * b0;\r\n  t2 += v * b1;\r\n  t3 += v * b2;\r\n  t4 += v * b3;\r\n  t5 += v * b4;\r\n  t6 += v * b5;\r\n  t7 += v * b6;\r\n  t8 += v * b7;\r\n  t9 += v * b8;\r\n  t10 += v * b9;\r\n  t11 += v * b10;\r\n  t12 += v * b11;\r\n  t13 += v * b12;\r\n  t14 += v * b13;\r\n  t15 += v * b14;\r\n  t16 += v * b15;\r\n  v = a[2];\r\n  t2 += v * b0;\r\n  t3 += v * b1;\r\n  t4 += v * b2;\r\n  t5 += v * b3;\r\n  t6 += v * b4;\r\n  t7 += v * b5;\r\n  t8 += v * b6;\r\n  t9 += v * b7;\r\n  t10 += v * b8;\r\n  t11 += v * b9;\r\n  t12 += v * b10;\r\n  t13 += v * b11;\r\n  t14 += v * b12;\r\n  t15 += v * b13;\r\n  t16 += v * b14;\r\n  t17 += v * b15;\r\n  v = a[3];\r\n  t3 += v * b0;\r\n  t4 += v * b1;\r\n  t5 += v * b2;\r\n  t6 += v * b3;\r\n  t7 += v * b4;\r\n  t8 += v * b5;\r\n  t9 += v * b6;\r\n  t10 += v * b7;\r\n  t11 += v * b8;\r\n  t12 += v * b9;\r\n  t13 += v * b10;\r\n  t14 += v * b11;\r\n  t15 += v * b12;\r\n  t16 += v * b13;\r\n  t17 += v * b14;\r\n  t18 += v * b15;\r\n  v = a[4];\r\n  t4 += v * b0;\r\n  t5 += v * b1;\r\n  t6 += v * b2;\r\n  t7 += v * b3;\r\n  t8 += v * b4;\r\n  t9 += v * b5;\r\n  t10 += v * b6;\r\n  t11 += v * b7;\r\n  t12 += v * b8;\r\n  t13 += v * b9;\r\n  t14 += v * b10;\r\n  t15 += v * b11;\r\n  t16 += v * b12;\r\n  t17 += v * b13;\r\n  t18 += v * b14;\r\n  t19 += v * b15;\r\n  v = a[5];\r\n  t5 += v * b0;\r\n  t6 += v * b1;\r\n  t7 += v * b2;\r\n  t8 += v * b3;\r\n  t9 += v * b4;\r\n  t10 += v * b5;\r\n  t11 += v * b6;\r\n  t12 += v * b7;\r\n  t13 += v * b8;\r\n  t14 += v * b9;\r\n  t15 += v * b10;\r\n  t16 += v * b11;\r\n  t17 += v * b12;\r\n  t18 += v * b13;\r\n  t19 += v * b14;\r\n  t20 += v * b15;\r\n  v = a[6];\r\n  t6 += v * b0;\r\n  t7 += v * b1;\r\n  t8 += v * b2;\r\n  t9 += v * b3;\r\n  t10 += v * b4;\r\n  t11 += v * b5;\r\n  t12 += v * b6;\r\n  t13 += v * b7;\r\n  t14 += v * b8;\r\n  t15 += v * b9;\r\n  t16 += v * b10;\r\n  t17 += v * b11;\r\n  t18 += v * b12;\r\n  t19 += v * b13;\r\n  t20 += v * b14;\r\n  t21 += v * b15;\r\n  v = a[7];\r\n  t7 += v * b0;\r\n  t8 += v * b1;\r\n  t9 += v * b2;\r\n  t10 += v * b3;\r\n  t11 += v * b4;\r\n  t12 += v * b5;\r\n  t13 += v * b6;\r\n  t14 += v * b7;\r\n  t15 += v * b8;\r\n  t16 += v * b9;\r\n  t17 += v * b10;\r\n  t18 += v * b11;\r\n  t19 += v * b12;\r\n  t20 += v * b13;\r\n  t21 += v * b14;\r\n  t22 += v * b15;\r\n  v = a[8];\r\n  t8 += v * b0;\r\n  t9 += v * b1;\r\n  t10 += v * b2;\r\n  t11 += v * b3;\r\n  t12 += v * b4;\r\n  t13 += v * b5;\r\n  t14 += v * b6;\r\n  t15 += v * b7;\r\n  t16 += v * b8;\r\n  t17 += v * b9;\r\n  t18 += v * b10;\r\n  t19 += v * b11;\r\n  t20 += v * b12;\r\n  t21 += v * b13;\r\n  t22 += v * b14;\r\n  t23 += v * b15;\r\n  v = a[9];\r\n  t9 += v * b0;\r\n  t10 += v * b1;\r\n  t11 += v * b2;\r\n  t12 += v * b3;\r\n  t13 += v * b4;\r\n  t14 += v * b5;\r\n  t15 += v * b6;\r\n  t16 += v * b7;\r\n  t17 += v * b8;\r\n  t18 += v * b9;\r\n  t19 += v * b10;\r\n  t20 += v * b11;\r\n  t21 += v * b12;\r\n  t22 += v * b13;\r\n  t23 += v * b14;\r\n  t24 += v * b15;\r\n  v = a[10];\r\n  t10 += v * b0;\r\n  t11 += v * b1;\r\n  t12 += v * b2;\r\n  t13 += v * b3;\r\n  t14 += v * b4;\r\n  t15 += v * b5;\r\n  t16 += v * b6;\r\n  t17 += v * b7;\r\n  t18 += v * b8;\r\n  t19 += v * b9;\r\n  t20 += v * b10;\r\n  t21 += v * b11;\r\n  t22 += v * b12;\r\n  t23 += v * b13;\r\n  t24 += v * b14;\r\n  t25 += v * b15;\r\n  v = a[11];\r\n  t11 += v * b0;\r\n  t12 += v * b1;\r\n  t13 += v * b2;\r\n  t14 += v * b3;\r\n  t15 += v * b4;\r\n  t16 += v * b5;\r\n  t17 += v * b6;\r\n  t18 += v * b7;\r\n  t19 += v * b8;\r\n  t20 += v * b9;\r\n  t21 += v * b10;\r\n  t22 += v * b11;\r\n  t23 += v * b12;\r\n  t24 += v * b13;\r\n  t25 += v * b14;\r\n  t26 += v * b15;\r\n  v = a[12];\r\n  t12 += v * b0;\r\n  t13 += v * b1;\r\n  t14 += v * b2;\r\n  t15 += v * b3;\r\n  t16 += v * b4;\r\n  t17 += v * b5;\r\n  t18 += v * b6;\r\n  t19 += v * b7;\r\n  t20 += v * b8;\r\n  t21 += v * b9;\r\n  t22 += v * b10;\r\n  t23 += v * b11;\r\n  t24 += v * b12;\r\n  t25 += v * b13;\r\n  t26 += v * b14;\r\n  t27 += v * b15;\r\n  v = a[13];\r\n  t13 += v * b0;\r\n  t14 += v * b1;\r\n  t15 += v * b2;\r\n  t16 += v * b3;\r\n  t17 += v * b4;\r\n  t18 += v * b5;\r\n  t19 += v * b6;\r\n  t20 += v * b7;\r\n  t21 += v * b8;\r\n  t22 += v * b9;\r\n  t23 += v * b10;\r\n  t24 += v * b11;\r\n  t25 += v * b12;\r\n  t26 += v * b13;\r\n  t27 += v * b14;\r\n  t28 += v * b15;\r\n  v = a[14];\r\n  t14 += v * b0;\r\n  t15 += v * b1;\r\n  t16 += v * b2;\r\n  t17 += v * b3;\r\n  t18 += v * b4;\r\n  t19 += v * b5;\r\n  t20 += v * b6;\r\n  t21 += v * b7;\r\n  t22 += v * b8;\r\n  t23 += v * b9;\r\n  t24 += v * b10;\r\n  t25 += v * b11;\r\n  t26 += v * b12;\r\n  t27 += v * b13;\r\n  t28 += v * b14;\r\n  t29 += v * b15;\r\n  v = a[15];\r\n  t15 += v * b0;\r\n  t16 += v * b1;\r\n  t17 += v * b2;\r\n  t18 += v * b3;\r\n  t19 += v * b4;\r\n  t20 += v * b5;\r\n  t21 += v * b6;\r\n  t22 += v * b7;\r\n  t23 += v * b8;\r\n  t24 += v * b9;\r\n  t25 += v * b10;\r\n  t26 += v * b11;\r\n  t27 += v * b12;\r\n  t28 += v * b13;\r\n  t29 += v * b14;\r\n  t30 += v * b15;\r\n\r\n  t0  += 38 * t16;\r\n  t1  += 38 * t17;\r\n  t2  += 38 * t18;\r\n  t3  += 38 * t19;\r\n  t4  += 38 * t20;\r\n  t5  += 38 * t21;\r\n  t6  += 38 * t22;\r\n  t7  += 38 * t23;\r\n  t8  += 38 * t24;\r\n  t9  += 38 * t25;\r\n  t10 += 38 * t26;\r\n  t11 += 38 * t27;\r\n  t12 += 38 * t28;\r\n  t13 += 38 * t29;\r\n  t14 += 38 * t30;\r\n  // t15 left as is\r\n\r\n  // first car\r\n  c = 1;\r\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\r\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\r\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\r\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\r\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\r\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\r\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\r\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\r\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\r\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\r\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\r\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\r\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\r\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\r\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\r\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\r\n  t0 += c-1 + 37 * (c-1);\r\n\r\n  // second car\r\n  c = 1;\r\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\r\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\r\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\r\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\r\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\r\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\r\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\r\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\r\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\r\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\r\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\r\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\r\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\r\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\r\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\r\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\r\n  t0 += c-1 + 37 * (c-1);\r\n\r\n  o[ 0] = t0;\r\n  o[ 1] = t1;\r\n  o[ 2] = t2;\r\n  o[ 3] = t3;\r\n  o[ 4] = t4;\r\n  o[ 5] = t5;\r\n  o[ 6] = t6;\r\n  o[ 7] = t7;\r\n  o[ 8] = t8;\r\n  o[ 9] = t9;\r\n  o[10] = t10;\r\n  o[11] = t11;\r\n  o[12] = t12;\r\n  o[13] = t13;\r\n  o[14] = t14;\r\n  o[15] = t15;\r\n}\r\n\r\nfunction S(o, a) {\r\n  M(o, a, a);\r\n}\r\n\r\nfunction inv25519(o, i) {\r\n  var c = gf();\r\n  var a;\r\n  for (a = 0; a < 16; a++) c[a] = i[a];\r\n  for (a = 253; a >= 0; a--) {\r\n    S(c, c);\r\n    if(a !== 2 && a !== 4) M(c, c, i);\r\n  }\r\n  for (a = 0; a < 16; a++) o[a] = c[a];\r\n}\r\n\r\nfunction pow2523(o, i) {\r\n  var c = gf();\r\n  var a;\r\n  for (a = 0; a < 16; a++) c[a] = i[a];\r\n  for (a = 250; a >= 0; a--) {\r\n      S(c, c);\r\n      if(a !== 1) M(c, c, i);\r\n  }\r\n  for (a = 0; a < 16; a++) o[a] = c[a];\r\n}\r\n\r\nfunction crypto_scalarmult(q, n, p) {\r\n  var z = new Uint8Array(32);\r\n  var x = new Float64Array(80), r, i;\r\n  var a = gf(), b = gf(), c = gf(),\r\n      d = gf(), e = gf(), f = gf();\r\n  for (i = 0; i < 31; i++) z[i] = n[i];\r\n  z[31]=(n[31]&127)|64;\r\n  z[0]&=248;\r\n  unpack25519(x,p);\r\n  for (i = 0; i < 16; i++) {\r\n    b[i]=x[i];\r\n    d[i]=a[i]=c[i]=0;\r\n  }\r\n  a[0]=d[0]=1;\r\n  for (i=254; i>=0; --i) {\r\n    r=(z[i>>>3]>>>(i&7))&1;\r\n    sel25519(a,b,r);\r\n    sel25519(c,d,r);\r\n    A(e,a,c);\r\n    Z(a,a,c);\r\n    A(c,b,d);\r\n    Z(b,b,d);\r\n    S(d,e);\r\n    S(f,a);\r\n    M(a,c,a);\r\n    M(c,b,e);\r\n    A(e,a,c);\r\n    Z(a,a,c);\r\n    S(b,a);\r\n    Z(c,d,f);\r\n    M(a,c,_121665);\r\n    A(a,a,d);\r\n    M(c,c,a);\r\n    M(a,d,f);\r\n    M(d,b,x);\r\n    S(b,e);\r\n    sel25519(a,b,r);\r\n    sel25519(c,d,r);\r\n  }\r\n  for (i = 0; i < 16; i++) {\r\n    x[i+16]=a[i];\r\n    x[i+32]=c[i];\r\n    x[i+48]=b[i];\r\n    x[i+64]=d[i];\r\n  }\r\n  var x32 = x.subarray(32);\r\n  var x16 = x.subarray(16);\r\n  inv25519(x32,x32);\r\n  M(x16,x16,x32);\r\n  pack25519(q,x16);\r\n  return 0;\r\n}\r\n\r\nfunction crypto_scalarmult_base(q, n) {\r\n  return crypto_scalarmult(q, n, _9);\r\n}\r\n\r\nfunction crypto_box_keypair(y, x) {\r\n  randombytes(x, 32);\r\n  return crypto_scalarmult_base(y, x);\r\n}\r\n\r\nfunction crypto_box_beforenm(k, y, x) {\r\n  var s = new Uint8Array(32);\r\n  crypto_scalarmult(s, x, y);\r\n  return crypto_core_hsalsa20(k, _0, s, sigma);\r\n}\r\n\r\nvar crypto_box_afternm = crypto_secretbox;\r\nvar crypto_box_open_afternm = crypto_secretbox_open;\r\n\r\nfunction crypto_box(c, m, d, n, y, x) {\r\n  var k = new Uint8Array(32);\r\n  crypto_box_beforenm(k, y, x);\r\n  return crypto_box_afternm(c, m, d, n, k);\r\n}\r\n\r\nfunction crypto_box_open(m, c, d, n, y, x) {\r\n  var k = new Uint8Array(32);\r\n  crypto_box_beforenm(k, y, x);\r\n  return crypto_box_open_afternm(m, c, d, n, k);\r\n}\r\n\r\nvar K = [\r\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\r\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\r\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\r\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\r\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\r\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\r\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\r\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\r\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\r\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\r\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\r\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\r\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\r\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\r\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\r\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\r\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\r\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\r\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\r\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\r\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\r\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\r\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\r\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\r\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\r\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\r\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\r\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\r\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\r\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\r\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\r\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\r\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\r\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\r\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\r\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\r\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\r\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\r\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\r\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\r\n];\r\n\r\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\r\n  var wh = new Int32Array(16), wl = new Int32Array(16),\r\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\r\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\r\n      th, tl, i, j, h, l, a, b, c, d;\r\n\r\n  var ah0 = hh[0],\r\n      ah1 = hh[1],\r\n      ah2 = hh[2],\r\n      ah3 = hh[3],\r\n      ah4 = hh[4],\r\n      ah5 = hh[5],\r\n      ah6 = hh[6],\r\n      ah7 = hh[7],\r\n\r\n      al0 = hl[0],\r\n      al1 = hl[1],\r\n      al2 = hl[2],\r\n      al3 = hl[3],\r\n      al4 = hl[4],\r\n      al5 = hl[5],\r\n      al6 = hl[6],\r\n      al7 = hl[7];\r\n\r\n  var pos = 0;\r\n  while (n >= 128) {\r\n    for (i = 0; i < 16; i++) {\r\n      j = 8 * i + pos;\r\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\r\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\r\n    }\r\n    for (i = 0; i < 80; i++) {\r\n      bh0 = ah0;\r\n      bh1 = ah1;\r\n      bh2 = ah2;\r\n      bh3 = ah3;\r\n      bh4 = ah4;\r\n      bh5 = ah5;\r\n      bh6 = ah6;\r\n      bh7 = ah7;\r\n\r\n      bl0 = al0;\r\n      bl1 = al1;\r\n      bl2 = al2;\r\n      bl3 = al3;\r\n      bl4 = al4;\r\n      bl5 = al5;\r\n      bl6 = al6;\r\n      bl7 = al7;\r\n\r\n      // add\r\n      h = ah7;\r\n      l = al7;\r\n\r\n      a = l & 0xffff; b = l >>> 16;\r\n      c = h & 0xffff; d = h >>> 16;\r\n\r\n      // Sigma1\r\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\r\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\r\n\r\n      a += l & 0xffff; b += l >>> 16;\r\n      c += h & 0xffff; d += h >>> 16;\r\n\r\n      // Ch\r\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\r\n      l = (al4 & al5) ^ (~al4 & al6);\r\n\r\n      a += l & 0xffff; b += l >>> 16;\r\n      c += h & 0xffff; d += h >>> 16;\r\n\r\n      // K\r\n      h = K[i*2];\r\n      l = K[i*2+1];\r\n\r\n      a += l & 0xffff; b += l >>> 16;\r\n      c += h & 0xffff; d += h >>> 16;\r\n\r\n      // w\r\n      h = wh[i%16];\r\n      l = wl[i%16];\r\n\r\n      a += l & 0xffff; b += l >>> 16;\r\n      c += h & 0xffff; d += h >>> 16;\r\n\r\n      b += a >>> 16;\r\n      c += b >>> 16;\r\n      d += c >>> 16;\r\n\r\n      th = c & 0xffff | d << 16;\r\n      tl = a & 0xffff | b << 16;\r\n\r\n      // add\r\n      h = th;\r\n      l = tl;\r\n\r\n      a = l & 0xffff; b = l >>> 16;\r\n      c = h & 0xffff; d = h >>> 16;\r\n\r\n      // Sigma0\r\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\r\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\r\n\r\n      a += l & 0xffff; b += l >>> 16;\r\n      c += h & 0xffff; d += h >>> 16;\r\n\r\n      // Maj\r\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\r\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\r\n\r\n      a += l & 0xffff; b += l >>> 16;\r\n      c += h & 0xffff; d += h >>> 16;\r\n\r\n      b += a >>> 16;\r\n      c += b >>> 16;\r\n      d += c >>> 16;\r\n\r\n      bh7 = (c & 0xffff) | (d << 16);\r\n      bl7 = (a & 0xffff) | (b << 16);\r\n\r\n      // add\r\n      h = bh3;\r\n      l = bl3;\r\n\r\n      a = l & 0xffff; b = l >>> 16;\r\n      c = h & 0xffff; d = h >>> 16;\r\n\r\n      h = th;\r\n      l = tl;\r\n\r\n      a += l & 0xffff; b += l >>> 16;\r\n      c += h & 0xffff; d += h >>> 16;\r\n\r\n      b += a >>> 16;\r\n      c += b >>> 16;\r\n      d += c >>> 16;\r\n\r\n      bh3 = (c & 0xffff) | (d << 16);\r\n      bl3 = (a & 0xffff) | (b << 16);\r\n\r\n      ah1 = bh0;\r\n      ah2 = bh1;\r\n      ah3 = bh2;\r\n      ah4 = bh3;\r\n      ah5 = bh4;\r\n      ah6 = bh5;\r\n      ah7 = bh6;\r\n      ah0 = bh7;\r\n\r\n      al1 = bl0;\r\n      al2 = bl1;\r\n      al3 = bl2;\r\n      al4 = bl3;\r\n      al5 = bl4;\r\n      al6 = bl5;\r\n      al7 = bl6;\r\n      al0 = bl7;\r\n\r\n      if (i%16 === 15) {\r\n        for (j = 0; j < 16; j++) {\r\n          // add\r\n          h = wh[j];\r\n          l = wl[j];\r\n\r\n          a = l & 0xffff; b = l >>> 16;\r\n          c = h & 0xffff; d = h >>> 16;\r\n\r\n          h = wh[(j+9)%16];\r\n          l = wl[(j+9)%16];\r\n\r\n          a += l & 0xffff; b += l >>> 16;\r\n          c += h & 0xffff; d += h >>> 16;\r\n\r\n          // sigma0\r\n          th = wh[(j+1)%16];\r\n          tl = wl[(j+1)%16];\r\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\r\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\r\n\r\n          a += l & 0xffff; b += l >>> 16;\r\n          c += h & 0xffff; d += h >>> 16;\r\n\r\n          // sigma1\r\n          th = wh[(j+14)%16];\r\n          tl = wl[(j+14)%16];\r\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\r\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\r\n\r\n          a += l & 0xffff; b += l >>> 16;\r\n          c += h & 0xffff; d += h >>> 16;\r\n\r\n          b += a >>> 16;\r\n          c += b >>> 16;\r\n          d += c >>> 16;\r\n\r\n          wh[j] = (c & 0xffff) | (d << 16);\r\n          wl[j] = (a & 0xffff) | (b << 16);\r\n        }\r\n      }\r\n    }\r\n\r\n    // add\r\n    h = ah0;\r\n    l = al0;\r\n\r\n    a = l & 0xffff; b = l >>> 16;\r\n    c = h & 0xffff; d = h >>> 16;\r\n\r\n    h = hh[0];\r\n    l = hl[0];\r\n\r\n    a += l & 0xffff; b += l >>> 16;\r\n    c += h & 0xffff; d += h >>> 16;\r\n\r\n    b += a >>> 16;\r\n    c += b >>> 16;\r\n    d += c >>> 16;\r\n\r\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\r\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\r\n\r\n    h = ah1;\r\n    l = al1;\r\n\r\n    a = l & 0xffff; b = l >>> 16;\r\n    c = h & 0xffff; d = h >>> 16;\r\n\r\n    h = hh[1];\r\n    l = hl[1];\r\n\r\n    a += l & 0xffff; b += l >>> 16;\r\n    c += h & 0xffff; d += h >>> 16;\r\n\r\n    b += a >>> 16;\r\n    c += b >>> 16;\r\n    d += c >>> 16;\r\n\r\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\r\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\r\n\r\n    h = ah2;\r\n    l = al2;\r\n\r\n    a = l & 0xffff; b = l >>> 16;\r\n    c = h & 0xffff; d = h >>> 16;\r\n\r\n    h = hh[2];\r\n    l = hl[2];\r\n\r\n    a += l & 0xffff; b += l >>> 16;\r\n    c += h & 0xffff; d += h >>> 16;\r\n\r\n    b += a >>> 16;\r\n    c += b >>> 16;\r\n    d += c >>> 16;\r\n\r\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\r\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\r\n\r\n    h = ah3;\r\n    l = al3;\r\n\r\n    a = l & 0xffff; b = l >>> 16;\r\n    c = h & 0xffff; d = h >>> 16;\r\n\r\n    h = hh[3];\r\n    l = hl[3];\r\n\r\n    a += l & 0xffff; b += l >>> 16;\r\n    c += h & 0xffff; d += h >>> 16;\r\n\r\n    b += a >>> 16;\r\n    c += b >>> 16;\r\n    d += c >>> 16;\r\n\r\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\r\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\r\n\r\n    h = ah4;\r\n    l = al4;\r\n\r\n    a = l & 0xffff; b = l >>> 16;\r\n    c = h & 0xffff; d = h >>> 16;\r\n\r\n    h = hh[4];\r\n    l = hl[4];\r\n\r\n    a += l & 0xffff; b += l >>> 16;\r\n    c += h & 0xffff; d += h >>> 16;\r\n\r\n    b += a >>> 16;\r\n    c += b >>> 16;\r\n    d += c >>> 16;\r\n\r\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\r\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\r\n\r\n    h = ah5;\r\n    l = al5;\r\n\r\n    a = l & 0xffff; b = l >>> 16;\r\n    c = h & 0xffff; d = h >>> 16;\r\n\r\n    h = hh[5];\r\n    l = hl[5];\r\n\r\n    a += l & 0xffff; b += l >>> 16;\r\n    c += h & 0xffff; d += h >>> 16;\r\n\r\n    b += a >>> 16;\r\n    c += b >>> 16;\r\n    d += c >>> 16;\r\n\r\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\r\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\r\n\r\n    h = ah6;\r\n    l = al6;\r\n\r\n    a = l & 0xffff; b = l >>> 16;\r\n    c = h & 0xffff; d = h >>> 16;\r\n\r\n    h = hh[6];\r\n    l = hl[6];\r\n\r\n    a += l & 0xffff; b += l >>> 16;\r\n    c += h & 0xffff; d += h >>> 16;\r\n\r\n    b += a >>> 16;\r\n    c += b >>> 16;\r\n    d += c >>> 16;\r\n\r\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\r\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\r\n\r\n    h = ah7;\r\n    l = al7;\r\n\r\n    a = l & 0xffff; b = l >>> 16;\r\n    c = h & 0xffff; d = h >>> 16;\r\n\r\n    h = hh[7];\r\n    l = hl[7];\r\n\r\n    a += l & 0xffff; b += l >>> 16;\r\n    c += h & 0xffff; d += h >>> 16;\r\n\r\n    b += a >>> 16;\r\n    c += b >>> 16;\r\n    d += c >>> 16;\r\n\r\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\r\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\r\n\r\n    pos += 128;\r\n    n -= 128;\r\n  }\r\n\r\n  return n;\r\n}\r\n\r\nfunction crypto_hash(out, m, n) {\r\n  var hh = new Int32Array(8),\r\n      hl = new Int32Array(8),\r\n      x = new Uint8Array(256),\r\n      i, b = n;\r\n\r\n  hh[0] = 0x6a09e667;\r\n  hh[1] = 0xbb67ae85;\r\n  hh[2] = 0x3c6ef372;\r\n  hh[3] = 0xa54ff53a;\r\n  hh[4] = 0x510e527f;\r\n  hh[5] = 0x9b05688c;\r\n  hh[6] = 0x1f83d9ab;\r\n  hh[7] = 0x5be0cd19;\r\n\r\n  hl[0] = 0xf3bcc908;\r\n  hl[1] = 0x84caa73b;\r\n  hl[2] = 0xfe94f82b;\r\n  hl[3] = 0x5f1d36f1;\r\n  hl[4] = 0xade682d1;\r\n  hl[5] = 0x2b3e6c1f;\r\n  hl[6] = 0xfb41bd6b;\r\n  hl[7] = 0x137e2179;\r\n\r\n  crypto_hashblocks_hl(hh, hl, m, n);\r\n  n %= 128;\r\n\r\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\r\n  x[n] = 128;\r\n\r\n  n = 256-128*(n<112?1:0);\r\n  x[n-9] = 0;\r\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\r\n  crypto_hashblocks_hl(hh, hl, x, n);\r\n\r\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\r\n\r\n  return 0;\r\n}\r\n\r\nfunction add(p, q) {\r\n  var a = gf(), b = gf(), c = gf(),\r\n      d = gf(), e = gf(), f = gf(),\r\n      g = gf(), h = gf(), t = gf();\r\n\r\n  Z(a, p[1], p[0]);\r\n  Z(t, q[1], q[0]);\r\n  M(a, a, t);\r\n  A(b, p[0], p[1]);\r\n  A(t, q[0], q[1]);\r\n  M(b, b, t);\r\n  M(c, p[3], q[3]);\r\n  M(c, c, D2);\r\n  M(d, p[2], q[2]);\r\n  A(d, d, d);\r\n  Z(e, b, a);\r\n  Z(f, d, c);\r\n  A(g, d, c);\r\n  A(h, b, a);\r\n\r\n  M(p[0], e, f);\r\n  M(p[1], h, g);\r\n  M(p[2], g, f);\r\n  M(p[3], e, h);\r\n}\r\n\r\nfunction cswap(p, q, b) {\r\n  var i;\r\n  for (i = 0; i < 4; i++) {\r\n    sel25519(p[i], q[i], b);\r\n  }\r\n}\r\n\r\nfunction pack(r, p) {\r\n  var tx = gf(), ty = gf(), zi = gf();\r\n  inv25519(zi, p[2]);\r\n  M(tx, p[0], zi);\r\n  M(ty, p[1], zi);\r\n  pack25519(r, ty);\r\n  r[31] ^= par25519(tx) << 7;\r\n}\r\n\r\nfunction scalarmult(p, q, s) {\r\n  var b, i;\r\n  set25519(p[0], gf0);\r\n  set25519(p[1], gf1);\r\n  set25519(p[2], gf1);\r\n  set25519(p[3], gf0);\r\n  for (i = 255; i >= 0; --i) {\r\n    b = (s[(i/8)|0] >> (i&7)) & 1;\r\n    cswap(p, q, b);\r\n    add(q, p);\r\n    add(p, p);\r\n    cswap(p, q, b);\r\n  }\r\n}\r\n\r\nfunction scalarbase(p, s) {\r\n  var q = [gf(), gf(), gf(), gf()];\r\n  set25519(q[0], X);\r\n  set25519(q[1], Y);\r\n  set25519(q[2], gf1);\r\n  M(q[3], X, Y);\r\n  scalarmult(p, q, s);\r\n}\r\n\r\nfunction crypto_sign_keypair(pk, sk, seeded) {\r\n  var d = new Uint8Array(64);\r\n  var p = [gf(), gf(), gf(), gf()];\r\n  var i;\r\n\r\n  if (!seeded) randombytes(sk, 32);\r\n  crypto_hash(d, sk, 32);\r\n  d[0] &= 248;\r\n  d[31] &= 127;\r\n  d[31] |= 64;\r\n\r\n  scalarbase(p, d);\r\n  pack(pk, p);\r\n\r\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\r\n  return 0;\r\n}\r\n\r\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\r\n\r\nfunction modL(r, x) {\r\n  var carry, i, j, k;\r\n  for (i = 63; i >= 32; --i) {\r\n    carry = 0;\r\n    for (j = i - 32, k = i - 12; j < k; ++j) {\r\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\r\n      carry = Math.floor((x[j] + 128) / 256);\r\n      x[j] -= carry * 256;\r\n    }\r\n    x[j] += carry;\r\n    x[i] = 0;\r\n  }\r\n  carry = 0;\r\n  for (j = 0; j < 32; j++) {\r\n    x[j] += carry - (x[31] >> 4) * L[j];\r\n    carry = x[j] >> 8;\r\n    x[j] &= 255;\r\n  }\r\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\r\n  for (i = 0; i < 32; i++) {\r\n    x[i+1] += x[i] >> 8;\r\n    r[i] = x[i] & 255;\r\n  }\r\n}\r\n\r\nfunction reduce(r) {\r\n  var x = new Float64Array(64), i;\r\n  for (i = 0; i < 64; i++) x[i] = r[i];\r\n  for (i = 0; i < 64; i++) r[i] = 0;\r\n  modL(r, x);\r\n}\r\n\r\n// Note: difference from C - smlen returned, not passed as argument.\r\nfunction crypto_sign(sm, m, n, sk) {\r\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\r\n  var i, j, x = new Float64Array(64);\r\n  var p = [gf(), gf(), gf(), gf()];\r\n\r\n  crypto_hash(d, sk, 32);\r\n  d[0] &= 248;\r\n  d[31] &= 127;\r\n  d[31] |= 64;\r\n\r\n  var smlen = n + 64;\r\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\r\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\r\n\r\n  crypto_hash(r, sm.subarray(32), n+32);\r\n  reduce(r);\r\n  scalarbase(p, r);\r\n  pack(sm, p);\r\n\r\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\r\n  crypto_hash(h, sm, n + 64);\r\n  reduce(h);\r\n\r\n  for (i = 0; i < 64; i++) x[i] = 0;\r\n  for (i = 0; i < 32; i++) x[i] = r[i];\r\n  for (i = 0; i < 32; i++) {\r\n    for (j = 0; j < 32; j++) {\r\n      x[i+j] += h[i] * d[j];\r\n    }\r\n  }\r\n\r\n  modL(sm.subarray(32), x);\r\n  return smlen;\r\n}\r\n\r\nfunction unpackneg(r, p) {\r\n  var t = gf(), chk = gf(), num = gf(),\r\n      den = gf(), den2 = gf(), den4 = gf(),\r\n      den6 = gf();\r\n\r\n  set25519(r[2], gf1);\r\n  unpack25519(r[1], p);\r\n  S(num, r[1]);\r\n  M(den, num, D);\r\n  Z(num, num, r[2]);\r\n  A(den, r[2], den);\r\n\r\n  S(den2, den);\r\n  S(den4, den2);\r\n  M(den6, den4, den2);\r\n  M(t, den6, num);\r\n  M(t, t, den);\r\n\r\n  pow2523(t, t);\r\n  M(t, t, num);\r\n  M(t, t, den);\r\n  M(t, t, den);\r\n  M(r[0], t, den);\r\n\r\n  S(chk, r[0]);\r\n  M(chk, chk, den);\r\n  if (neq25519(chk, num)) M(r[0], r[0], I);\r\n\r\n  S(chk, r[0]);\r\n  M(chk, chk, den);\r\n  if (neq25519(chk, num)) return -1;\r\n\r\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\r\n\r\n  M(r[3], r[0], r[1]);\r\n  return 0;\r\n}\r\n\r\nfunction crypto_sign_open(m, sm, n, pk) {\r\n  var i;\r\n  var t = new Uint8Array(32), h = new Uint8Array(64);\r\n  var p = [gf(), gf(), gf(), gf()],\r\n      q = [gf(), gf(), gf(), gf()];\r\n\r\n  if (n < 64) return -1;\r\n\r\n  if (unpackneg(q, pk)) return -1;\r\n\r\n  for (i = 0; i < n; i++) m[i] = sm[i];\r\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\r\n  crypto_hash(h, m, n);\r\n  reduce(h);\r\n  scalarmult(p, q, h);\r\n\r\n  scalarbase(q, sm.subarray(32));\r\n  add(p, q);\r\n  pack(t, p);\r\n\r\n  n -= 64;\r\n  if (crypto_verify_32(sm, 0, t, 0)) {\r\n    for (i = 0; i < n; i++) m[i] = 0;\r\n    return -1;\r\n  }\r\n\r\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\r\n  return n;\r\n}\r\n\r\nvar crypto_secretbox_KEYBYTES = 32,\r\n    crypto_secretbox_NONCEBYTES = 24,\r\n    crypto_secretbox_ZEROBYTES = 32,\r\n    crypto_secretbox_BOXZEROBYTES = 16,\r\n    crypto_scalarmult_BYTES = 32,\r\n    crypto_scalarmult_SCALARBYTES = 32,\r\n    crypto_box_PUBLICKEYBYTES = 32,\r\n    crypto_box_SECRETKEYBYTES = 32,\r\n    crypto_box_BEFORENMBYTES = 32,\r\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\r\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\r\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\r\n    crypto_sign_BYTES = 64,\r\n    crypto_sign_PUBLICKEYBYTES = 32,\r\n    crypto_sign_SECRETKEYBYTES = 64,\r\n    crypto_sign_SEEDBYTES = 32,\r\n    crypto_hash_BYTES = 64;\r\n\r\nnacl.lowlevel = {\r\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\r\n  crypto_stream_xor: crypto_stream_xor,\r\n  crypto_stream: crypto_stream,\r\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\r\n  crypto_stream_salsa20: crypto_stream_salsa20,\r\n  crypto_onetimeauth: crypto_onetimeauth,\r\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\r\n  crypto_verify_16: crypto_verify_16,\r\n  crypto_verify_32: crypto_verify_32,\r\n  crypto_secretbox: crypto_secretbox,\r\n  crypto_secretbox_open: crypto_secretbox_open,\r\n  crypto_scalarmult: crypto_scalarmult,\r\n  crypto_scalarmult_base: crypto_scalarmult_base,\r\n  crypto_box_beforenm: crypto_box_beforenm,\r\n  crypto_box_afternm: crypto_box_afternm,\r\n  crypto_box: crypto_box,\r\n  crypto_box_open: crypto_box_open,\r\n  crypto_box_keypair: crypto_box_keypair,\r\n  crypto_hash: crypto_hash,\r\n  crypto_sign: crypto_sign,\r\n  crypto_sign_keypair: crypto_sign_keypair,\r\n  crypto_sign_open: crypto_sign_open,\r\n\r\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\r\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\r\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\r\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\r\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\r\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\r\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\r\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\r\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\r\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\r\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\r\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\r\n  crypto_sign_BYTES: crypto_sign_BYTES,\r\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\r\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\r\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\r\n  crypto_hash_BYTES: crypto_hash_BYTES,\r\n\r\n  gf: gf,\r\n  D: D,\r\n  L: L,\r\n  pack25519: pack25519,\r\n  unpack25519: unpack25519,\r\n  M: M,\r\n  A: A,\r\n  S: S,\r\n  Z: Z,\r\n  pow2523: pow2523,\r\n  add: add,\r\n  set25519: set25519,\r\n  modL: modL,\r\n  scalarmult: scalarmult,\r\n  scalarbase: scalarbase,\r\n};\r\n\r\n/* High-level API */\r\n\r\nfunction checkLengths(k, n) {\r\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\r\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\r\n}\r\n\r\nfunction checkBoxLengths(pk, sk) {\r\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\r\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\r\n}\r\n\r\nfunction checkArrayTypes() {\r\n  for (var i = 0; i < arguments.length; i++) {\r\n    if (!(arguments[i] instanceof Uint8Array))\r\n      throw new TypeError('unexpected type, use Uint8Array');\r\n  }\r\n}\r\n\r\nfunction cleanup(arr) {\r\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\r\n}\r\n\r\nnacl.randomBytes = function(n) {\r\n  var b = new Uint8Array(n);\r\n  randombytes(b, n);\r\n  return b;\r\n};\r\n\r\nnacl.secretbox = function(msg, nonce, key) {\r\n  checkArrayTypes(msg, nonce, key);\r\n  checkLengths(key, nonce);\r\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\r\n  var c = new Uint8Array(m.length);\r\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\r\n  crypto_secretbox(c, m, m.length, nonce, key);\r\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\r\n};\r\n\r\nnacl.secretbox.open = function(box, nonce, key) {\r\n  checkArrayTypes(box, nonce, key);\r\n  checkLengths(key, nonce);\r\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\r\n  var m = new Uint8Array(c.length);\r\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\r\n  if (c.length < 32) return null;\r\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\r\n  return m.subarray(crypto_secretbox_ZEROBYTES);\r\n};\r\n\r\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\r\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\r\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\r\n\r\nnacl.scalarMult = function(n, p) {\r\n  checkArrayTypes(n, p);\r\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\r\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\r\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\r\n  crypto_scalarmult(q, n, p);\r\n  return q;\r\n};\r\n\r\nnacl.scalarMult.base = function(n) {\r\n  checkArrayTypes(n);\r\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\r\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\r\n  crypto_scalarmult_base(q, n);\r\n  return q;\r\n};\r\n\r\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\r\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\r\n\r\nnacl.box = function(msg, nonce, publicKey, secretKey) {\r\n  var k = nacl.box.before(publicKey, secretKey);\r\n  return nacl.secretbox(msg, nonce, k);\r\n};\r\n\r\nnacl.box.before = function(publicKey, secretKey) {\r\n  checkArrayTypes(publicKey, secretKey);\r\n  checkBoxLengths(publicKey, secretKey);\r\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\r\n  crypto_box_beforenm(k, publicKey, secretKey);\r\n  return k;\r\n};\r\n\r\nnacl.box.after = nacl.secretbox;\r\n\r\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\r\n  var k = nacl.box.before(publicKey, secretKey);\r\n  return nacl.secretbox.open(msg, nonce, k);\r\n};\r\n\r\nnacl.box.open.after = nacl.secretbox.open;\r\n\r\nnacl.box.keyPair = function() {\r\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\r\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\r\n  crypto_box_keypair(pk, sk);\r\n  return {publicKey: pk, secretKey: sk};\r\n};\r\n\r\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\r\n  checkArrayTypes(secretKey);\r\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\r\n    throw new Error('bad secret key size');\r\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\r\n  crypto_scalarmult_base(pk, secretKey);\r\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\r\n};\r\n\r\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\r\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\r\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\r\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\r\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\r\n\r\nnacl.sign = function(msg, secretKey) {\r\n  checkArrayTypes(msg, secretKey);\r\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\r\n    throw new Error('bad secret key size');\r\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\r\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\r\n  return signedMsg;\r\n};\r\n\r\nnacl.sign.open = function(signedMsg, publicKey) {\r\n  checkArrayTypes(signedMsg, publicKey);\r\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\r\n    throw new Error('bad public key size');\r\n  var tmp = new Uint8Array(signedMsg.length);\r\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\r\n  if (mlen < 0) return null;\r\n  var m = new Uint8Array(mlen);\r\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\r\n  return m;\r\n};\r\n\r\nnacl.sign.detached = function(msg, secretKey) {\r\n  var signedMsg = nacl.sign(msg, secretKey);\r\n  var sig = new Uint8Array(crypto_sign_BYTES);\r\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\r\n  return sig;\r\n};\r\n\r\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\r\n  checkArrayTypes(msg, sig, publicKey);\r\n  if (sig.length !== crypto_sign_BYTES)\r\n    throw new Error('bad signature size');\r\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\r\n    throw new Error('bad public key size');\r\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\r\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\r\n  var i;\r\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\r\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\r\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\r\n};\r\n\r\nnacl.sign.keyPair = function() {\r\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\r\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\r\n  crypto_sign_keypair(pk, sk);\r\n  return {publicKey: pk, secretKey: sk};\r\n};\r\n\r\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\r\n  checkArrayTypes(secretKey);\r\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\r\n    throw new Error('bad secret key size');\r\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\r\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\r\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\r\n};\r\n\r\nnacl.sign.keyPair.fromSeed = function(seed) {\r\n  checkArrayTypes(seed);\r\n  if (seed.length !== crypto_sign_SEEDBYTES)\r\n    throw new Error('bad seed size');\r\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\r\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\r\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\r\n  crypto_sign_keypair(pk, sk, true);\r\n  return {publicKey: pk, secretKey: sk};\r\n};\r\n\r\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\r\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\r\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\r\nnacl.sign.signatureLength = crypto_sign_BYTES;\r\n\r\nnacl.hash = function(msg) {\r\n  checkArrayTypes(msg);\r\n  var h = new Uint8Array(crypto_hash_BYTES);\r\n  crypto_hash(h, msg, msg.length);\r\n  return h;\r\n};\r\n\r\nnacl.hash.hashLength = crypto_hash_BYTES;\r\n\r\nnacl.verify = function(x, y) {\r\n  checkArrayTypes(x, y);\r\n  // Zero length arguments are considered not equal.\r\n  if (x.length === 0 || y.length === 0) return false;\r\n  if (x.length !== y.length) return false;\r\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\r\n};\r\n\r\nnacl.setPRNG = function(fn) {\r\n  randombytes = fn;\r\n};\r\n\r\n(function() {\r\n  // Initialize PRNG if environment provides CSPRNG.\r\n  // If not, methods calling randombytes will throw.\r\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\r\n  if (crypto && crypto.getRandomValues) {\r\n    // Browsers.\r\n    var QUOTA = 65536;\r\n    nacl.setPRNG(function(x, n) {\r\n      var i, v = new Uint8Array(n);\r\n      for (i = 0; i < n; i += QUOTA) {\r\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\r\n      }\r\n      for (i = 0; i < n; i++) x[i] = v[i];\r\n      cleanup(v);\r\n    });\r\n  } else if (typeof require !== 'undefined') {\r\n    // Node.js.\r\n    crypto = require('crypto');\r\n    if (crypto && crypto.randomBytes) {\r\n      nacl.setPRNG(function(x, n) {\r\n        var i, v = crypto.randomBytes(n);\r\n        for (i = 0; i < n; i++) x[i] = v[i];\r\n        cleanup(v);\r\n      });\r\n    }\r\n  }\r\n})();\r\n\r\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\r\n", null, null, null, null, null, null, null, "/**\r\n * Internal webcrypto alias.\r\n * We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\r\n * See utils.ts for details.\r\n * @module\r\n */\r\ndeclare const globalThis: Record<string, any> | undefined;\r\nexport const crypto: any =\r\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\r\n", "/**\r\n * Utilities for hex, bytes, CSPRNG.\r\n * @module\r\n */\r\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\r\n\r\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\r\n// node.js versions earlier than v19 don't declare it in global scope.\r\n// For node.js, package.json#exports field mapping rewrites import\r\n// from `crypto` to `cryptoNode`, which imports native module.\r\n// Makes the utils un-importable in browsers without a bundler.\r\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\r\nimport { crypto } from '@noble/hashes/crypto';\r\n\r\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\r\nexport function isBytes(a: unknown): a is Uint8Array {\r\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\r\n}\r\n\r\n/** Asserts something is positive integer. */\r\nexport function anumber(n: number): void {\r\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error('positive integer expected, got ' + n);\r\n}\r\n\r\n/** Asserts something is Uint8Array. */\r\nexport function abytes(b: Uint8Array | undefined, ...lengths: number[]): void {\r\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\r\n  if (lengths.length > 0 && !lengths.includes(b.length))\r\n    throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\r\n}\r\n\r\n/** Asserts something is hash */\r\nexport function ahash(h: IHash): void {\r\n  if (typeof h !== 'function' || typeof h.create !== 'function')\r\n    throw new Error('Hash should be wrapped by utils.createHasher');\r\n  anumber(h.outputLen);\r\n  anumber(h.blockLen);\r\n}\r\n\r\n/** Asserts a hash instance has not been destroyed / finished */\r\nexport function aexists(instance: any, checkFinished = true): void {\r\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\r\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\r\n}\r\n\r\n/** Asserts output is properly-sized byte array */\r\nexport function aoutput(out: any, instance: any): void {\r\n  abytes(out);\r\n  const min = instance.outputLen;\r\n  if (out.length < min) {\r\n    throw new Error('digestInto() expects output buffer of length at least ' + min);\r\n  }\r\n}\r\n\r\n/** Generic type encompassing 8/16/32-byte arrays - but not 64-byte. */\r\n// prettier-ignore\r\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\r\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\r\n\r\n/** Cast u8 / u16 / u32 to u8. */\r\nexport function u8(arr: TypedArray): Uint8Array {\r\n  return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\r\n}\r\n\r\n/** Cast u8 / u16 / u32 to u32. */\r\nexport function u32(arr: TypedArray): Uint32Array {\r\n  return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\r\n}\r\n\r\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\r\nexport function clean(...arrays: TypedArray[]): void {\r\n  for (let i = 0; i < arrays.length; i++) {\r\n    arrays[i].fill(0);\r\n  }\r\n}\r\n\r\n/** Create DataView of an array for easy byte-level manipulation. */\r\nexport function createView(arr: TypedArray): DataView {\r\n  return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\r\n}\r\n\r\n/** The rotate right (circular right shift) operation for uint32 */\r\nexport function rotr(word: number, shift: number): number {\r\n  return (word << (32 - shift)) | (word >>> shift);\r\n}\r\n\r\n/** The rotate left (circular left shift) operation for uint32 */\r\nexport function rotl(word: number, shift: number): number {\r\n  return (word << shift) | ((word >>> (32 - shift)) >>> 0);\r\n}\r\n\r\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\r\nexport const isLE: boolean = /* @__PURE__ */ (() =>\r\n  new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\r\n\r\n/** The byte swap operation for uint32 */\r\nexport function byteSwap(word: number): number {\r\n  return (\r\n    ((word << 24) & 0xff000000) |\r\n    ((word << 8) & 0xff0000) |\r\n    ((word >>> 8) & 0xff00) |\r\n    ((word >>> 24) & 0xff)\r\n  );\r\n}\r\n/** Conditionally byte swap if on a big-endian platform */\r\nexport const swap8IfBE: (n: number) => number = isLE\r\n  ? (n: number) => n\r\n  : (n: number) => byteSwap(n);\r\n\r\n/** @deprecated */\r\nexport const byteSwapIfBE: typeof swap8IfBE = swap8IfBE;\r\n/** In place byte swap for Uint32Array */\r\nexport function byteSwap32(arr: Uint32Array): Uint32Array {\r\n  for (let i = 0; i < arr.length; i++) {\r\n    arr[i] = byteSwap(arr[i]);\r\n  }\r\n  return arr;\r\n}\r\n\r\nexport const swap32IfBE: (u: Uint32Array) => Uint32Array = isLE\r\n  ? (u: Uint32Array) => u\r\n  : byteSwap32;\r\n\r\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\r\nconst hasHexBuiltin: boolean = /* @__PURE__ */ (() =>\r\n  // @ts-ignore\r\n  typeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\r\n\r\n// Array where index 0xf0 (240) is mapped to string 'f0'\r\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\r\n  i.toString(16).padStart(2, '0')\r\n);\r\n\r\n/**\r\n * Convert byte array to hex string. Uses built-in function, when available.\r\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\r\n */\r\nexport function bytesToHex(bytes: Uint8Array): string {\r\n  abytes(bytes);\r\n  // @ts-ignore\r\n  if (hasHexBuiltin) return bytes.toHex();\r\n  // pre-caching improves the speed 6x\r\n  let hex = '';\r\n  for (let i = 0; i < bytes.length; i++) {\r\n    hex += hexes[bytes[i]];\r\n  }\r\n  return hex;\r\n}\r\n\r\n// We use optimized technique to convert hex string to byte array\r\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 } as const;\r\nfunction asciiToBase16(ch: number): number | undefined {\r\n  if (ch >= asciis._0 && ch <= asciis._9) return ch - asciis._0; // '2' => 50-48\r\n  if (ch >= asciis.A && ch <= asciis.F) return ch - (asciis.A - 10); // 'B' => 66-(65-10)\r\n  if (ch >= asciis.a && ch <= asciis.f) return ch - (asciis.a - 10); // 'b' => 98-(97-10)\r\n  return;\r\n}\r\n\r\n/**\r\n * Convert hex string to byte array. Uses built-in function, when available.\r\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\r\n */\r\nexport function hexToBytes(hex: string): Uint8Array {\r\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\r\n  // @ts-ignore\r\n  if (hasHexBuiltin) return Uint8Array.fromHex(hex);\r\n  const hl = hex.length;\r\n  const al = hl / 2;\r\n  if (hl % 2) throw new Error('hex string expected, got unpadded hex of length ' + hl);\r\n  const array = new Uint8Array(al);\r\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\r\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\r\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\r\n    if (n1 === undefined || n2 === undefined) {\r\n      const char = hex[hi] + hex[hi + 1];\r\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\r\n    }\r\n    array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\r\n  }\r\n  return array;\r\n}\r\n\r\n/**\r\n * There is no setImmediate in browser and setTimeout is slow.\r\n * Call of async fn will return Promise, which will be fullfiled only on\r\n * next scheduler queue processing step and this is exactly what we need.\r\n */\r\nexport const nextTick = async (): Promise<void> => {};\r\n\r\n/** Returns control to thread each 'tick' ms to avoid blocking. */\r\nexport async function asyncLoop(\r\n  iters: number,\r\n  tick: number,\r\n  cb: (i: number) => void\r\n): Promise<void> {\r\n  let ts = Date.now();\r\n  for (let i = 0; i < iters; i++) {\r\n    cb(i);\r\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\r\n    const diff = Date.now() - ts;\r\n    if (diff >= 0 && diff < tick) continue;\r\n    await nextTick();\r\n    ts += diff;\r\n  }\r\n}\r\n\r\n// Global symbols, but ts doesn't see them: https://github.com/microsoft/TypeScript/issues/31535\r\ndeclare const TextEncoder: any;\r\ndeclare const TextDecoder: any;\r\n\r\n/**\r\n * Converts string to bytes using UTF8 encoding.\r\n * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])\r\n */\r\nexport function utf8ToBytes(str: string): Uint8Array {\r\n  if (typeof str !== 'string') throw new Error('string expected');\r\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\r\n}\r\n\r\n/**\r\n * Converts bytes to string using UTF8 encoding.\r\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\r\n */\r\nexport function bytesToUtf8(bytes: Uint8Array): string {\r\n  return new TextDecoder().decode(bytes);\r\n}\r\n\r\n/** Accepted input of hash functions. Strings are converted to byte arrays. */\r\nexport type Input = string | Uint8Array;\r\n/**\r\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\r\n * Warning: when Uint8Array is passed, it would NOT get copied.\r\n * Keep in mind for future mutable operations.\r\n */\r\nexport function toBytes(data: Input): Uint8Array {\r\n  if (typeof data === 'string') data = utf8ToBytes(data);\r\n  abytes(data);\r\n  return data;\r\n}\r\n\r\n/** KDFs can accept string or Uint8Array for user convenience. */\r\nexport type KDFInput = string | Uint8Array;\r\n/**\r\n * Helper for KDFs: consumes uint8array or string.\r\n * When string is passed, does utf8 decoding, using TextDecoder.\r\n */\r\nexport function kdfInputToBytes(data: KDFInput): Uint8Array {\r\n  if (typeof data === 'string') data = utf8ToBytes(data);\r\n  abytes(data);\r\n  return data;\r\n}\r\n\r\n/** Copies several Uint8Arrays into one. */\r\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\r\n  let sum = 0;\r\n  for (let i = 0; i < arrays.length; i++) {\r\n    const a = arrays[i];\r\n    abytes(a);\r\n    sum += a.length;\r\n  }\r\n  const res = new Uint8Array(sum);\r\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\r\n    const a = arrays[i];\r\n    res.set(a, pad);\r\n    pad += a.length;\r\n  }\r\n  return res;\r\n}\r\n\r\ntype EmptyObj = {};\r\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\r\n  defaults: T1,\r\n  opts?: T2\r\n): T1 & T2 {\r\n  if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\r\n    throw new Error('options should be object or undefined');\r\n  const merged = Object.assign(defaults, opts);\r\n  return merged as T1 & T2;\r\n}\r\n\r\n/** Hash interface. */\r\nexport type IHash = {\r\n  (data: Uint8Array): Uint8Array;\r\n  blockLen: number;\r\n  outputLen: number;\r\n  create: any;\r\n};\r\n\r\n/** For runtime check if class implements interface */\r\nexport abstract class Hash<T extends Hash<T>> {\r\n  abstract blockLen: number; // Bytes per block\r\n  abstract outputLen: number; // Bytes in output\r\n  abstract update(buf: Input): this;\r\n  // Writes digest into buf\r\n  abstract digestInto(buf: Uint8Array): void;\r\n  abstract digest(): Uint8Array;\r\n  /**\r\n   * Resets internal state. Makes Hash instance unusable.\r\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\r\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\r\n   */\r\n  abstract destroy(): void;\r\n  /**\r\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\r\n   * when no options are passed.\r\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\r\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\r\n   * There are no guarantees for clean-up because it's impossible in JS.\r\n   */\r\n  abstract _cloneInto(to?: T): T;\r\n  // Safe version that clones internal state\r\n  abstract clone(): T;\r\n}\r\n\r\n/**\r\n * XOF: streaming API to read digest in chunks.\r\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\r\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\r\n * destroy state, next call can require more bytes.\r\n */\r\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\r\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\r\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\r\n};\r\n\r\n/** Hash function */\r\nexport type CHash = ReturnType<typeof createHasher>;\r\n/** Hash function with output */\r\nexport type CHashO = ReturnType<typeof createOptHasher>;\r\n/** XOF with output */\r\nexport type CHashXO = ReturnType<typeof createXOFer>;\r\n\r\n/** Wraps hash function, creating an interface on top of it */\r\nexport function createHasher<T extends Hash<T>>(\r\n  hashCons: () => Hash<T>\r\n): {\r\n  (msg: Input): Uint8Array;\r\n  outputLen: number;\r\n  blockLen: number;\r\n  create(): Hash<T>;\r\n} {\r\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\r\n  const tmp = hashCons();\r\n  hashC.outputLen = tmp.outputLen;\r\n  hashC.blockLen = tmp.blockLen;\r\n  hashC.create = () => hashCons();\r\n  return hashC;\r\n}\r\n\r\nexport function createOptHasher<H extends Hash<H>, T extends Object>(\r\n  hashCons: (opts?: T) => Hash<H>\r\n): {\r\n  (msg: Input, opts?: T): Uint8Array;\r\n  outputLen: number;\r\n  blockLen: number;\r\n  create(opts?: T): Hash<H>;\r\n} {\r\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\r\n  const tmp = hashCons({} as T);\r\n  hashC.outputLen = tmp.outputLen;\r\n  hashC.blockLen = tmp.blockLen;\r\n  hashC.create = (opts?: T) => hashCons(opts);\r\n  return hashC;\r\n}\r\n\r\nexport function createXOFer<H extends HashXOF<H>, T extends Object>(\r\n  hashCons: (opts?: T) => HashXOF<H>\r\n): {\r\n  (msg: Input, opts?: T): Uint8Array;\r\n  outputLen: number;\r\n  blockLen: number;\r\n  create(opts?: T): HashXOF<H>;\r\n} {\r\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\r\n  const tmp = hashCons({} as T);\r\n  hashC.outputLen = tmp.outputLen;\r\n  hashC.blockLen = tmp.blockLen;\r\n  hashC.create = (opts?: T) => hashCons(opts);\r\n  return hashC;\r\n}\r\nexport const wrapConstructor: typeof createHasher = createHasher;\r\nexport const wrapConstructorWithOpts: typeof createOptHasher = createOptHasher;\r\nexport const wrapXOFConstructorWithOpts: typeof createXOFer = createXOFer;\r\n\r\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\r\nexport function randomBytes(bytesLength = 32): Uint8Array {\r\n  if (crypto && typeof crypto.getRandomValues === 'function') {\r\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\r\n  }\r\n  // Legacy Node.js compatibility\r\n  if (crypto && typeof crypto.randomBytes === 'function') {\r\n    return Uint8Array.from(crypto.randomBytes(bytesLength));\r\n  }\r\n  throw new Error('crypto.getRandomValues must be defined');\r\n}\r\n", "/**\r\n * Internal helpers for blake hash.\r\n * @module\r\n */\r\nimport { rotr } from './utils.ts';\r\n\r\n/**\r\n * Internal blake variable.\r\n * For BLAKE2b, the two extra permutations for rounds 10 and 11 are SIGMA[10..11] = SIGMA[0..1].\r\n */\r\n// prettier-ignore\r\nexport const BSIGMA: Uint8Array = /* @__PURE__ */ Uint8Array.from([\r\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\r\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\r\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\r\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\r\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\r\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\r\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\r\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\r\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\r\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\r\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\r\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\r\n  // Blake1, unused in others\r\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\r\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\r\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\r\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\r\n]);\r\n\r\n// prettier-ignore\r\nexport type Num4 = { a: number; b: number; c: number; d: number; };\r\n\r\n// Mixing function G splitted in two halfs\r\nexport function G1s(a: number, b: number, c: number, d: number, x: number): Num4 {\r\n  a = (a + b + x) | 0;\r\n  d = rotr(d ^ a, 16);\r\n  c = (c + d) | 0;\r\n  b = rotr(b ^ c, 12);\r\n  return { a, b, c, d };\r\n}\r\n\r\nexport function G2s(a: number, b: number, c: number, d: number, x: number): Num4 {\r\n  a = (a + b + x) | 0;\r\n  d = rotr(d ^ a, 8);\r\n  c = (c + d) | 0;\r\n  b = rotr(b ^ c, 7);\r\n  return { a, b, c, d };\r\n}\r\n", "/**\r\n * Internal Merkle-Damgard hash utils.\r\n * @module\r\n */\r\nimport { type Input, Hash, abytes, aexists, aoutput, clean, createView, toBytes } from './utils.ts';\r\n\r\n/** Polyfill for Safari 14. https://caniuse.com/mdn-javascript_builtins_dataview_setbiguint64 */\r\nexport function setBigUint64(\r\n  view: DataView,\r\n  byteOffset: number,\r\n  value: bigint,\r\n  isLE: boolean\r\n): void {\r\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\r\n  const _32n = BigInt(32);\r\n  const _u32_max = BigInt(0xffffffff);\r\n  const wh = Number((value >> _32n) & _u32_max);\r\n  const wl = Number(value & _u32_max);\r\n  const h = isLE ? 4 : 0;\r\n  const l = isLE ? 0 : 4;\r\n  view.setUint32(byteOffset + h, wh, isLE);\r\n  view.setUint32(byteOffset + l, wl, isLE);\r\n}\r\n\r\n/** Choice: a ? b : c */\r\nexport function Chi(a: number, b: number, c: number): number {\r\n  return (a & b) ^ (~a & c);\r\n}\r\n\r\n/** Majority function, true if any two inputs is true. */\r\nexport function Maj(a: number, b: number, c: number): number {\r\n  return (a & b) ^ (a & c) ^ (b & c);\r\n}\r\n\r\n/**\r\n * Merkle-Damgard hash construction base class.\r\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\r\n */\r\nexport abstract class HashMD<T extends HashMD<T>> extends Hash<T> {\r\n  protected abstract process(buf: DataView, offset: number): void;\r\n  protected abstract get(): number[];\r\n  protected abstract set(...args: number[]): void;\r\n  abstract destroy(): void;\r\n  protected abstract roundClean(): void;\r\n\r\n  readonly blockLen: number;\r\n  readonly outputLen: number;\r\n  readonly padOffset: number;\r\n  readonly isLE: boolean;\r\n\r\n  // For partial updates less than block size\r\n  protected buffer: Uint8Array;\r\n  protected view: DataView;\r\n  protected finished = false;\r\n  protected length = 0;\r\n  protected pos = 0;\r\n  protected destroyed = false;\r\n\r\n  constructor(blockLen: number, outputLen: number, padOffset: number, isLE: boolean) {\r\n    super();\r\n    this.blockLen = blockLen;\r\n    this.outputLen = outputLen;\r\n    this.padOffset = padOffset;\r\n    this.isLE = isLE;\r\n    this.buffer = new Uint8Array(blockLen);\r\n    this.view = createView(this.buffer);\r\n  }\r\n  update(data: Input): this {\r\n    aexists(this);\r\n    data = toBytes(data);\r\n    abytes(data);\r\n    const { view, buffer, blockLen } = this;\r\n    const len = data.length;\r\n    for (let pos = 0; pos < len; ) {\r\n      const take = Math.min(blockLen - this.pos, len - pos);\r\n      // Fast path: we have at least one block in input, cast it to view and process\r\n      if (take === blockLen) {\r\n        const dataView = createView(data);\r\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\r\n        continue;\r\n      }\r\n      buffer.set(data.subarray(pos, pos + take), this.pos);\r\n      this.pos += take;\r\n      pos += take;\r\n      if (this.pos === blockLen) {\r\n        this.process(view, 0);\r\n        this.pos = 0;\r\n      }\r\n    }\r\n    this.length += data.length;\r\n    this.roundClean();\r\n    return this;\r\n  }\r\n  digestInto(out: Uint8Array): void {\r\n    aexists(this);\r\n    aoutput(out, this);\r\n    this.finished = true;\r\n    // Padding\r\n    // We can avoid allocation of buffer for padding completely if it\r\n    // was previously not allocated here. But it won't change performance.\r\n    const { buffer, view, blockLen, isLE } = this;\r\n    let { pos } = this;\r\n    // append the bit '1' to the message\r\n    buffer[pos++] = 0b10000000;\r\n    clean(this.buffer.subarray(pos));\r\n    // we have less than padOffset left in buffer, so we cannot put length in\r\n    // current block, need process it and pad again\r\n    if (this.padOffset > blockLen - pos) {\r\n      this.process(view, 0);\r\n      pos = 0;\r\n    }\r\n    // Pad until full block byte with zeros\r\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\r\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\r\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\r\n    // So we just write lowest 64 bits of that value.\r\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\r\n    this.process(view, 0);\r\n    const oview = createView(out);\r\n    const len = this.outputLen;\r\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\r\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\r\n    const outLen = len / 4;\r\n    const state = this.get();\r\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\r\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\r\n  }\r\n  digest(): Uint8Array {\r\n    const { buffer, outputLen } = this;\r\n    this.digestInto(buffer);\r\n    const res = buffer.slice(0, outputLen);\r\n    this.destroy();\r\n    return res;\r\n  }\r\n  _cloneInto(to?: T): T {\r\n    to ||= new (this.constructor as any)() as T;\r\n    to.set(...this.get());\r\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\r\n    to.destroyed = destroyed;\r\n    to.finished = finished;\r\n    to.length = length;\r\n    to.pos = pos;\r\n    if (length % blockLen) to.buffer.set(buffer);\r\n    return to;\r\n  }\r\n  clone(): T {\r\n    return this._cloneInto();\r\n  }\r\n}\r\n\r\n/**\r\n * Initial SHA-2 state: fractional parts of square roots of first 16 primes 2..53.\r\n * Check out `test/misc/sha2-gen-iv.js` for recomputation guide.\r\n */\r\n\r\n/** Initial SHA256 state. Bits 0..32 of frac part of sqrt of primes 2..19 */\r\nexport const SHA256_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\r\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19,\r\n]);\r\n\r\n/** Initial SHA224 state. Bits 32..64 of frac part of sqrt of primes 23..53 */\r\nexport const SHA224_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\r\n  0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4,\r\n]);\r\n\r\n/** Initial SHA384 state. Bits 0..64 of frac part of sqrt of primes 23..53 */\r\nexport const SHA384_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\r\n  0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939,\r\n  0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4,\r\n]);\r\n\r\n/** Initial SHA512 state. Bits 0..64 of frac part of sqrt of primes 2..19 */\r\nexport const SHA512_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\r\n  0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1,\r\n  0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179,\r\n]);\r\n", "/**\r\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\r\n * @todo re-check https://issues.chromium.org/issues/42212588\r\n * @module\r\n */\r\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\r\nconst _32n = /* @__PURE__ */ BigInt(32);\r\n\r\nfunction fromBig(\r\n  n: bigint,\r\n  le = false\r\n): {\r\n  h: number;\r\n  l: number;\r\n} {\r\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\r\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\r\n}\r\n\r\nfunction split(lst: bigint[], le = false): Uint32Array[] {\r\n  const len = lst.length;\r\n  let Ah = new Uint32Array(len);\r\n  let Al = new Uint32Array(len);\r\n  for (let i = 0; i < len; i++) {\r\n    const { h, l } = fromBig(lst[i], le);\r\n    [Ah[i], Al[i]] = [h, l];\r\n  }\r\n  return [Ah, Al];\r\n}\r\n\r\nconst toBig = (h: number, l: number): bigint => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\r\n// for Shift in [0, 32)\r\nconst shrSH = (h: number, _l: number, s: number): number => h >>> s;\r\nconst shrSL = (h: number, l: number, s: number): number => (h << (32 - s)) | (l >>> s);\r\n// Right rotate for Shift in [1, 32)\r\nconst rotrSH = (h: number, l: number, s: number): number => (h >>> s) | (l << (32 - s));\r\nconst rotrSL = (h: number, l: number, s: number): number => (h << (32 - s)) | (l >>> s);\r\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\r\nconst rotrBH = (h: number, l: number, s: number): number => (h << (64 - s)) | (l >>> (s - 32));\r\nconst rotrBL = (h: number, l: number, s: number): number => (h >>> (s - 32)) | (l << (64 - s));\r\n// Right rotate for shift===32 (just swaps l&h)\r\nconst rotr32H = (_h: number, l: number): number => l;\r\nconst rotr32L = (h: number, _l: number): number => h;\r\n// Left rotate for Shift in [1, 32)\r\nconst rotlSH = (h: number, l: number, s: number): number => (h << s) | (l >>> (32 - s));\r\nconst rotlSL = (h: number, l: number, s: number): number => (l << s) | (h >>> (32 - s));\r\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\r\nconst rotlBH = (h: number, l: number, s: number): number => (l << (s - 32)) | (h >>> (64 - s));\r\nconst rotlBL = (h: number, l: number, s: number): number => (h << (s - 32)) | (l >>> (64 - s));\r\n\r\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\r\n// simple take carry out of low bit sum by shift, we need to use division.\r\nfunction add(\r\n  Ah: number,\r\n  Al: number,\r\n  Bh: number,\r\n  Bl: number\r\n): {\r\n  h: number;\r\n  l: number;\r\n} {\r\n  const l = (Al >>> 0) + (Bl >>> 0);\r\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\r\n}\r\n// Addition with more than 2 elements\r\nconst add3L = (Al: number, Bl: number, Cl: number): number => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\r\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number): number =>\r\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\r\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number): number =>\r\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\r\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number): number =>\r\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\r\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number): number =>\r\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\r\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number): number =>\r\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\r\n\r\n// prettier-ignore\r\nexport {\r\n  add, add3H, add3L, add4H, add4L, add5H, add5L, fromBig, rotlBH, rotlBL, rotlSH, rotlSL, rotr32H, rotr32L, rotrBH, rotrBL, rotrSH, rotrSL, shrSH, shrSL, split, toBig\r\n};\r\n// prettier-ignore\r\nconst u64: { fromBig: typeof fromBig; split: typeof split; toBig: (h: number, l: number) => bigint; shrSH: (h: number, _l: number, s: number) => number; shrSL: (h: number, l: number, s: number) => number; rotrSH: (h: number, l: number, s: number) => number; rotrSL: (h: number, l: number, s: number) => number; rotrBH: (h: number, l: number, s: number) => number; rotrBL: (h: number, l: number, s: number) => number; rotr32H: (_h: number, l: number) => number; rotr32L: (h: number, _l: number) => number; rotlSH: (h: number, l: number, s: number) => number; rotlSL: (h: number, l: number, s: number) => number; rotlBH: (h: number, l: number, s: number) => number; rotlBL: (h: number, l: number, s: number) => number; add: typeof add; add3L: (Al: number, Bl: number, Cl: number) => number; add3H: (low: number, Ah: number, Bh: number, Ch: number) => number; add4L: (Al: number, Bl: number, Cl: number, Dl: number) => number; add4H: (low: number, Ah: number, Bh: number, Ch: number, Dh: number) => number; add5H: (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) => number; add5L: (Al: number, Bl: number, Cl: number, Dl: number, El: number) => number; } = {\r\n  fromBig, split, toBig,\r\n  shrSH, shrSL,\r\n  rotrSH, rotrSL, rotrBH, rotrBL,\r\n  rotr32H, rotr32L,\r\n  rotlSH, rotlSL, rotlBH, rotlBL,\r\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\r\n};\r\nexport default u64;\r\n", "/**\r\n * blake2b (64-bit) & blake2s (8 to 32-bit) hash functions.\r\n * b could have been faster, but there is no fast u64 in js, so s is 1.5x faster.\r\n * @module\r\n */\r\nimport { BSIGMA, G1s, G2s } from './_blake.ts';\r\nimport { SHA256_IV } from './_md.ts';\r\nimport * as u64 from './_u64.ts';\r\n// prettier-ignore\r\nimport {\r\n  abytes, aexists, anumber, aoutput,\r\n  clean, createOptHasher, Hash, swap32IfBE, swap8IfBE, toBytes, u32,\r\n  type CHashO, type Input\r\n} from './utils.ts';\r\n\r\n/** Blake hash options. dkLen is output length. key is used in MAC mode. salt is used in KDF mode. */\r\nexport type Blake2Opts = {\r\n  dkLen?: number;\r\n  key?: Input;\r\n  salt?: Input;\r\n  personalization?: Input;\r\n};\r\n\r\n// Same as SHA512_IV, but swapped endianness: LE instead of BE. iv[1] is iv[0], etc.\r\nconst B2B_IV = /* @__PURE__ */ Uint32Array.from([\r\n  0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372, 0x5f1d36f1, 0xa54ff53a,\r\n  0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c, 0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19,\r\n]);\r\n// Temporary buffer\r\nconst BBUF = /* @__PURE__ */ new Uint32Array(32);\r\n\r\n// Mixing function G splitted in two halfs\r\nfunction G1b(a: number, b: number, c: number, d: number, msg: Uint32Array, x: number) {\r\n  // NOTE: V is LE here\r\n  const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore\r\n  let Al = BBUF[2 * a], Ah = BBUF[2 * a + 1]; // prettier-ignore\r\n  let Bl = BBUF[2 * b], Bh = BBUF[2 * b + 1]; // prettier-ignore\r\n  let Cl = BBUF[2 * c], Ch = BBUF[2 * c + 1]; // prettier-ignore\r\n  let Dl = BBUF[2 * d], Dh = BBUF[2 * d + 1]; // prettier-ignore\r\n  // v[a] = (v[a] + v[b] + x) | 0;\r\n  let ll = u64.add3L(Al, Bl, Xl);\r\n  Ah = u64.add3H(ll, Ah, Bh, Xh);\r\n  Al = ll | 0;\r\n  // v[d] = rotr(v[d] ^ v[a], 32)\r\n  ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });\r\n  ({ Dh, Dl } = { Dh: u64.rotr32H(Dh, Dl), Dl: u64.rotr32L(Dh, Dl) });\r\n  // v[c] = (v[c] + v[d]) | 0;\r\n  ({ h: Ch, l: Cl } = u64.add(Ch, Cl, Dh, Dl));\r\n  // v[b] = rotr(v[b] ^ v[c], 24)\r\n  ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });\r\n  ({ Bh, Bl } = { Bh: u64.rotrSH(Bh, Bl, 24), Bl: u64.rotrSL(Bh, Bl, 24) });\r\n  (BBUF[2 * a] = Al), (BBUF[2 * a + 1] = Ah);\r\n  (BBUF[2 * b] = Bl), (BBUF[2 * b + 1] = Bh);\r\n  (BBUF[2 * c] = Cl), (BBUF[2 * c + 1] = Ch);\r\n  (BBUF[2 * d] = Dl), (BBUF[2 * d + 1] = Dh);\r\n}\r\n\r\nfunction G2b(a: number, b: number, c: number, d: number, msg: Uint32Array, x: number) {\r\n  // NOTE: V is LE here\r\n  const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore\r\n  let Al = BBUF[2 * a], Ah = BBUF[2 * a + 1]; // prettier-ignore\r\n  let Bl = BBUF[2 * b], Bh = BBUF[2 * b + 1]; // prettier-ignore\r\n  let Cl = BBUF[2 * c], Ch = BBUF[2 * c + 1]; // prettier-ignore\r\n  let Dl = BBUF[2 * d], Dh = BBUF[2 * d + 1]; // prettier-ignore\r\n  // v[a] = (v[a] + v[b] + x) | 0;\r\n  let ll = u64.add3L(Al, Bl, Xl);\r\n  Ah = u64.add3H(ll, Ah, Bh, Xh);\r\n  Al = ll | 0;\r\n  // v[d] = rotr(v[d] ^ v[a], 16)\r\n  ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });\r\n  ({ Dh, Dl } = { Dh: u64.rotrSH(Dh, Dl, 16), Dl: u64.rotrSL(Dh, Dl, 16) });\r\n  // v[c] = (v[c] + v[d]) | 0;\r\n  ({ h: Ch, l: Cl } = u64.add(Ch, Cl, Dh, Dl));\r\n  // v[b] = rotr(v[b] ^ v[c], 63)\r\n  ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });\r\n  ({ Bh, Bl } = { Bh: u64.rotrBH(Bh, Bl, 63), Bl: u64.rotrBL(Bh, Bl, 63) });\r\n  (BBUF[2 * a] = Al), (BBUF[2 * a + 1] = Ah);\r\n  (BBUF[2 * b] = Bl), (BBUF[2 * b + 1] = Bh);\r\n  (BBUF[2 * c] = Cl), (BBUF[2 * c + 1] = Ch);\r\n  (BBUF[2 * d] = Dl), (BBUF[2 * d + 1] = Dh);\r\n}\r\n\r\nfunction checkBlake2Opts(\r\n  outputLen: number,\r\n  opts: Blake2Opts | undefined = {},\r\n  keyLen: number,\r\n  saltLen: number,\r\n  persLen: number\r\n) {\r\n  anumber(keyLen);\r\n  if (outputLen < 0 || outputLen > keyLen) throw new Error('outputLen bigger than keyLen');\r\n  const { key, salt, personalization } = opts;\r\n  if (key !== undefined && (key.length < 1 || key.length > keyLen))\r\n    throw new Error('key length must be undefined or 1..' + keyLen);\r\n  if (salt !== undefined && salt.length !== saltLen)\r\n    throw new Error('salt must be undefined or ' + saltLen);\r\n  if (personalization !== undefined && personalization.length !== persLen)\r\n    throw new Error('personalization must be undefined or ' + persLen);\r\n}\r\n\r\n/** Class, from which others are subclassed. */\r\nexport abstract class BLAKE2<T extends BLAKE2<T>> extends Hash<T> {\r\n  protected abstract compress(msg: Uint32Array, offset: number, isLast: boolean): void;\r\n  protected abstract get(): number[];\r\n  protected abstract set(...args: number[]): void;\r\n  abstract destroy(): void;\r\n  protected buffer: Uint8Array;\r\n  protected buffer32: Uint32Array;\r\n  protected finished = false;\r\n  protected destroyed = false;\r\n  protected length: number = 0;\r\n  protected pos: number = 0;\r\n  readonly blockLen: number;\r\n  readonly outputLen: number;\r\n\r\n  constructor(blockLen: number, outputLen: number) {\r\n    super();\r\n    anumber(blockLen);\r\n    anumber(outputLen);\r\n    this.blockLen = blockLen;\r\n    this.outputLen = outputLen;\r\n    this.buffer = new Uint8Array(blockLen);\r\n    this.buffer32 = u32(this.buffer);\r\n  }\r\n  update(data: Input): this {\r\n    aexists(this);\r\n    data = toBytes(data);\r\n    abytes(data);\r\n    // Main difference with other hashes: there is flag for last block,\r\n    // so we cannot process current block before we know that there\r\n    // is the next one. This significantly complicates logic and reduces ability\r\n    // to do zero-copy processing\r\n    const { blockLen, buffer, buffer32 } = this;\r\n    const len = data.length;\r\n    const offset = data.byteOffset;\r\n    const buf = data.buffer;\r\n    for (let pos = 0; pos < len; ) {\r\n      // If buffer is full and we still have input (don't process last block, same as blake2s)\r\n      if (this.pos === blockLen) {\r\n        swap32IfBE(buffer32);\r\n        this.compress(buffer32, 0, false);\r\n        swap32IfBE(buffer32);\r\n        this.pos = 0;\r\n      }\r\n      const take = Math.min(blockLen - this.pos, len - pos);\r\n      const dataOffset = offset + pos;\r\n      // full block && aligned to 4 bytes && not last in input\r\n      if (take === blockLen && !(dataOffset % 4) && pos + take < len) {\r\n        const data32 = new Uint32Array(buf, dataOffset, Math.floor((len - pos) / 4));\r\n        swap32IfBE(data32);\r\n        for (let pos32 = 0; pos + blockLen < len; pos32 += buffer32.length, pos += blockLen) {\r\n          this.length += blockLen;\r\n          this.compress(data32, pos32, false);\r\n        }\r\n        swap32IfBE(data32);\r\n        continue;\r\n      }\r\n      buffer.set(data.subarray(pos, pos + take), this.pos);\r\n      this.pos += take;\r\n      this.length += take;\r\n      pos += take;\r\n    }\r\n    return this;\r\n  }\r\n  digestInto(out: Uint8Array): void {\r\n    aexists(this);\r\n    aoutput(out, this);\r\n    const { pos, buffer32 } = this;\r\n    this.finished = true;\r\n    // Padding\r\n    clean(this.buffer.subarray(pos));\r\n    swap32IfBE(buffer32);\r\n    this.compress(buffer32, 0, true);\r\n    swap32IfBE(buffer32);\r\n    const out32 = u32(out);\r\n    this.get().forEach((v, i) => (out32[i] = swap8IfBE(v)));\r\n  }\r\n  digest(): Uint8Array {\r\n    const { buffer, outputLen } = this;\r\n    this.digestInto(buffer);\r\n    const res = buffer.slice(0, outputLen);\r\n    this.destroy();\r\n    return res;\r\n  }\r\n  _cloneInto(to?: T): T {\r\n    const { buffer, length, finished, destroyed, outputLen, pos } = this;\r\n    to ||= new (this.constructor as any)({ dkLen: outputLen }) as T;\r\n    to.set(...this.get());\r\n    to.buffer.set(buffer);\r\n    to.destroyed = destroyed;\r\n    to.finished = finished;\r\n    to.length = length;\r\n    to.pos = pos;\r\n    // @ts-ignore\r\n    to.outputLen = outputLen;\r\n    return to;\r\n  }\r\n  clone(): T {\r\n    return this._cloneInto();\r\n  }\r\n}\r\n\r\nexport class BLAKE2b extends BLAKE2<BLAKE2b> {\r\n  // Same as SHA-512, but LE\r\n  private v0l = B2B_IV[0] | 0;\r\n  private v0h = B2B_IV[1] | 0;\r\n  private v1l = B2B_IV[2] | 0;\r\n  private v1h = B2B_IV[3] | 0;\r\n  private v2l = B2B_IV[4] | 0;\r\n  private v2h = B2B_IV[5] | 0;\r\n  private v3l = B2B_IV[6] | 0;\r\n  private v3h = B2B_IV[7] | 0;\r\n  private v4l = B2B_IV[8] | 0;\r\n  private v4h = B2B_IV[9] | 0;\r\n  private v5l = B2B_IV[10] | 0;\r\n  private v5h = B2B_IV[11] | 0;\r\n  private v6l = B2B_IV[12] | 0;\r\n  private v6h = B2B_IV[13] | 0;\r\n  private v7l = B2B_IV[14] | 0;\r\n  private v7h = B2B_IV[15] | 0;\r\n\r\n  constructor(opts: Blake2Opts = {}) {\r\n    const olen = opts.dkLen === undefined ? 64 : opts.dkLen;\r\n    super(128, olen);\r\n    checkBlake2Opts(olen, opts, 64, 16, 16);\r\n    let { key, personalization, salt } = opts;\r\n    let keyLength = 0;\r\n    if (key !== undefined) {\r\n      key = toBytes(key);\r\n      keyLength = key.length;\r\n    }\r\n    this.v0l ^= this.outputLen | (keyLength << 8) | (0x01 << 16) | (0x01 << 24);\r\n    if (salt !== undefined) {\r\n      salt = toBytes(salt);\r\n      const slt = u32(salt);\r\n      this.v4l ^= swap8IfBE(slt[0]);\r\n      this.v4h ^= swap8IfBE(slt[1]);\r\n      this.v5l ^= swap8IfBE(slt[2]);\r\n      this.v5h ^= swap8IfBE(slt[3]);\r\n    }\r\n    if (personalization !== undefined) {\r\n      personalization = toBytes(personalization);\r\n      const pers = u32(personalization);\r\n      this.v6l ^= swap8IfBE(pers[0]);\r\n      this.v6h ^= swap8IfBE(pers[1]);\r\n      this.v7l ^= swap8IfBE(pers[2]);\r\n      this.v7h ^= swap8IfBE(pers[3]);\r\n    }\r\n    if (key !== undefined) {\r\n      // Pad to blockLen and update\r\n      const tmp = new Uint8Array(this.blockLen);\r\n      tmp.set(key);\r\n      this.update(tmp);\r\n    }\r\n  }\r\n  // prettier-ignore\r\n  protected get(): [\r\n    number, number, number, number, number, number, number, number,\r\n    number, number, number, number, number, number, number, number\r\n  ] {\r\n    let { v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h } = this;\r\n    return [v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h];\r\n  }\r\n  // prettier-ignore\r\n  protected set(\r\n    v0l: number, v0h: number, v1l: number, v1h: number,\r\n    v2l: number, v2h: number, v3l: number, v3h: number,\r\n    v4l: number, v4h: number, v5l: number, v5h: number,\r\n    v6l: number, v6h: number, v7l: number, v7h: number\r\n  ): void {\r\n    this.v0l = v0l | 0;\r\n    this.v0h = v0h | 0;\r\n    this.v1l = v1l | 0;\r\n    this.v1h = v1h | 0;\r\n    this.v2l = v2l | 0;\r\n    this.v2h = v2h | 0;\r\n    this.v3l = v3l | 0;\r\n    this.v3h = v3h | 0;\r\n    this.v4l = v4l | 0;\r\n    this.v4h = v4h | 0;\r\n    this.v5l = v5l | 0;\r\n    this.v5h = v5h | 0;\r\n    this.v6l = v6l | 0;\r\n    this.v6h = v6h | 0;\r\n    this.v7l = v7l | 0;\r\n    this.v7h = v7h | 0;\r\n  }\r\n  protected compress(msg: Uint32Array, offset: number, isLast: boolean): void {\r\n    this.get().forEach((v, i) => (BBUF[i] = v)); // First half from state.\r\n    BBUF.set(B2B_IV, 16); // Second half from IV.\r\n    let { h, l } = u64.fromBig(BigInt(this.length));\r\n    BBUF[24] = B2B_IV[8] ^ l; // Low word of the offset.\r\n    BBUF[25] = B2B_IV[9] ^ h; // High word.\r\n    // Invert all bits for last block\r\n    if (isLast) {\r\n      BBUF[28] = ~BBUF[28];\r\n      BBUF[29] = ~BBUF[29];\r\n    }\r\n    let j = 0;\r\n    const s = BSIGMA;\r\n    for (let i = 0; i < 12; i++) {\r\n      G1b(0, 4, 8, 12, msg, offset + 2 * s[j++]);\r\n      G2b(0, 4, 8, 12, msg, offset + 2 * s[j++]);\r\n      G1b(1, 5, 9, 13, msg, offset + 2 * s[j++]);\r\n      G2b(1, 5, 9, 13, msg, offset + 2 * s[j++]);\r\n      G1b(2, 6, 10, 14, msg, offset + 2 * s[j++]);\r\n      G2b(2, 6, 10, 14, msg, offset + 2 * s[j++]);\r\n      G1b(3, 7, 11, 15, msg, offset + 2 * s[j++]);\r\n      G2b(3, 7, 11, 15, msg, offset + 2 * s[j++]);\r\n\r\n      G1b(0, 5, 10, 15, msg, offset + 2 * s[j++]);\r\n      G2b(0, 5, 10, 15, msg, offset + 2 * s[j++]);\r\n      G1b(1, 6, 11, 12, msg, offset + 2 * s[j++]);\r\n      G2b(1, 6, 11, 12, msg, offset + 2 * s[j++]);\r\n      G1b(2, 7, 8, 13, msg, offset + 2 * s[j++]);\r\n      G2b(2, 7, 8, 13, msg, offset + 2 * s[j++]);\r\n      G1b(3, 4, 9, 14, msg, offset + 2 * s[j++]);\r\n      G2b(3, 4, 9, 14, msg, offset + 2 * s[j++]);\r\n    }\r\n    this.v0l ^= BBUF[0] ^ BBUF[16];\r\n    this.v0h ^= BBUF[1] ^ BBUF[17];\r\n    this.v1l ^= BBUF[2] ^ BBUF[18];\r\n    this.v1h ^= BBUF[3] ^ BBUF[19];\r\n    this.v2l ^= BBUF[4] ^ BBUF[20];\r\n    this.v2h ^= BBUF[5] ^ BBUF[21];\r\n    this.v3l ^= BBUF[6] ^ BBUF[22];\r\n    this.v3h ^= BBUF[7] ^ BBUF[23];\r\n    this.v4l ^= BBUF[8] ^ BBUF[24];\r\n    this.v4h ^= BBUF[9] ^ BBUF[25];\r\n    this.v5l ^= BBUF[10] ^ BBUF[26];\r\n    this.v5h ^= BBUF[11] ^ BBUF[27];\r\n    this.v6l ^= BBUF[12] ^ BBUF[28];\r\n    this.v6h ^= BBUF[13] ^ BBUF[29];\r\n    this.v7l ^= BBUF[14] ^ BBUF[30];\r\n    this.v7h ^= BBUF[15] ^ BBUF[31];\r\n    clean(BBUF);\r\n  }\r\n  destroy(): void {\r\n    this.destroyed = true;\r\n    clean(this.buffer32);\r\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n  }\r\n}\r\n\r\n/**\r\n * Blake2b hash function. 64-bit. 1.5x slower than blake2s in JS.\r\n * @param msg - message that would be hashed\r\n * @param opts - dkLen output length, key for MAC mode, salt, personalization\r\n */\r\nexport const blake2b: CHashO = /* @__PURE__ */ createOptHasher<BLAKE2b, Blake2Opts>(\r\n  (opts) => new BLAKE2b(opts)\r\n);\r\n\r\n// =================\r\n// Blake2S\r\n// =================\r\n\r\n// prettier-ignore\r\nexport type Num16 = {\r\n  v0: number; v1: number; v2: number; v3: number;\r\n  v4: number; v5: number; v6: number; v7: number;\r\n  v8: number; v9: number; v10: number; v11: number;\r\n  v12: number; v13: number; v14: number; v15: number;\r\n};\r\n\r\n// prettier-ignore\r\nexport function compress(s: Uint8Array, offset: number, msg: Uint32Array, rounds: number,\r\n  v0: number, v1: number, v2: number, v3: number, v4: number, v5: number, v6: number, v7: number,\r\n  v8: number, v9: number, v10: number, v11: number, v12: number, v13: number, v14: number, v15: number,\r\n): Num16 {\r\n  let j = 0;\r\n  for (let i = 0; i < rounds; i++) {\r\n    ({ a: v0, b: v4, c: v8, d: v12 } = G1s(v0, v4, v8, v12, msg[offset + s[j++]]));\r\n    ({ a: v0, b: v4, c: v8, d: v12 } = G2s(v0, v4, v8, v12, msg[offset + s[j++]]));\r\n    ({ a: v1, b: v5, c: v9, d: v13 } = G1s(v1, v5, v9, v13, msg[offset + s[j++]]));\r\n    ({ a: v1, b: v5, c: v9, d: v13 } = G2s(v1, v5, v9, v13, msg[offset + s[j++]]));\r\n    ({ a: v2, b: v6, c: v10, d: v14 } = G1s(v2, v6, v10, v14, msg[offset + s[j++]]));\r\n    ({ a: v2, b: v6, c: v10, d: v14 } = G2s(v2, v6, v10, v14, msg[offset + s[j++]]));\r\n    ({ a: v3, b: v7, c: v11, d: v15 } = G1s(v3, v7, v11, v15, msg[offset + s[j++]]));\r\n    ({ a: v3, b: v7, c: v11, d: v15 } = G2s(v3, v7, v11, v15, msg[offset + s[j++]]));\r\n\r\n    ({ a: v0, b: v5, c: v10, d: v15 } = G1s(v0, v5, v10, v15, msg[offset + s[j++]]));\r\n    ({ a: v0, b: v5, c: v10, d: v15 } = G2s(v0, v5, v10, v15, msg[offset + s[j++]]));\r\n    ({ a: v1, b: v6, c: v11, d: v12 } = G1s(v1, v6, v11, v12, msg[offset + s[j++]]));\r\n    ({ a: v1, b: v6, c: v11, d: v12 } = G2s(v1, v6, v11, v12, msg[offset + s[j++]]));\r\n    ({ a: v2, b: v7, c: v8, d: v13 } = G1s(v2, v7, v8, v13, msg[offset + s[j++]]));\r\n    ({ a: v2, b: v7, c: v8, d: v13 } = G2s(v2, v7, v8, v13, msg[offset + s[j++]]));\r\n    ({ a: v3, b: v4, c: v9, d: v14 } = G1s(v3, v4, v9, v14, msg[offset + s[j++]]));\r\n    ({ a: v3, b: v4, c: v9, d: v14 } = G2s(v3, v4, v9, v14, msg[offset + s[j++]]));\r\n  }\r\n  return { v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15 };\r\n}\r\n\r\nconst B2S_IV = SHA256_IV;\r\nexport class BLAKE2s extends BLAKE2<BLAKE2s> {\r\n  // Internal state, same as SHA-256\r\n  private v0 = B2S_IV[0] | 0;\r\n  private v1 = B2S_IV[1] | 0;\r\n  private v2 = B2S_IV[2] | 0;\r\n  private v3 = B2S_IV[3] | 0;\r\n  private v4 = B2S_IV[4] | 0;\r\n  private v5 = B2S_IV[5] | 0;\r\n  private v6 = B2S_IV[6] | 0;\r\n  private v7 = B2S_IV[7] | 0;\r\n\r\n  constructor(opts: Blake2Opts = {}) {\r\n    const olen = opts.dkLen === undefined ? 32 : opts.dkLen;\r\n    super(64, olen);\r\n    checkBlake2Opts(olen, opts, 32, 8, 8);\r\n    let { key, personalization, salt } = opts;\r\n    let keyLength = 0;\r\n    if (key !== undefined) {\r\n      key = toBytes(key);\r\n      keyLength = key.length;\r\n    }\r\n    this.v0 ^= this.outputLen | (keyLength << 8) | (0x01 << 16) | (0x01 << 24);\r\n    if (salt !== undefined) {\r\n      salt = toBytes(salt);\r\n      const slt = u32(salt as Uint8Array);\r\n      this.v4 ^= swap8IfBE(slt[0]);\r\n      this.v5 ^= swap8IfBE(slt[1]);\r\n    }\r\n    if (personalization !== undefined) {\r\n      personalization = toBytes(personalization);\r\n      const pers = u32(personalization as Uint8Array);\r\n      this.v6 ^= swap8IfBE(pers[0]);\r\n      this.v7 ^= swap8IfBE(pers[1]);\r\n    }\r\n    if (key !== undefined) {\r\n      // Pad to blockLen and update\r\n      abytes(key);\r\n      const tmp = new Uint8Array(this.blockLen);\r\n      tmp.set(key);\r\n      this.update(tmp);\r\n    }\r\n  }\r\n  protected get(): [number, number, number, number, number, number, number, number] {\r\n    const { v0, v1, v2, v3, v4, v5, v6, v7 } = this;\r\n    return [v0, v1, v2, v3, v4, v5, v6, v7];\r\n  }\r\n  // prettier-ignore\r\n  protected set(\r\n    v0: number, v1: number, v2: number, v3: number, v4: number, v5: number, v6: number, v7: number\r\n  ): void {\r\n    this.v0 = v0 | 0;\r\n    this.v1 = v1 | 0;\r\n    this.v2 = v2 | 0;\r\n    this.v3 = v3 | 0;\r\n    this.v4 = v4 | 0;\r\n    this.v5 = v5 | 0;\r\n    this.v6 = v6 | 0;\r\n    this.v7 = v7 | 0;\r\n  }\r\n  protected compress(msg: Uint32Array, offset: number, isLast: boolean): void {\r\n    const { h, l } = u64.fromBig(BigInt(this.length));\r\n    // prettier-ignore\r\n    const { v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15 } =\r\n      compress(\r\n        BSIGMA, offset, msg, 10,\r\n        this.v0, this.v1, this.v2, this.v3, this.v4, this.v5, this.v6, this.v7,\r\n        B2S_IV[0], B2S_IV[1], B2S_IV[2], B2S_IV[3], l ^ B2S_IV[4], h ^ B2S_IV[5], isLast ? ~B2S_IV[6] : B2S_IV[6], B2S_IV[7]\r\n      );\r\n    this.v0 ^= v0 ^ v8;\r\n    this.v1 ^= v1 ^ v9;\r\n    this.v2 ^= v2 ^ v10;\r\n    this.v3 ^= v3 ^ v11;\r\n    this.v4 ^= v4 ^ v12;\r\n    this.v5 ^= v5 ^ v13;\r\n    this.v6 ^= v6 ^ v14;\r\n    this.v7 ^= v7 ^ v15;\r\n  }\r\n  destroy(): void {\r\n    this.destroyed = true;\r\n    clean(this.buffer32);\r\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\r\n  }\r\n}\r\n\r\n/**\r\n * Blake2s hash function. Focuses on 8-bit to 32-bit platforms. 1.5x faster than blake2b in JS.\r\n * @param msg - message that would be hashed\r\n * @param opts - dkLen output length, key for MAC mode, salt, personalization\r\n */\r\nexport const blake2s: CHashO = /* @__PURE__ */ createOptHasher<BLAKE2s, Blake2Opts>(\r\n  (opts) => new BLAKE2s(opts)\r\n);\r\n", "/**\r\n * Blake2b hash function. Focuses on 64-bit platforms, but in JS speed different from Blake2s is negligible.\r\n * @module\r\n * @deprecated\r\n */\r\nimport { BLAKE2b as B2B, blake2b as b2b } from './blake2.ts';\r\n/** @deprecated Use import from `noble/hashes/blake2` module */\r\nexport const BLAKE2b: typeof B2B = B2B;\r\n/** @deprecated Use import from `noble/hashes/blake2` module */\r\nexport const blake2b: typeof b2b = b2b;\r\n", "/**\r\n * HMAC: RFC2104 message authentication code.\r\n * @module\r\n */\r\nimport { abytes, aexists, ahash, clean, Hash, toBytes, type CHash, type Input } from './utils.ts';\r\n\r\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\r\n  oHash: T;\r\n  iHash: T;\r\n  blockLen: number;\r\n  outputLen: number;\r\n  private finished = false;\r\n  private destroyed = false;\r\n\r\n  constructor(hash: CHash, _key: Input) {\r\n    super();\r\n    ahash(hash);\r\n    const key = toBytes(_key);\r\n    this.iHash = hash.create() as T;\r\n    if (typeof this.iHash.update !== 'function')\r\n      throw new Error('Expected instance of class which extends utils.Hash');\r\n    this.blockLen = this.iHash.blockLen;\r\n    this.outputLen = this.iHash.outputLen;\r\n    const blockLen = this.blockLen;\r\n    const pad = new Uint8Array(blockLen);\r\n    // blockLen can be bigger than outputLen\r\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\r\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\r\n    this.iHash.update(pad);\r\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\r\n    this.oHash = hash.create() as T;\r\n    // Undo internal XOR && apply outer XOR\r\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\r\n    this.oHash.update(pad);\r\n    clean(pad);\r\n  }\r\n  update(buf: Input): this {\r\n    aexists(this);\r\n    this.iHash.update(buf);\r\n    return this;\r\n  }\r\n  digestInto(out: Uint8Array): void {\r\n    aexists(this);\r\n    abytes(out, this.outputLen);\r\n    this.finished = true;\r\n    this.iHash.digestInto(out);\r\n    this.oHash.update(out);\r\n    this.oHash.digestInto(out);\r\n    this.destroy();\r\n  }\r\n  digest(): Uint8Array {\r\n    const out = new Uint8Array(this.oHash.outputLen);\r\n    this.digestInto(out);\r\n    return out;\r\n  }\r\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\r\n    // Create new instance without calling constructor since key already in state and we don't know it.\r\n    to ||= Object.create(Object.getPrototypeOf(this), {});\r\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\r\n    to = to as this;\r\n    to.finished = finished;\r\n    to.destroyed = destroyed;\r\n    to.blockLen = blockLen;\r\n    to.outputLen = outputLen;\r\n    to.oHash = oHash._cloneInto(to.oHash);\r\n    to.iHash = iHash._cloneInto(to.iHash);\r\n    return to;\r\n  }\r\n  clone(): HMAC<T> {\r\n    return this._cloneInto();\r\n  }\r\n  destroy(): void {\r\n    this.destroyed = true;\r\n    this.oHash.destroy();\r\n    this.iHash.destroy();\r\n  }\r\n}\r\n\r\n/**\r\n * HMAC: RFC2104 message authentication code.\r\n * @param hash - function that would be used e.g. sha256\r\n * @param key - message key\r\n * @param message - message data\r\n * @example\r\n * import { hmac } from '@noble/hashes/hmac';\r\n * import { sha256 } from '@noble/hashes/sha2';\r\n * const mac1 = hmac(sha256, 'key', 'message');\r\n */\r\nexport const hmac: {\r\n  (hash: CHash, key: Input, message: Input): Uint8Array;\r\n  create(hash: CHash, key: Input): HMAC<any>;\r\n} = (hash: CHash, key: Input, message: Input): Uint8Array =>\r\n  new HMAC<any>(hash, key).update(message).digest();\r\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\r\n", "/**\r\n * PBKDF (RFC 2898). Can be used to create a key from password and salt.\r\n * @module\r\n */\r\nimport { hmac } from './hmac.ts';\r\n// prettier-ignore\r\nimport {\r\n  ahash, anumber,\r\n  asyncLoop, checkOpts, clean, createView, Hash, kdfInputToBytes,\r\n  type CHash,\r\n  type KDFInput\r\n} from './utils.ts';\r\n\r\nexport type Pbkdf2Opt = {\r\n  c: number; // Iterations\r\n  dkLen?: number; // Desired key length in bytes (Intended output length in octets of the derived key\r\n  asyncTick?: number; // Maximum time in ms for which async function can block execution\r\n};\r\n// Common prologue and epilogue for sync/async functions\r\nfunction pbkdf2Init(hash: CHash, _password: KDFInput, _salt: KDFInput, _opts: Pbkdf2Opt) {\r\n  ahash(hash);\r\n  const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\r\n  const { c, dkLen, asyncTick } = opts;\r\n  anumber(c);\r\n  anumber(dkLen);\r\n  anumber(asyncTick);\r\n  if (c < 1) throw new Error('iterations (c) should be >= 1');\r\n  const password = kdfInputToBytes(_password);\r\n  const salt = kdfInputToBytes(_salt);\r\n  // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\r\n  const DK = new Uint8Array(dkLen);\r\n  // U1 = PRF(Password, Salt + INT_32_BE(i))\r\n  const PRF = hmac.create(hash, password);\r\n  const PRFSalt = PRF._cloneInto().update(salt);\r\n  return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\r\n}\r\n\r\nfunction pbkdf2Output<T extends Hash<T>>(\r\n  PRF: Hash<T>,\r\n  PRFSalt: Hash<T>,\r\n  DK: Uint8Array,\r\n  prfW: Hash<T>,\r\n  u: Uint8Array\r\n) {\r\n  PRF.destroy();\r\n  PRFSalt.destroy();\r\n  if (prfW) prfW.destroy();\r\n  clean(u);\r\n  return DK;\r\n}\r\n\r\n/**\r\n * PBKDF2-HMAC: RFC 2898 key derivation function\r\n * @param hash - hash function that would be used e.g. sha256\r\n * @param password - password from which a derived key is generated\r\n * @param salt - cryptographic salt\r\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\r\n * @example\r\n * const key = pbkdf2(sha256, 'password', 'salt', { dkLen: 32, c: Math.pow(2, 18) });\r\n */\r\nexport function pbkdf2(\r\n  hash: CHash,\r\n  password: KDFInput,\r\n  salt: KDFInput,\r\n  opts: Pbkdf2Opt\r\n): Uint8Array {\r\n  const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\r\n  let prfW: any; // Working copy\r\n  const arr = new Uint8Array(4);\r\n  const view = createView(arr);\r\n  const u = new Uint8Array(PRF.outputLen);\r\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\r\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\r\n    // Ti = F(Password, Salt, c, i)\r\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\r\n    view.setInt32(0, ti, false);\r\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\r\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\r\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\r\n    Ti.set(u.subarray(0, Ti.length));\r\n    for (let ui = 1; ui < c; ui++) {\r\n      // Uc = PRF(Password, Uc−1)\r\n      PRF._cloneInto(prfW).update(u).digestInto(u);\r\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\r\n    }\r\n  }\r\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\r\n}\r\n\r\n/**\r\n * PBKDF2-HMAC: RFC 2898 key derivation function. Async version.\r\n * @example\r\n * await pbkdf2Async(sha256, 'password', 'salt', { dkLen: 32, c: 500_000 });\r\n */\r\nexport async function pbkdf2Async(\r\n  hash: CHash,\r\n  password: KDFInput,\r\n  salt: KDFInput,\r\n  opts: Pbkdf2Opt\r\n): Promise<Uint8Array> {\r\n  const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\r\n  let prfW: any; // Working copy\r\n  const arr = new Uint8Array(4);\r\n  const view = createView(arr);\r\n  const u = new Uint8Array(PRF.outputLen);\r\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\r\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\r\n    // Ti = F(Password, Salt, c, i)\r\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\r\n    view.setInt32(0, ti, false);\r\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\r\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\r\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\r\n    Ti.set(u.subarray(0, Ti.length));\r\n    await asyncLoop(c - 1, asyncTick, () => {\r\n      // Uc = PRF(Password, Uc−1)\r\n      PRF._cloneInto(prfW).update(u).digestInto(u);\r\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\r\n    });\r\n  }\r\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\r\n}\r\n", "/**\r\n * SHA2 hash function. A.k.a. sha256, sha384, sha512, sha512_224, sha512_256.\r\n * SHA256 is the fastest hash implementable in JS, even faster than Blake3.\r\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\r\n * [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\r\n * @module\r\n */\r\nimport { Chi, HashMD, Maj, SHA224_IV, SHA256_IV, SHA384_IV, SHA512_IV } from './_md.ts';\r\nimport * as u64 from './_u64.ts';\r\nimport { type CHash, clean, createHasher, rotr } from './utils.ts';\r\n\r\n/**\r\n * Round constants:\r\n * First 32 bits of fractional parts of the cube roots of the first 64 primes 2..311)\r\n */\r\n// prettier-ignore\r\nconst SHA256_K = /* @__PURE__ */ Uint32Array.from([\r\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\r\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\r\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\r\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\r\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\r\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\r\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\r\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\r\n]);\r\n\r\n/** Reusable temporary buffer. \"W\" comes straight from spec. */\r\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\r\nexport class SHA256 extends HashMD<SHA256> {\r\n  // We cannot use array here since array allows indexing by variable\r\n  // which means optimizer/compiler cannot use registers.\r\n  protected A: number = SHA256_IV[0] | 0;\r\n  protected B: number = SHA256_IV[1] | 0;\r\n  protected C: number = SHA256_IV[2] | 0;\r\n  protected D: number = SHA256_IV[3] | 0;\r\n  protected E: number = SHA256_IV[4] | 0;\r\n  protected F: number = SHA256_IV[5] | 0;\r\n  protected G: number = SHA256_IV[6] | 0;\r\n  protected H: number = SHA256_IV[7] | 0;\r\n\r\n  constructor(outputLen: number = 32) {\r\n    super(64, outputLen, 8, false);\r\n  }\r\n  protected get(): [number, number, number, number, number, number, number, number] {\r\n    const { A, B, C, D, E, F, G, H } = this;\r\n    return [A, B, C, D, E, F, G, H];\r\n  }\r\n  // prettier-ignore\r\n  protected set(\r\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\r\n  ): void {\r\n    this.A = A | 0;\r\n    this.B = B | 0;\r\n    this.C = C | 0;\r\n    this.D = D | 0;\r\n    this.E = E | 0;\r\n    this.F = F | 0;\r\n    this.G = G | 0;\r\n    this.H = H | 0;\r\n  }\r\n  protected process(view: DataView, offset: number): void {\r\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\r\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\r\n    for (let i = 16; i < 64; i++) {\r\n      const W15 = SHA256_W[i - 15];\r\n      const W2 = SHA256_W[i - 2];\r\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\r\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\r\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\r\n    }\r\n    // Compression function main loop, 64 rounds\r\n    let { A, B, C, D, E, F, G, H } = this;\r\n    for (let i = 0; i < 64; i++) {\r\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\r\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\r\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\r\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\r\n      H = G;\r\n      G = F;\r\n      F = E;\r\n      E = (D + T1) | 0;\r\n      D = C;\r\n      C = B;\r\n      B = A;\r\n      A = (T1 + T2) | 0;\r\n    }\r\n    // Add the compressed chunk to the current hash value\r\n    A = (A + this.A) | 0;\r\n    B = (B + this.B) | 0;\r\n    C = (C + this.C) | 0;\r\n    D = (D + this.D) | 0;\r\n    E = (E + this.E) | 0;\r\n    F = (F + this.F) | 0;\r\n    G = (G + this.G) | 0;\r\n    H = (H + this.H) | 0;\r\n    this.set(A, B, C, D, E, F, G, H);\r\n  }\r\n  protected roundClean(): void {\r\n    clean(SHA256_W);\r\n  }\r\n  destroy(): void {\r\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\r\n    clean(this.buffer);\r\n  }\r\n}\r\n\r\nexport class SHA224 extends SHA256 {\r\n  protected A: number = SHA224_IV[0] | 0;\r\n  protected B: number = SHA224_IV[1] | 0;\r\n  protected C: number = SHA224_IV[2] | 0;\r\n  protected D: number = SHA224_IV[3] | 0;\r\n  protected E: number = SHA224_IV[4] | 0;\r\n  protected F: number = SHA224_IV[5] | 0;\r\n  protected G: number = SHA224_IV[6] | 0;\r\n  protected H: number = SHA224_IV[7] | 0;\r\n  constructor() {\r\n    super(28);\r\n  }\r\n}\r\n\r\n// SHA2-512 is slower than sha256 in js because u64 operations are slow.\r\n\r\n// Round contants\r\n// First 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409\r\n// prettier-ignore\r\nconst K512 = /* @__PURE__ */ (() => u64.split([\r\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\r\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\r\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\r\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\r\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\r\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\r\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\r\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\r\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\r\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\r\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\r\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\r\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\r\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\r\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\r\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\r\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\r\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\r\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\r\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\r\n].map(n => BigInt(n))))();\r\nconst SHA512_Kh = /* @__PURE__ */ (() => K512[0])();\r\nconst SHA512_Kl = /* @__PURE__ */ (() => K512[1])();\r\n\r\n// Reusable temporary buffers\r\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\r\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\r\n\r\nexport class SHA512 extends HashMD<SHA512> {\r\n  // We cannot use array here since array allows indexing by variable\r\n  // which means optimizer/compiler cannot use registers.\r\n  // h -- high 32 bits, l -- low 32 bits\r\n  protected Ah: number = SHA512_IV[0] | 0;\r\n  protected Al: number = SHA512_IV[1] | 0;\r\n  protected Bh: number = SHA512_IV[2] | 0;\r\n  protected Bl: number = SHA512_IV[3] | 0;\r\n  protected Ch: number = SHA512_IV[4] | 0;\r\n  protected Cl: number = SHA512_IV[5] | 0;\r\n  protected Dh: number = SHA512_IV[6] | 0;\r\n  protected Dl: number = SHA512_IV[7] | 0;\r\n  protected Eh: number = SHA512_IV[8] | 0;\r\n  protected El: number = SHA512_IV[9] | 0;\r\n  protected Fh: number = SHA512_IV[10] | 0;\r\n  protected Fl: number = SHA512_IV[11] | 0;\r\n  protected Gh: number = SHA512_IV[12] | 0;\r\n  protected Gl: number = SHA512_IV[13] | 0;\r\n  protected Hh: number = SHA512_IV[14] | 0;\r\n  protected Hl: number = SHA512_IV[15] | 0;\r\n\r\n  constructor(outputLen: number = 64) {\r\n    super(128, outputLen, 16, false);\r\n  }\r\n  // prettier-ignore\r\n  protected get(): [\r\n    number, number, number, number, number, number, number, number,\r\n    number, number, number, number, number, number, number, number\r\n  ] {\r\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\r\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\r\n  }\r\n  // prettier-ignore\r\n  protected set(\r\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\r\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\r\n  ): void {\r\n    this.Ah = Ah | 0;\r\n    this.Al = Al | 0;\r\n    this.Bh = Bh | 0;\r\n    this.Bl = Bl | 0;\r\n    this.Ch = Ch | 0;\r\n    this.Cl = Cl | 0;\r\n    this.Dh = Dh | 0;\r\n    this.Dl = Dl | 0;\r\n    this.Eh = Eh | 0;\r\n    this.El = El | 0;\r\n    this.Fh = Fh | 0;\r\n    this.Fl = Fl | 0;\r\n    this.Gh = Gh | 0;\r\n    this.Gl = Gl | 0;\r\n    this.Hh = Hh | 0;\r\n    this.Hl = Hl | 0;\r\n  }\r\n  protected process(view: DataView, offset: number): void {\r\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\r\n    for (let i = 0; i < 16; i++, offset += 4) {\r\n      SHA512_W_H[i] = view.getUint32(offset);\r\n      SHA512_W_L[i] = view.getUint32((offset += 4));\r\n    }\r\n    for (let i = 16; i < 80; i++) {\r\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\r\n      const W15h = SHA512_W_H[i - 15] | 0;\r\n      const W15l = SHA512_W_L[i - 15] | 0;\r\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\r\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\r\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\r\n      const W2h = SHA512_W_H[i - 2] | 0;\r\n      const W2l = SHA512_W_L[i - 2] | 0;\r\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\r\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\r\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\r\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\r\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\r\n      SHA512_W_H[i] = SUMh | 0;\r\n      SHA512_W_L[i] = SUMl | 0;\r\n    }\r\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\r\n    // Compression function main loop, 80 rounds\r\n    for (let i = 0; i < 80; i++) {\r\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\r\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\r\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\r\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\r\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\r\n      const CHIl = (El & Fl) ^ (~El & Gl);\r\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\r\n      // prettier-ignore\r\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\r\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\r\n      const T1l = T1ll | 0;\r\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\r\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\r\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\r\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\r\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\r\n      Hh = Gh | 0;\r\n      Hl = Gl | 0;\r\n      Gh = Fh | 0;\r\n      Gl = Fl | 0;\r\n      Fh = Eh | 0;\r\n      Fl = El | 0;\r\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\r\n      Dh = Ch | 0;\r\n      Dl = Cl | 0;\r\n      Ch = Bh | 0;\r\n      Cl = Bl | 0;\r\n      Bh = Ah | 0;\r\n      Bl = Al | 0;\r\n      const All = u64.add3L(T1l, sigma0l, MAJl);\r\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\r\n      Al = All | 0;\r\n    }\r\n    // Add the compressed chunk to the current hash value\r\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\r\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\r\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\r\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\r\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\r\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\r\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\r\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\r\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\r\n  }\r\n  protected roundClean(): void {\r\n    clean(SHA512_W_H, SHA512_W_L);\r\n  }\r\n  destroy(): void {\r\n    clean(this.buffer);\r\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n  }\r\n}\r\n\r\nexport class SHA384 extends SHA512 {\r\n  protected Ah: number = SHA384_IV[0] | 0;\r\n  protected Al: number = SHA384_IV[1] | 0;\r\n  protected Bh: number = SHA384_IV[2] | 0;\r\n  protected Bl: number = SHA384_IV[3] | 0;\r\n  protected Ch: number = SHA384_IV[4] | 0;\r\n  protected Cl: number = SHA384_IV[5] | 0;\r\n  protected Dh: number = SHA384_IV[6] | 0;\r\n  protected Dl: number = SHA384_IV[7] | 0;\r\n  protected Eh: number = SHA384_IV[8] | 0;\r\n  protected El: number = SHA384_IV[9] | 0;\r\n  protected Fh: number = SHA384_IV[10] | 0;\r\n  protected Fl: number = SHA384_IV[11] | 0;\r\n  protected Gh: number = SHA384_IV[12] | 0;\r\n  protected Gl: number = SHA384_IV[13] | 0;\r\n  protected Hh: number = SHA384_IV[14] | 0;\r\n  protected Hl: number = SHA384_IV[15] | 0;\r\n\r\n  constructor() {\r\n    super(48);\r\n  }\r\n}\r\n\r\n/**\r\n * Truncated SHA512/256 and SHA512/224.\r\n * SHA512_IV is XORed with 0xa5a5a5a5a5a5a5a5, then used as \"intermediary\" IV of SHA512/t.\r\n * Then t hashes string to produce result IV.\r\n * See `test/misc/sha2-gen-iv.js`.\r\n */\r\n\r\n/** SHA512/224 IV */\r\nconst T224_IV = /* @__PURE__ */ Uint32Array.from([\r\n  0x8c3d37c8, 0x19544da2, 0x73e19966, 0x89dcd4d6, 0x1dfab7ae, 0x32ff9c82, 0x679dd514, 0x582f9fcf,\r\n  0x0f6d2b69, 0x7bd44da8, 0x77e36f73, 0x04c48942, 0x3f9d85a8, 0x6a1d36c8, 0x1112e6ad, 0x91d692a1,\r\n]);\r\n\r\n/** SHA512/256 IV */\r\nconst T256_IV = /* @__PURE__ */ Uint32Array.from([\r\n  0x22312194, 0xfc2bf72c, 0x9f555fa3, 0xc84c64c2, 0x2393b86b, 0x6f53b151, 0x96387719, 0x5940eabd,\r\n  0x96283ee2, 0xa88effe3, 0xbe5e1e25, 0x53863992, 0x2b0199fc, 0x2c85b8aa, 0x0eb72ddc, 0x81c52ca2,\r\n]);\r\n\r\nexport class SHA512_224 extends SHA512 {\r\n  protected Ah: number = T224_IV[0] | 0;\r\n  protected Al: number = T224_IV[1] | 0;\r\n  protected Bh: number = T224_IV[2] | 0;\r\n  protected Bl: number = T224_IV[3] | 0;\r\n  protected Ch: number = T224_IV[4] | 0;\r\n  protected Cl: number = T224_IV[5] | 0;\r\n  protected Dh: number = T224_IV[6] | 0;\r\n  protected Dl: number = T224_IV[7] | 0;\r\n  protected Eh: number = T224_IV[8] | 0;\r\n  protected El: number = T224_IV[9] | 0;\r\n  protected Fh: number = T224_IV[10] | 0;\r\n  protected Fl: number = T224_IV[11] | 0;\r\n  protected Gh: number = T224_IV[12] | 0;\r\n  protected Gl: number = T224_IV[13] | 0;\r\n  protected Hh: number = T224_IV[14] | 0;\r\n  protected Hl: number = T224_IV[15] | 0;\r\n\r\n  constructor() {\r\n    super(28);\r\n  }\r\n}\r\n\r\nexport class SHA512_256 extends SHA512 {\r\n  protected Ah: number = T256_IV[0] | 0;\r\n  protected Al: number = T256_IV[1] | 0;\r\n  protected Bh: number = T256_IV[2] | 0;\r\n  protected Bl: number = T256_IV[3] | 0;\r\n  protected Ch: number = T256_IV[4] | 0;\r\n  protected Cl: number = T256_IV[5] | 0;\r\n  protected Dh: number = T256_IV[6] | 0;\r\n  protected Dl: number = T256_IV[7] | 0;\r\n  protected Eh: number = T256_IV[8] | 0;\r\n  protected El: number = T256_IV[9] | 0;\r\n  protected Fh: number = T256_IV[10] | 0;\r\n  protected Fl: number = T256_IV[11] | 0;\r\n  protected Gh: number = T256_IV[12] | 0;\r\n  protected Gl: number = T256_IV[13] | 0;\r\n  protected Hh: number = T256_IV[14] | 0;\r\n  protected Hl: number = T256_IV[15] | 0;\r\n\r\n  constructor() {\r\n    super(32);\r\n  }\r\n}\r\n\r\n/**\r\n * SHA2-256 hash function from RFC 4634.\r\n *\r\n * It is the fastest JS hash, even faster than Blake3.\r\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\r\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\r\n */\r\nexport const sha256: CHash = /* @__PURE__ */ createHasher(() => new SHA256());\r\n/** SHA2-224 hash function from RFC 4634 */\r\nexport const sha224: CHash = /* @__PURE__ */ createHasher(() => new SHA224());\r\n\r\n/** SHA2-512 hash function from RFC 4634. */\r\nexport const sha512: CHash = /* @__PURE__ */ createHasher(() => new SHA512());\r\n/** SHA2-384 hash function from RFC 4634. */\r\nexport const sha384: CHash = /* @__PURE__ */ createHasher(() => new SHA384());\r\n\r\n/**\r\n * SHA2-512/256 \"truncated\" hash function, with improved resistance to length extension attacks.\r\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\r\n */\r\nexport const sha512_256: CHash = /* @__PURE__ */ createHasher(() => new SHA512_256());\r\n/**\r\n * SHA2-512/224 \"truncated\" hash function, with improved resistance to length extension attacks.\r\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\r\n */\r\nexport const sha512_224: CHash = /* @__PURE__ */ createHasher(() => new SHA512_224());\r\n", "/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\r\n\r\nexport interface Coder<F, T> {\r\n  encode(from: F): T;\r\n  decode(to: T): F;\r\n}\r\n\r\nexport interface BytesCoder extends Coder<Uint8Array, string> {\r\n  encode: (data: Uint8Array) => string;\r\n  decode: (str: string) => Uint8Array;\r\n}\r\n\r\nfunction isBytes(a: unknown): a is Uint8Array {\r\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\r\n}\r\n/** Asserts something is Uint8Array. */\r\nfunction abytes(b: Uint8Array | undefined, ...lengths: number[]): void {\r\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\r\n  if (lengths.length > 0 && !lengths.includes(b.length))\r\n    throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\r\n}\r\n\r\nfunction isArrayOf(isString: boolean, arr: any[]) {\r\n  if (!Array.isArray(arr)) return false;\r\n  if (arr.length === 0) return true;\r\n  if (isString) {\r\n    return arr.every((item) => typeof item === 'string');\r\n  } else {\r\n    return arr.every((item) => Number.isSafeInteger(item));\r\n  }\r\n}\r\n\r\n// no abytes: seems to have 10% slowdown. Why?!\r\n\r\nfunction afn(input: Function): input is Function {\r\n  if (typeof input !== 'function') throw new Error('function expected');\r\n  return true;\r\n}\r\n\r\nfunction astr(label: string, input: unknown): input is string {\r\n  if (typeof input !== 'string') throw new Error(`${label}: string expected`);\r\n  return true;\r\n}\r\n\r\nfunction anumber(n: number): void {\r\n  if (!Number.isSafeInteger(n)) throw new Error(`invalid integer: ${n}`);\r\n}\r\n\r\nfunction aArr(input: any[]) {\r\n  if (!Array.isArray(input)) throw new Error('array expected');\r\n}\r\nfunction astrArr(label: string, input: string[]) {\r\n  if (!isArrayOf(true, input)) throw new Error(`${label}: array of strings expected`);\r\n}\r\nfunction anumArr(label: string, input: number[]) {\r\n  if (!isArrayOf(false, input)) throw new Error(`${label}: array of numbers expected`);\r\n}\r\n\r\n// TODO: some recusive type inference so it would check correct order of input/output inside rest?\r\n// like <string, number>, <number, bytes>, <bytes, float>\r\ntype Chain = [Coder<any, any>, ...Coder<any, any>[]];\r\n// Extract info from Coder type\r\ntype Input<F> = F extends Coder<infer T, any> ? T : never;\r\ntype Output<F> = F extends Coder<any, infer T> ? T : never;\r\n// Generic function for arrays\r\ntype First<T> = T extends [infer U, ...any[]] ? U : never;\r\ntype Last<T> = T extends [...any[], infer U] ? U : never;\r\ntype Tail<T> = T extends [any, ...infer U] ? U : never;\r\n\r\ntype AsChain<C extends Chain, Rest = Tail<C>> = {\r\n  // C[K] = Coder<Input<C[K]>, Input<Rest[k]>>\r\n  [K in keyof C]: Coder<Input<C[K]>, Input<K extends keyof Rest ? Rest[K] : any>>;\r\n};\r\n\r\n/**\r\n * @__NO_SIDE_EFFECTS__\r\n */\r\nfunction chain<T extends Chain & AsChain<T>>(...args: T): Coder<Input<First<T>>, Output<Last<T>>> {\r\n  const id = (a: any) => a;\r\n  // Wrap call in closure so JIT can inline calls\r\n  const wrap = (a: any, b: any) => (c: any) => a(b(c));\r\n  // Construct chain of args[-1].encode(args[-2].encode([...]))\r\n  const encode = args.map((x) => x.encode).reduceRight(wrap, id);\r\n  // Construct chain of args[0].decode(args[1].decode(...))\r\n  const decode = args.map((x) => x.decode).reduce(wrap, id);\r\n  return { encode, decode };\r\n}\r\n\r\n/**\r\n * Encodes integer radix representation to array of strings using alphabet and back.\r\n * Could also be array of strings.\r\n * @__NO_SIDE_EFFECTS__\r\n */\r\nfunction alphabet(letters: string | string[]): Coder<number[], string[]> {\r\n  // mapping 1 to \"b\"\r\n  const lettersA = typeof letters === 'string' ? letters.split('') : letters;\r\n  const len = lettersA.length;\r\n  astrArr('alphabet', lettersA);\r\n\r\n  // mapping \"b\" to 1\r\n  const indexes = new Map(lettersA.map((l, i) => [l, i]));\r\n  return {\r\n    encode: (digits: number[]) => {\r\n      aArr(digits);\r\n      return digits.map((i) => {\r\n        if (!Number.isSafeInteger(i) || i < 0 || i >= len)\r\n          throw new Error(\r\n            `alphabet.encode: digit index outside alphabet \"${i}\". Allowed: ${letters}`\r\n          );\r\n        return lettersA[i]!;\r\n      });\r\n    },\r\n    decode: (input: string[]): number[] => {\r\n      aArr(input);\r\n      return input.map((letter) => {\r\n        astr('alphabet.decode', letter);\r\n        const i = indexes.get(letter);\r\n        if (i === undefined) throw new Error(`Unknown letter: \"${letter}\". Allowed: ${letters}`);\r\n        return i;\r\n      });\r\n    },\r\n  };\r\n}\r\n\r\n/**\r\n * @__NO_SIDE_EFFECTS__\r\n */\r\nfunction join(separator = ''): Coder<string[], string> {\r\n  astr('join', separator);\r\n  return {\r\n    encode: (from) => {\r\n      astrArr('join.decode', from);\r\n      return from.join(separator);\r\n    },\r\n    decode: (to) => {\r\n      astr('join.decode', to);\r\n      return to.split(separator);\r\n    },\r\n  };\r\n}\r\n\r\n/**\r\n * Pad strings array so it has integer number of bits\r\n * @__NO_SIDE_EFFECTS__\r\n */\r\nfunction padding(bits: number, chr = '='): Coder<string[], string[]> {\r\n  anumber(bits);\r\n  astr('padding', chr);\r\n  return {\r\n    encode(data: string[]): string[] {\r\n      astrArr('padding.encode', data);\r\n      while ((data.length * bits) % 8) data.push(chr);\r\n      return data;\r\n    },\r\n    decode(input: string[]): string[] {\r\n      astrArr('padding.decode', input);\r\n      let end = input.length;\r\n      if ((end * bits) % 8)\r\n        throw new Error('padding: invalid, string should have whole number of bytes');\r\n      for (; end > 0 && input[end - 1] === chr; end--) {\r\n        const last = end - 1;\r\n        const byte = last * bits;\r\n        if (byte % 8 === 0) throw new Error('padding: invalid, string has too much padding');\r\n      }\r\n      return input.slice(0, end);\r\n    },\r\n  };\r\n}\r\n\r\n/**\r\n * @__NO_SIDE_EFFECTS__\r\n */\r\nfunction normalize<T>(fn: (val: T) => T): Coder<T, T> {\r\n  afn(fn);\r\n  return { encode: (from: T) => from, decode: (to: T) => fn(to) };\r\n}\r\n\r\n/**\r\n * Slow: O(n^2) time complexity\r\n */\r\nfunction convertRadix(data: number[], from: number, to: number): number[] {\r\n  // base 1 is impossible\r\n  if (from < 2) throw new Error(`convertRadix: invalid from=${from}, base cannot be less than 2`);\r\n  if (to < 2) throw new Error(`convertRadix: invalid to=${to}, base cannot be less than 2`);\r\n  aArr(data);\r\n  if (!data.length) return [];\r\n  let pos = 0;\r\n  const res = [];\r\n  const digits = Array.from(data, (d) => {\r\n    anumber(d);\r\n    if (d < 0 || d >= from) throw new Error(`invalid integer: ${d}`);\r\n    return d;\r\n  });\r\n  const dlen = digits.length;\r\n  while (true) {\r\n    let carry = 0;\r\n    let done = true;\r\n    for (let i = pos; i < dlen; i++) {\r\n      const digit = digits[i]!;\r\n      const fromCarry = from * carry;\r\n      const digitBase = fromCarry + digit;\r\n      if (\r\n        !Number.isSafeInteger(digitBase) ||\r\n        fromCarry / from !== carry ||\r\n        digitBase - digit !== fromCarry\r\n      ) {\r\n        throw new Error('convertRadix: carry overflow');\r\n      }\r\n      const div = digitBase / to;\r\n      carry = digitBase % to;\r\n      const rounded = Math.floor(div);\r\n      digits[i] = rounded;\r\n      if (!Number.isSafeInteger(rounded) || rounded * to + carry !== digitBase)\r\n        throw new Error('convertRadix: carry overflow');\r\n      if (!done) continue;\r\n      else if (!rounded) pos = i;\r\n      else done = false;\r\n    }\r\n    res.push(carry);\r\n    if (done) break;\r\n  }\r\n  for (let i = 0; i < data.length - 1 && data[i] === 0; i++) res.push(0);\r\n  return res.reverse();\r\n}\r\n\r\nconst gcd = (a: number, b: number): number => (b === 0 ? a : gcd(b, a % b));\r\nconst radix2carry = /* @__NO_SIDE_EFFECTS__ */ (from: number, to: number) =>\r\n  from + (to - gcd(from, to));\r\nconst powers: number[] = /* @__PURE__ */ (() => {\r\n  let res = [];\r\n  for (let i = 0; i < 40; i++) res.push(2 ** i);\r\n  return res;\r\n})();\r\n/**\r\n * Implemented with numbers, because BigInt is 5x slower\r\n */\r\nfunction convertRadix2(data: number[], from: number, to: number, padding: boolean): number[] {\r\n  aArr(data);\r\n  if (from <= 0 || from > 32) throw new Error(`convertRadix2: wrong from=${from}`);\r\n  if (to <= 0 || to > 32) throw new Error(`convertRadix2: wrong to=${to}`);\r\n  if (radix2carry(from, to) > 32) {\r\n    throw new Error(\r\n      `convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`\r\n    );\r\n  }\r\n  let carry = 0;\r\n  let pos = 0; // bitwise position in current element\r\n  const max = powers[from]!;\r\n  const mask = powers[to]! - 1;\r\n  const res: number[] = [];\r\n  for (const n of data) {\r\n    anumber(n);\r\n    if (n >= max) throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\r\n    carry = (carry << from) | n;\r\n    if (pos + from > 32) throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\r\n    pos += from;\r\n    for (; pos >= to; pos -= to) res.push(((carry >> (pos - to)) & mask) >>> 0);\r\n    const pow = powers[pos];\r\n    if (pow === undefined) throw new Error('invalid carry');\r\n    carry &= pow - 1; // clean carry, otherwise it will cause overflow\r\n  }\r\n  carry = (carry << (to - pos)) & mask;\r\n  if (!padding && pos >= from) throw new Error('Excess padding');\r\n  if (!padding && carry > 0) throw new Error(`Non-zero padding: ${carry}`);\r\n  if (padding && pos > 0) res.push(carry >>> 0);\r\n  return res;\r\n}\r\n\r\n/**\r\n * @__NO_SIDE_EFFECTS__\r\n */\r\nfunction radix(num: number): Coder<Uint8Array, number[]> {\r\n  anumber(num);\r\n  const _256 = 2 ** 8;\r\n  return {\r\n    encode: (bytes: Uint8Array) => {\r\n      if (!isBytes(bytes)) throw new Error('radix.encode input should be Uint8Array');\r\n      return convertRadix(Array.from(bytes), _256, num);\r\n    },\r\n    decode: (digits: number[]) => {\r\n      anumArr('radix.decode', digits);\r\n      return Uint8Array.from(convertRadix(digits, num, _256));\r\n    },\r\n  };\r\n}\r\n\r\n/**\r\n * If both bases are power of same number (like `2**8 <-> 2**64`),\r\n * there is a linear algorithm. For now we have implementation for power-of-two bases only.\r\n * @__NO_SIDE_EFFECTS__\r\n */\r\nfunction radix2(bits: number, revPadding = false): Coder<Uint8Array, number[]> {\r\n  anumber(bits);\r\n  if (bits <= 0 || bits > 32) throw new Error('radix2: bits should be in (0..32]');\r\n  if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\r\n    throw new Error('radix2: carry overflow');\r\n  return {\r\n    encode: (bytes: Uint8Array) => {\r\n      if (!isBytes(bytes)) throw new Error('radix2.encode input should be Uint8Array');\r\n      return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\r\n    },\r\n    decode: (digits: number[]) => {\r\n      anumArr('radix2.decode', digits);\r\n      return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\r\n    },\r\n  };\r\n}\r\n\r\ntype ArgumentTypes<F extends Function> = F extends (...args: infer A) => any ? A : never;\r\nfunction unsafeWrapper<T extends (...args: any) => any>(fn: T) {\r\n  afn(fn);\r\n  return function (...args: ArgumentTypes<T>): ReturnType<T> | void {\r\n    try {\r\n      return fn.apply(null, args);\r\n    } catch (e) {}\r\n  };\r\n}\r\n\r\nfunction checksum(\r\n  len: number,\r\n  fn: (data: Uint8Array) => Uint8Array\r\n): Coder<Uint8Array, Uint8Array> {\r\n  anumber(len);\r\n  afn(fn);\r\n  return {\r\n    encode(data: Uint8Array) {\r\n      if (!isBytes(data)) throw new Error('checksum.encode: input should be Uint8Array');\r\n      const sum = fn(data).slice(0, len);\r\n      const res = new Uint8Array(data.length + len);\r\n      res.set(data);\r\n      res.set(sum, data.length);\r\n      return res;\r\n    },\r\n    decode(data: Uint8Array) {\r\n      if (!isBytes(data)) throw new Error('checksum.decode: input should be Uint8Array');\r\n      const payload = data.slice(0, -len);\r\n      const oldChecksum = data.slice(-len);\r\n      const newChecksum = fn(payload).slice(0, len);\r\n      for (let i = 0; i < len; i++)\r\n        if (newChecksum[i] !== oldChecksum[i]) throw new Error('Invalid checksum');\r\n      return payload;\r\n    },\r\n  };\r\n}\r\n\r\n// prettier-ignore\r\nexport const utils: { alphabet: typeof alphabet; chain: typeof chain; checksum: typeof checksum; convertRadix: typeof convertRadix; convertRadix2: typeof convertRadix2; radix: typeof radix; radix2: typeof radix2; join: typeof join; padding: typeof padding; } = {\r\n  alphabet, chain, checksum, convertRadix, convertRadix2, radix, radix2, join, padding,\r\n};\r\n\r\n// RFC 4648 aka RFC 3548\r\n// ---------------------\r\n\r\n/**\r\n * base16 encoding from RFC 4648.\r\n * @example\r\n * ```js\r\n * base16.encode(Uint8Array.from([0x12, 0xab]));\r\n * // => '12AB'\r\n * ```\r\n */\r\nexport const base16: BytesCoder = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\r\n\r\n/**\r\n * base32 encoding from RFC 4648. Has padding.\r\n * Use `base32nopad` for unpadded version.\r\n * Also check out `base32hex`, `base32hexnopad`, `base32crockford`.\r\n * @example\r\n * ```js\r\n * base32.encode(Uint8Array.from([0x12, 0xab]));\r\n * // => 'CKVQ===='\r\n * base32.decode('CKVQ====');\r\n * // => Uint8Array.from([0x12, 0xab])\r\n * ```\r\n */\r\nexport const base32: BytesCoder = chain(\r\n  radix2(5),\r\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'),\r\n  padding(5),\r\n  join('')\r\n);\r\n\r\n/**\r\n * base32 encoding from RFC 4648. No padding.\r\n * Use `base32` for padded version.\r\n * Also check out `base32hex`, `base32hexnopad`, `base32crockford`.\r\n * @example\r\n * ```js\r\n * base32nopad.encode(Uint8Array.from([0x12, 0xab]));\r\n * // => 'CKVQ'\r\n * base32nopad.decode('CKVQ');\r\n * // => Uint8Array.from([0x12, 0xab])\r\n * ```\r\n */\r\nexport const base32nopad: BytesCoder = chain(\r\n  radix2(5),\r\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'),\r\n  join('')\r\n);\r\n/**\r\n * base32 encoding from RFC 4648. Padded. Compared to ordinary `base32`, slightly different alphabet.\r\n * Use `base32hexnopad` for unpadded version.\r\n * @example\r\n * ```js\r\n * base32hex.encode(Uint8Array.from([0x12, 0xab]));\r\n * // => '2ALG===='\r\n * base32hex.decode('2ALG====');\r\n * // => Uint8Array.from([0x12, 0xab])\r\n * ```\r\n */\r\nexport const base32hex: BytesCoder = chain(\r\n  radix2(5),\r\n  alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'),\r\n  padding(5),\r\n  join('')\r\n);\r\n\r\n/**\r\n * base32 encoding from RFC 4648. No padding. Compared to ordinary `base32`, slightly different alphabet.\r\n * Use `base32hex` for padded version.\r\n * @example\r\n * ```js\r\n * base32hexnopad.encode(Uint8Array.from([0x12, 0xab]));\r\n * // => '2ALG'\r\n * base32hexnopad.decode('2ALG');\r\n * // => Uint8Array.from([0x12, 0xab])\r\n * ```\r\n */\r\nexport const base32hexnopad: BytesCoder = chain(\r\n  radix2(5),\r\n  alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'),\r\n  join('')\r\n);\r\n/**\r\n * base32 encoding from RFC 4648. Doug Crockford's version.\r\n * https://www.crockford.com/base32.html\r\n * @example\r\n * ```js\r\n * base32crockford.encode(Uint8Array.from([0x12, 0xab]));\r\n * // => '2ANG'\r\n * base32crockford.decode('2ANG');\r\n * // => Uint8Array.from([0x12, 0xab])\r\n * ```\r\n */\r\nexport const base32crockford: BytesCoder = chain(\r\n  radix2(5),\r\n  alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'),\r\n  join(''),\r\n  normalize((s: string) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1'))\r\n);\r\n\r\n// Built-in base64 conversion https://caniuse.com/mdn-javascript_builtins_uint8array_frombase64\r\n// prettier-ignore\r\nconst hasBase64Builtin: boolean = /* @__PURE__ */ (() =>\r\n  typeof (Uint8Array as any).from([]).toBase64 === 'function' &&\r\n  typeof (Uint8Array as any).fromBase64 === 'function')();\r\n\r\nconst decodeBase64Builtin = (s: string, isUrl: boolean) => {\r\n  astr('base64', s);\r\n  const re = isUrl ? /^[A-Za-z0-9=_-]+$/ : /^[A-Za-z0-9=+/]+$/;\r\n  const alphabet = isUrl ? 'base64url' : 'base64';\r\n  if (s.length > 0 && !re.test(s)) throw new Error('invalid base64');\r\n  return (Uint8Array as any).fromBase64(s, { alphabet, lastChunkHandling: 'strict' });\r\n};\r\n\r\n/**\r\n * base64 from RFC 4648. Padded.\r\n * Use `base64nopad` for unpadded version.\r\n * Also check out `base64url`, `base64urlnopad`.\r\n * Falls back to built-in function, when available.\r\n * @example\r\n * ```js\r\n * base64.encode(Uint8Array.from([0x12, 0xab]));\r\n * // => 'Eqs='\r\n * base64.decode('Eqs=');\r\n * // => Uint8Array.from([0x12, 0xab])\r\n * ```\r\n */\r\n// prettier-ignore\r\nexport const base64: BytesCoder = hasBase64Builtin ? {\r\n  encode(b) { abytes(b); return (b as any).toBase64(); },\r\n  decode(s) { return decodeBase64Builtin(s, false); },\r\n} : chain(\r\n  radix2(6),\r\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'),\r\n  padding(6),\r\n  join('')\r\n);\r\n/**\r\n * base64 from RFC 4648. No padding.\r\n * Use `base64` for padded version.\r\n * @example\r\n * ```js\r\n * base64nopad.encode(Uint8Array.from([0x12, 0xab]));\r\n * // => 'Eqs'\r\n * base64nopad.decode('Eqs');\r\n * // => Uint8Array.from([0x12, 0xab])\r\n * ```\r\n */\r\nexport const base64nopad: BytesCoder = chain(\r\n  radix2(6),\r\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'),\r\n  join('')\r\n);\r\n\r\n/**\r\n * base64 from RFC 4648, using URL-safe alphabet. Padded.\r\n * Use `base64urlnopad` for unpadded version.\r\n * Falls back to built-in function, when available.\r\n * @example\r\n * ```js\r\n * base64url.encode(Uint8Array.from([0x12, 0xab]));\r\n * // => 'Eqs='\r\n * base64url.decode('Eqs=');\r\n * // => Uint8Array.from([0x12, 0xab])\r\n * ```\r\n */\r\n// prettier-ignore\r\nexport const base64url: BytesCoder = hasBase64Builtin ? {\r\n  encode(b) { abytes(b); return (b as any).toBase64({ alphabet: 'base64url' }); },\r\n  decode(s) { return decodeBase64Builtin(s, true); },\r\n} : chain(\r\n  radix2(6),\r\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'),\r\n  padding(6),\r\n  join('')\r\n);\r\n\r\n/**\r\n * base64 from RFC 4648, using URL-safe alphabet. No padding.\r\n * Use `base64url` for padded version.\r\n * @example\r\n * ```js\r\n * base64urlnopad.encode(Uint8Array.from([0x12, 0xab]));\r\n * // => 'Eqs'\r\n * base64urlnopad.decode('Eqs');\r\n * // => Uint8Array.from([0x12, 0xab])\r\n * ```\r\n */\r\nexport const base64urlnopad: BytesCoder = chain(\r\n  radix2(6),\r\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'),\r\n  join('')\r\n);\r\n\r\n// base58 code\r\n// -----------\r\nconst genBase58 = /* @__NO_SIDE_EFFECTS__ */ (abc: string) =>\r\n  chain(radix(58), alphabet(abc), join(''));\r\n\r\n/**\r\n * base58: base64 without ambigous characters +, /, 0, O, I, l.\r\n * Quadratic (O(n^2)) - so, can't be used on large inputs.\r\n * @example\r\n * ```js\r\n * base58.decode('01abcdef');\r\n * // => '3UhJW'\r\n * ```\r\n */\r\nexport const base58: BytesCoder = genBase58(\r\n  '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\r\n);\r\n/**\r\n * base58: flickr version. Check out `base58`.\r\n */\r\nexport const base58flickr: BytesCoder = genBase58(\r\n  '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\r\n);\r\n/**\r\n * base58: XRP version. Check out `base58`.\r\n */\r\nexport const base58xrp: BytesCoder = genBase58(\r\n  'rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz'\r\n);\r\n\r\n// Data len (index) -> encoded block len\r\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\r\n\r\n/**\r\n * base58: XMR version. Check out `base58`.\r\n * Done in 8-byte blocks (which equals 11 chars in decoding). Last (non-full) block padded with '1' to size in XMR_BLOCK_LEN.\r\n * Block encoding significantly reduces quadratic complexity of base58.\r\n */\r\nexport const base58xmr: BytesCoder = {\r\n  encode(data: Uint8Array) {\r\n    let res = '';\r\n    for (let i = 0; i < data.length; i += 8) {\r\n      const block = data.subarray(i, i + 8);\r\n      res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length]!, '1');\r\n    }\r\n    return res;\r\n  },\r\n  decode(str: string) {\r\n    let res: number[] = [];\r\n    for (let i = 0; i < str.length; i += 11) {\r\n      const slice = str.slice(i, i + 11);\r\n      const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\r\n      const block = base58.decode(slice);\r\n      for (let j = 0; j < block.length - blockLen; j++) {\r\n        if (block[j] !== 0) throw new Error('base58xmr: wrong padding');\r\n      }\r\n      res = res.concat(Array.from(block.slice(block.length - blockLen)));\r\n    }\r\n    return Uint8Array.from(res);\r\n  },\r\n};\r\n\r\n/**\r\n * Method, which creates base58check encoder.\r\n * Requires function, calculating sha256.\r\n */\r\nexport const createBase58check = (sha256: (data: Uint8Array) => Uint8Array): BytesCoder =>\r\n  chain(\r\n    checksum(4, (data) => sha256(sha256(data))),\r\n    base58\r\n  );\r\n\r\n/**\r\n * Use `createBase58check` instead.\r\n * @deprecated\r\n */\r\nexport const base58check: (sha256: (data: Uint8Array) => Uint8Array) => BytesCoder =\r\n  createBase58check;\r\n\r\n// Bech32 code\r\n// -----------\r\nexport interface Bech32Decoded<Prefix extends string = string> {\r\n  prefix: Prefix;\r\n  words: number[];\r\n}\r\nexport interface Bech32DecodedWithArray<Prefix extends string = string> {\r\n  prefix: Prefix;\r\n  words: number[];\r\n  bytes: Uint8Array;\r\n}\r\n\r\nconst BECH_ALPHABET: Coder<number[], string> = chain(\r\n  alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'),\r\n  join('')\r\n);\r\n\r\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\r\nfunction bech32Polymod(pre: number): number {\r\n  const b = pre >> 25;\r\n  let chk = (pre & 0x1ffffff) << 5;\r\n  for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\r\n    if (((b >> i) & 1) === 1) chk ^= POLYMOD_GENERATORS[i]!;\r\n  }\r\n  return chk;\r\n}\r\n\r\nfunction bechChecksum(prefix: string, words: number[], encodingConst = 1): string {\r\n  const len = prefix.length;\r\n  let chk = 1;\r\n  for (let i = 0; i < len; i++) {\r\n    const c = prefix.charCodeAt(i);\r\n    if (c < 33 || c > 126) throw new Error(`Invalid prefix (${prefix})`);\r\n    chk = bech32Polymod(chk) ^ (c >> 5);\r\n  }\r\n  chk = bech32Polymod(chk);\r\n  for (let i = 0; i < len; i++) chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\r\n  for (let v of words) chk = bech32Polymod(chk) ^ v;\r\n  for (let i = 0; i < 6; i++) chk = bech32Polymod(chk);\r\n  chk ^= encodingConst;\r\n  return BECH_ALPHABET.encode(convertRadix2([chk % powers[30]!], 30, 5, false));\r\n}\r\n\r\nexport interface Bech32 {\r\n  encode<Prefix extends string>(\r\n    prefix: Prefix,\r\n    words: number[] | Uint8Array,\r\n    limit?: number | false\r\n  ): `${Lowercase<Prefix>}1${string}`;\r\n  decode<Prefix extends string>(\r\n    str: `${Prefix}1${string}`,\r\n    limit?: number | false\r\n  ): Bech32Decoded<Prefix>;\r\n  encodeFromBytes(prefix: string, bytes: Uint8Array): string;\r\n  decodeToBytes(str: string): Bech32DecodedWithArray;\r\n  decodeUnsafe(str: string, limit?: number | false): void | Bech32Decoded<string>;\r\n  fromWords(to: number[]): Uint8Array;\r\n  fromWordsUnsafe(to: number[]): void | Uint8Array;\r\n  toWords(from: Uint8Array): number[];\r\n}\r\n/**\r\n * @__NO_SIDE_EFFECTS__\r\n */\r\nfunction genBech32(encoding: 'bech32' | 'bech32m'): Bech32 {\r\n  const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\r\n  const _words = radix2(5);\r\n  const fromWords = _words.decode;\r\n  const toWords = _words.encode;\r\n  const fromWordsUnsafe = unsafeWrapper(fromWords);\r\n\r\n  function encode<Prefix extends string>(\r\n    prefix: Prefix,\r\n    words: number[] | Uint8Array,\r\n    limit: number | false = 90\r\n  ): `${Lowercase<Prefix>}1${string}` {\r\n    astr('bech32.encode prefix', prefix);\r\n    if (isBytes(words)) words = Array.from(words);\r\n    anumArr('bech32.encode', words);\r\n    const plen = prefix.length;\r\n    if (plen === 0) throw new TypeError(`Invalid prefix length ${plen}`);\r\n    const actualLength = plen + 7 + words.length;\r\n    if (limit !== false && actualLength > limit)\r\n      throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\r\n    const lowered = prefix.toLowerCase();\r\n    const sum = bechChecksum(lowered, words, ENCODING_CONST);\r\n    return `${lowered}1${BECH_ALPHABET.encode(words)}${sum}` as `${Lowercase<Prefix>}1${string}`;\r\n  }\r\n\r\n  function decode<Prefix extends string>(\r\n    str: `${Prefix}1${string}`,\r\n    limit?: number | false\r\n  ): Bech32Decoded<Prefix>;\r\n  function decode(str: string, limit?: number | false): Bech32Decoded;\r\n  function decode(str: string, limit: number | false = 90): Bech32Decoded {\r\n    astr('bech32.decode input', str);\r\n    const slen = str.length;\r\n    if (slen < 8 || (limit !== false && slen > limit))\r\n      throw new TypeError(`invalid string length: ${slen} (${str}). Expected (8..${limit})`);\r\n    // don't allow mixed case\r\n    const lowered = str.toLowerCase();\r\n    if (str !== lowered && str !== str.toUpperCase())\r\n      throw new Error(`String must be lowercase or uppercase`);\r\n    const sepIndex = lowered.lastIndexOf('1');\r\n    if (sepIndex === 0 || sepIndex === -1)\r\n      throw new Error(`Letter \"1\" must be present between prefix and data only`);\r\n    const prefix = lowered.slice(0, sepIndex);\r\n    const data = lowered.slice(sepIndex + 1);\r\n    if (data.length < 6) throw new Error('Data must be at least 6 characters long');\r\n    const words = BECH_ALPHABET.decode(data).slice(0, -6);\r\n    const sum = bechChecksum(prefix, words, ENCODING_CONST);\r\n    if (!data.endsWith(sum)) throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\r\n    return { prefix, words };\r\n  }\r\n\r\n  const decodeUnsafe = unsafeWrapper(decode);\r\n\r\n  function decodeToBytes(str: string): Bech32DecodedWithArray {\r\n    const { prefix, words } = decode(str, false);\r\n    return { prefix, words, bytes: fromWords(words) };\r\n  }\r\n\r\n  function encodeFromBytes(prefix: string, bytes: Uint8Array) {\r\n    return encode(prefix, toWords(bytes));\r\n  }\r\n\r\n  return {\r\n    encode,\r\n    decode,\r\n    encodeFromBytes,\r\n    decodeToBytes,\r\n    decodeUnsafe,\r\n    fromWords,\r\n    fromWordsUnsafe,\r\n    toWords,\r\n  };\r\n}\r\n\r\n/**\r\n * bech32 from BIP 173. Operates on words.\r\n * For high-level, check out scure-btc-signer:\r\n * https://github.com/paulmillr/scure-btc-signer.\r\n */\r\nexport const bech32: Bech32 = genBech32('bech32');\r\n\r\n/**\r\n * bech32m from BIP 350. Operates on words.\r\n * It was to mitigate `bech32` weaknesses.\r\n * For high-level, check out scure-btc-signer:\r\n * https://github.com/paulmillr/scure-btc-signer.\r\n */\r\nexport const bech32m: Bech32 = genBech32('bech32m');\r\n\r\ndeclare const TextEncoder: any;\r\ndeclare const TextDecoder: any;\r\n\r\n/**\r\n * UTF-8-to-byte decoder. Uses built-in TextDecoder / TextEncoder.\r\n * @example\r\n * ```js\r\n * const b = utf8.decode(\"hey\"); // => new Uint8Array([ 104, 101, 121 ])\r\n * const str = utf8.encode(b); // \"hey\"\r\n * ```\r\n */\r\nexport const utf8: BytesCoder = {\r\n  encode: (data) => new TextDecoder().decode(data),\r\n  decode: (str) => new TextEncoder().encode(str),\r\n};\r\n\r\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\r\n// prettier-ignore\r\nconst hasHexBuiltin: boolean = /* @__PURE__ */ (() =>\r\n  typeof (Uint8Array as any).from([]).toHex === 'function' &&\r\n  typeof (Uint8Array as any).fromHex === 'function')();\r\n// prettier-ignore\r\nconst hexBuiltin: BytesCoder = {\r\n  encode(data) { abytes(data); return (data as any).toHex(); },\r\n  decode(s) { astr('hex', s); return (Uint8Array as any).fromHex(s); },\r\n};\r\n/**\r\n * hex string decoder. Uses built-in function, when available.\r\n * @example\r\n * ```js\r\n * const b = hex.decode(\"0102ff\"); // => new Uint8Array([ 1, 2, 255 ])\r\n * const str = hex.encode(b); // \"0102ff\"\r\n * ```\r\n */\r\nexport const hex: BytesCoder = hasHexBuiltin\r\n  ? hexBuiltin\r\n  : chain(\r\n      radix2(4),\r\n      alphabet('0123456789abcdef'),\r\n      join(''),\r\n      normalize((s: string) => {\r\n        if (typeof s !== 'string' || s.length % 2 !== 0)\r\n          throw new TypeError(\r\n            `hex.decode: expected string, got ${typeof s} with length ${s.length}`\r\n          );\r\n        return s.toLowerCase();\r\n      })\r\n    );\r\n\r\nexport type SomeCoders = {\r\n  utf8: BytesCoder;\r\n  hex: BytesCoder;\r\n  base16: BytesCoder;\r\n  base32: BytesCoder;\r\n  base64: BytesCoder;\r\n  base64url: BytesCoder;\r\n  base58: BytesCoder;\r\n  base58xmr: BytesCoder;\r\n};\r\n// prettier-ignore\r\nconst CODERS: SomeCoders = {\r\n  utf8, hex, base16, base32, base64, base64url, base58, base58xmr\r\n};\r\ntype CoderType = keyof SomeCoders;\r\nconst coderTypeError =\r\n  'Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr';\r\n\r\n/** @deprecated */\r\nexport const bytesToString = (type: CoderType, bytes: Uint8Array): string => {\r\n  if (typeof type !== 'string' || !CODERS.hasOwnProperty(type)) throw new TypeError(coderTypeError);\r\n  if (!isBytes(bytes)) throw new TypeError('bytesToString() expects Uint8Array');\r\n  return CODERS[type].encode(bytes);\r\n};\r\n\r\n/** @deprecated */\r\nexport const str: (type: CoderType, bytes: Uint8Array) => string = bytesToString; // as in python, but for bytes only\r\n\r\n/** @deprecated */\r\nexport const stringToBytes = (type: CoderType, str: string): Uint8Array => {\r\n  if (!CODERS.hasOwnProperty(type)) throw new TypeError(coderTypeError);\r\n  if (typeof str !== 'string') throw new TypeError('stringToBytes() expects string');\r\n  return CODERS[type].decode(str);\r\n};\r\n/** @deprecated */\r\nexport const bytes: (type: CoderType, str: string) => Uint8Array = stringToBytes;\r\n", "/**\r\n * Audited & minimal JS implementation of\r\n * [BIP39 mnemonic phrases](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki).\r\n * @module\r\n * @example\r\n```js\r\nimport * as bip39 from '@scure/bip39';\r\nimport { wordlist } from '@scure/bip39/wordlists/english';\r\nconst mn = bip39.generateMnemonic(wordlist);\r\nconsole.log(mn);\r\nconst ent = bip39.mnemonicToEntropy(mn, wordlist)\r\nbip39.entropyToMnemonic(ent, wordlist);\r\nbip39.validateMnemonic(mn, wordlist);\r\nawait bip39.mnemonicToSeed(mn, 'password');\r\nbip39.mnemonicToSeedSync(mn, 'password');\r\n\r\n// Wordlists\r\nimport { wordlist as czech } from '@scure/bip39/wordlists/czech';\r\nimport { wordlist as english } from '@scure/bip39/wordlists/english';\r\nimport { wordlist as french } from '@scure/bip39/wordlists/french';\r\nimport { wordlist as italian } from '@scure/bip39/wordlists/italian';\r\nimport { wordlist as japanese } from '@scure/bip39/wordlists/japanese';\r\nimport { wordlist as korean } from '@scure/bip39/wordlists/korean';\r\nimport { wordlist as portuguese } from '@scure/bip39/wordlists/portuguese';\r\nimport { wordlist as simplifiedChinese } from '@scure/bip39/wordlists/simplified-chinese';\r\nimport { wordlist as spanish } from '@scure/bip39/wordlists/spanish';\r\nimport { wordlist as traditionalChinese } from '@scure/bip39/wordlists/traditional-chinese';\r\n```\r\n */\r\n/*! scure-bip39 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */\r\nimport { pbkdf2, pbkdf2Async } from '@noble/hashes/pbkdf2';\r\nimport { sha256, sha512 } from '@noble/hashes/sha2';\r\nimport { abytes, anumber, randomBytes } from '@noble/hashes/utils';\r\nimport { utils as baseUtils } from '@scure/base';\r\n// Japanese wordlist\r\nconst isJapanese = (wordlist) => wordlist[0] === '\\u3042\\u3044\\u3053\\u304f\\u3057\\u3093';\r\n// Normalization replaces equivalent sequences of characters\r\n// so that any two texts that are equivalent will be reduced\r\n// to the same sequence of code points, called the normal form of the original text.\r\n// https://tonsky.me/blog/unicode/#why-is-a----\r\nfunction nfkd(str) {\r\n    if (typeof str !== 'string')\r\n        throw new TypeError('invalid mnemonic type: ' + typeof str);\r\n    return str.normalize('NFKD');\r\n}\r\nfunction normalize(str) {\r\n    const norm = nfkd(str);\r\n    const words = norm.split(' ');\r\n    if (![12, 15, 18, 21, 24].includes(words.length))\r\n        throw new Error('Invalid mnemonic');\r\n    return { nfkd: norm, words };\r\n}\r\nfunction aentropy(ent) {\r\n    abytes(ent, 16, 20, 24, 28, 32);\r\n}\r\n/**\r\n * Generate x random words. Uses Cryptographically-Secure Random Number Generator.\r\n * @param wordlist imported wordlist for specific language\r\n * @param strength mnemonic strength 128-256 bits\r\n * @example\r\n * generateMnemonic(wordlist, 128)\r\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\r\n */\r\nexport function generateMnemonic(wordlist, strength = 128) {\r\n    anumber(strength);\r\n    if (strength % 32 !== 0 || strength > 256)\r\n        throw new TypeError('Invalid entropy');\r\n    return entropyToMnemonic(randomBytes(strength / 8), wordlist);\r\n}\r\nconst calcChecksum = (entropy) => {\r\n    // Checksum is ent.length/4 bits long\r\n    const bitsLeft = 8 - entropy.length / 4;\r\n    // Zero rightmost \"bitsLeft\" bits in byte\r\n    // For example: bitsLeft=4 val=10111101 -> 10110000\r\n    return new Uint8Array([(sha256(entropy)[0] >> bitsLeft) << bitsLeft]);\r\n};\r\nfunction getCoder(wordlist) {\r\n    if (!Array.isArray(wordlist) || wordlist.length !== 2048 || typeof wordlist[0] !== 'string')\r\n        throw new Error('Wordlist: expected array of 2048 strings');\r\n    wordlist.forEach((i) => {\r\n        if (typeof i !== 'string')\r\n            throw new Error('wordlist: non-string element: ' + i);\r\n    });\r\n    return baseUtils.chain(baseUtils.checksum(1, calcChecksum), baseUtils.radix2(11, true), baseUtils.alphabet(wordlist));\r\n}\r\n/**\r\n * Reversible: Converts mnemonic string to raw entropy in form of byte array.\r\n * @param mnemonic 12-24 words\r\n * @param wordlist imported wordlist for specific language\r\n * @example\r\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\r\n * mnemonicToEntropy(mnem, wordlist)\r\n * // Produces\r\n * new Uint8Array([\r\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\r\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\r\n * ])\r\n */\r\nexport function mnemonicToEntropy(mnemonic, wordlist) {\r\n    const { words } = normalize(mnemonic);\r\n    const entropy = getCoder(wordlist).decode(words);\r\n    aentropy(entropy);\r\n    return entropy;\r\n}\r\n/**\r\n * Reversible: Converts raw entropy in form of byte array to mnemonic string.\r\n * @param entropy byte array\r\n * @param wordlist imported wordlist for specific language\r\n * @returns 12-24 words\r\n * @example\r\n * const ent = new Uint8Array([\r\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\r\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\r\n * ]);\r\n * entropyToMnemonic(ent, wordlist);\r\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\r\n */\r\nexport function entropyToMnemonic(entropy, wordlist) {\r\n    aentropy(entropy);\r\n    const words = getCoder(wordlist).encode(entropy);\r\n    return words.join(isJapanese(wordlist) ? '\\u3000' : ' ');\r\n}\r\n/**\r\n * Validates mnemonic for being 12-24 words contained in `wordlist`.\r\n */\r\nexport function validateMnemonic(mnemonic, wordlist) {\r\n    try {\r\n        mnemonicToEntropy(mnemonic, wordlist);\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nconst psalt = (passphrase) => nfkd('mnemonic' + passphrase);\r\n/**\r\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\r\n * @param mnemonic 12-24 words\r\n * @param passphrase string that will additionally protect the key\r\n * @returns 64 bytes of key data\r\n * @example\r\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\r\n * await mnemonicToSeed(mnem, 'password');\r\n * // new Uint8Array([...64 bytes])\r\n */\r\nexport function mnemonicToSeed(mnemonic, passphrase = '') {\r\n    return pbkdf2Async(sha512, normalize(mnemonic).nfkd, psalt(passphrase), { c: 2048, dkLen: 64 });\r\n}\r\n/**\r\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\r\n * @param mnemonic 12-24 words\r\n * @param passphrase string that will additionally protect the key\r\n * @returns 64 bytes of key data\r\n * @example\r\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\r\n * mnemonicToSeedSync(mnem, 'password');\r\n * // new Uint8Array([...64 bytes])\r\n */\r\nexport function mnemonicToSeedSync(mnemonic, passphrase = '') {\r\n    return pbkdf2(sha512, normalize(mnemonic).nfkd, psalt(passphrase), { c: 2048, dkLen: 64 });\r\n}\r\n", "/**\r\n * SHA2-512 a.k.a. sha512 and sha384. It is slower than sha256 in js because u64 operations are slow.\r\n *\r\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\r\n * [the paper on truncated SHA512/256](https://eprint.iacr.org/2010/548.pdf).\r\n * @module\r\n * @deprecated\r\n */\r\nimport {\r\n  SHA384 as SHA384n,\r\n  sha384 as sha384n,\r\n  sha512_224 as sha512_224n,\r\n  SHA512_224 as SHA512_224n,\r\n  sha512_256 as sha512_256n,\r\n  SHA512_256 as SHA512_256n,\r\n  SHA512 as SHA512n,\r\n  sha512 as sha512n,\r\n} from './sha2.ts';\r\n/** @deprecated Use import from `noble/hashes/sha2` module */\r\nexport const SHA512: typeof SHA512n = SHA512n;\r\n/** @deprecated Use import from `noble/hashes/sha2` module */\r\nexport const sha512: typeof sha512n = sha512n;\r\n/** @deprecated Use import from `noble/hashes/sha2` module */\r\nexport const SHA384: typeof SHA384n = SHA384n;\r\n/** @deprecated Use import from `noble/hashes/sha2` module */\r\nexport const sha384: typeof sha384n = sha384n;\r\n/** @deprecated Use import from `noble/hashes/sha2` module */\r\nexport const SHA512_224: typeof SHA512_224n = SHA512_224n;\r\n/** @deprecated Use import from `noble/hashes/sha2` module */\r\nexport const sha512_224: typeof sha512_224n = sha512_224n;\r\n/** @deprecated Use import from `noble/hashes/sha2` module */\r\nexport const SHA512_256: typeof SHA512_256n = SHA512_256n;\r\n/** @deprecated Use import from `noble/hashes/sha2` module */\r\nexport const sha512_256: typeof sha512_256n = sha512_256n;\r\n"],
  "mappings": "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AI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,CAAC;AACP,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,CAAC;AACP,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,CAAC;AACP,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,CAAC;AACP,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,CAAC;AACP,cAAM,IAAI;AACV,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AA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AAG;EAAG;EAAI;EAAI;EAAG;EAAG;EAAI;EAAG;EAAG;EAAI;EAAG;EAAG;EACnD;EAAI;EAAG;EAAI;EAAG;EAAG;EAAG;EAAI;EAAI;EAAI;EAAI;EAAG;EAAG;EAAG;EAAG;EAAG;EACnD;EAAG;EAAG;EAAG;EAAG;EAAI;EAAI;EAAI;EAAI;EAAG;EAAG;EAAG;EAAI;EAAG;EAAG;EAAI;EACnD;EAAG;EAAG;EAAG;EAAG;EAAG;EAAG;EAAI;EAAI;EAAI;EAAG;EAAI;EAAI;EAAG;EAAG;EAAG;EAClD;EAAG;EAAI;EAAG;EAAI;EAAG;EAAI;EAAG;EAAG;EAAG;EAAI;EAAG;EAAG;EAAI;EAAI;EAAG;EACnD;EAAI;EAAG;EAAG;EAAI;EAAI;EAAI;EAAG;EAAI;EAAG;EAAG;EAAG;EAAG;EAAG;EAAG;EAAG;EAClD;EAAI;EAAI;EAAG;EAAI;EAAI;EAAG;EAAG;EAAG;EAAG;EAAG;EAAI;EAAG;EAAG;EAAG;EAAG;EAClD;EAAG;EAAI;EAAI;EAAG;EAAI;EAAG;EAAG;EAAG;EAAI;EAAG;EAAI;EAAG;EAAG;EAAG;EAAI;EACnD;EAAI;EAAG;EAAG;EAAG;EAAG;EAAG;EAAG;EAAG;EAAI;EAAI;EAAG;EAAI;EAAG;EAAI;EAAI;EACnD;EAAG;EAAG;EAAG;EAAG;EAAG;EAAG;EAAG;EAAG;EAAG;EAAG;EAAI;EAAI;EAAI;EAAI;EAAI;EAClD;EAAI;EAAI;EAAG;EAAG;EAAG;EAAI;EAAI;EAAG;EAAG;EAAI;EAAG;EAAG;EAAI;EAAG;EAAG;;EAEnD;EAAI;EAAG;EAAI;EAAG;EAAG;EAAG;EAAI;EAAI;EAAI;EAAI;EAAG;EAAG;EAAG;EAAG;EAAG;EACnD;EAAG;EAAG;EAAG;EAAG;EAAI;EAAI;EAAI;EAAI;EAAG;EAAG;EAAG;EAAI;EAAG;EAAG;EAAI;EACnD;EAAG;EAAG;EAAG;EAAG;EAAG;EAAG;EAAI;EAAI;EAAI;EAAG;EAAI;EAAI;EAAG;EAAG;EAAG;EAClD;EAAG;EAAI;EAAG;EAAI;EAAG;EAAI;EAAG;EAAG;EAAG;EAAI;EAAG;EAAG;EAAI;EAAI;EAAG;CACpD;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",
  "names": ["i", "j", "string", "mask", "add", "crypto", "type", "mask", "tuple", "hex", "array", "isLE", "_32n", "blake2b", "isBytes", "abytes", "anumber", "padding", "mask", "alphabet", "abytes", "sha256", "isBytes", "hasHexBuiltin", "abytes", "normalize", "normalize", "sha512"]
}
